/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/browser-tabs-lock/index.js":
/*!*************************************************!*\
  !*** ./node_modules/browser-tabs-lock/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar _this = this;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar processLock_1 = __webpack_require__(/*! ./processLock */ \"./node_modules/browser-tabs-lock/processLock.js\");\n/**\n * @author: SuperTokens (https://github.com/supertokens)\n * This library was created as a part of a larger project, SuperTokens(https://supertokens.io) - the best session management solution.\n * You can also check out our other projects on https://github.com/supertokens\n *\n * To contribute to this package visit https://github.com/supertokens/browser-tabs-lock\n * If you face any problems you can file an issue on https://github.com/supertokens/browser-tabs-lock/issues\n *\n * If you have any questions or if you just want to say hi visit https://supertokens.io/discord\n */\n/**\n * @constant\n * @type {string}\n * @default\n * @description All the locks taken by this package will have this as prefix\n*/\nvar LOCK_STORAGE_KEY = 'browser-tabs-lock-key';\nvar DEFAULT_STORAGE_HANDLER = {\n    key: function (index) { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            throw new Error(\"Unsupported\");\n        });\n    }); },\n    getItem: function (key) { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            throw new Error(\"Unsupported\");\n        });\n    }); },\n    clear: function () { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, window.localStorage.clear()];\n        });\n    }); },\n    removeItem: function (key) { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            throw new Error(\"Unsupported\");\n        });\n    }); },\n    setItem: function (key, value) { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            throw new Error(\"Unsupported\");\n        });\n    }); },\n    keySync: function (index) {\n        return window.localStorage.key(index);\n    },\n    getItemSync: function (key) {\n        return window.localStorage.getItem(key);\n    },\n    clearSync: function () {\n        return window.localStorage.clear();\n    },\n    removeItemSync: function (key) {\n        return window.localStorage.removeItem(key);\n    },\n    setItemSync: function (key, value) {\n        return window.localStorage.setItem(key, value);\n    },\n};\n/**\n * @function delay\n * @param {number} milliseconds - How long the delay should be in terms of milliseconds\n * @returns {Promise<void>}\n */\nfunction delay(milliseconds) {\n    return new Promise(function (resolve) { return setTimeout(resolve, milliseconds); });\n}\n/**\n * @function generateRandomString\n * @params {number} length - How long the random string should be\n * @returns {string}\n * @description returns random string whose length is equal to the length passed as parameter\n */\nfunction generateRandomString(length) {\n    var CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var randomstring = '';\n    for (var i = 0; i < length; i++) {\n        var INDEX = Math.floor(Math.random() * CHARS.length);\n        randomstring += CHARS[INDEX];\n    }\n    return randomstring;\n}\n/**\n * @function getLockId\n * @returns {string}\n * @description Generates an id which will be unique for the browser tab\n */\nfunction getLockId() {\n    return Date.now().toString() + generateRandomString(15);\n}\nvar SuperTokensLock = /** @class */ (function () {\n    function SuperTokensLock(storageHandler) {\n        this.acquiredIatSet = new Set();\n        this.storageHandler = undefined;\n        this.id = getLockId();\n        this.acquireLock = this.acquireLock.bind(this);\n        this.releaseLock = this.releaseLock.bind(this);\n        this.releaseLock__private__ = this.releaseLock__private__.bind(this);\n        this.waitForSomethingToChange = this.waitForSomethingToChange.bind(this);\n        this.refreshLockWhileAcquired = this.refreshLockWhileAcquired.bind(this);\n        this.storageHandler = storageHandler;\n        if (SuperTokensLock.waiters === undefined) {\n            SuperTokensLock.waiters = [];\n        }\n    }\n    /**\n     * @async\n     * @memberOf Lock\n     * @function acquireLock\n     * @param {string} lockKey - Key for which the lock is being acquired\n     * @param {number} [timeout=5000] - Maximum time for which the function will wait to acquire the lock\n     * @returns {Promise<boolean>}\n     * @description Will return true if lock is being acquired, else false.\n     *              Also the lock can be acquired for maximum 10 secs\n     */\n    SuperTokensLock.prototype.acquireLock = function (lockKey, timeout) {\n        if (timeout === void 0) { timeout = 5000; }\n        return __awaiter(this, void 0, void 0, function () {\n            var iat, MAX_TIME, STORAGE_KEY, STORAGE, lockObj, TIMEOUT_KEY, lockObjPostDelay, parsedLockObjPostDelay;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        iat = Date.now() + generateRandomString(4);\n                        MAX_TIME = Date.now() + timeout;\n                        STORAGE_KEY = LOCK_STORAGE_KEY + \"-\" + lockKey;\n                        STORAGE = this.storageHandler === undefined ? DEFAULT_STORAGE_HANDLER : this.storageHandler;\n                        _a.label = 1;\n                    case 1:\n                        if (!(Date.now() < MAX_TIME)) return [3 /*break*/, 8];\n                        return [4 /*yield*/, delay(30)];\n                    case 2:\n                        _a.sent();\n                        lockObj = STORAGE.getItemSync(STORAGE_KEY);\n                        if (!(lockObj === null)) return [3 /*break*/, 5];\n                        TIMEOUT_KEY = this.id + \"-\" + lockKey + \"-\" + iat;\n                        // there is a problem if setItem happens at the exact same time for 2 different processes.. so we add some random delay here.\n                        return [4 /*yield*/, delay(Math.floor(Math.random() * 25))];\n                    case 3:\n                        // there is a problem if setItem happens at the exact same time for 2 different processes.. so we add some random delay here.\n                        _a.sent();\n                        STORAGE.setItemSync(STORAGE_KEY, JSON.stringify({\n                            id: this.id,\n                            iat: iat,\n                            timeoutKey: TIMEOUT_KEY,\n                            timeAcquired: Date.now(),\n                            timeRefreshed: Date.now()\n                        }));\n                        return [4 /*yield*/, delay(30)];\n                    case 4:\n                        _a.sent(); // this is to prevent race conditions. This time must be more than the time it takes for storage.setItem\n                        lockObjPostDelay = STORAGE.getItemSync(STORAGE_KEY);\n                        if (lockObjPostDelay !== null) {\n                            parsedLockObjPostDelay = JSON.parse(lockObjPostDelay);\n                            if (parsedLockObjPostDelay.id === this.id && parsedLockObjPostDelay.iat === iat) {\n                                this.acquiredIatSet.add(iat);\n                                this.refreshLockWhileAcquired(STORAGE_KEY, iat);\n                                return [2 /*return*/, true];\n                            }\n                        }\n                        return [3 /*break*/, 7];\n                    case 5:\n                        SuperTokensLock.lockCorrector(this.storageHandler === undefined ? DEFAULT_STORAGE_HANDLER : this.storageHandler);\n                        return [4 /*yield*/, this.waitForSomethingToChange(MAX_TIME)];\n                    case 6:\n                        _a.sent();\n                        _a.label = 7;\n                    case 7:\n                        iat = Date.now() + generateRandomString(4);\n                        return [3 /*break*/, 1];\n                    case 8: return [2 /*return*/, false];\n                }\n            });\n        });\n    };\n    SuperTokensLock.prototype.refreshLockWhileAcquired = function (storageKey, iat) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                setTimeout(function () { return __awaiter(_this, void 0, void 0, function () {\n                    var STORAGE, lockObj, parsedLockObj;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0: return [4 /*yield*/, processLock_1.default().lock(iat)];\n                            case 1:\n                                _a.sent();\n                                if (!this.acquiredIatSet.has(iat)) {\n                                    processLock_1.default().unlock(iat);\n                                    return [2 /*return*/];\n                                }\n                                STORAGE = this.storageHandler === undefined ? DEFAULT_STORAGE_HANDLER : this.storageHandler;\n                                lockObj = STORAGE.getItemSync(storageKey);\n                                if (lockObj !== null) {\n                                    parsedLockObj = JSON.parse(lockObj);\n                                    parsedLockObj.timeRefreshed = Date.now();\n                                    STORAGE.setItemSync(storageKey, JSON.stringify(parsedLockObj));\n                                    processLock_1.default().unlock(iat);\n                                }\n                                else {\n                                    processLock_1.default().unlock(iat);\n                                    return [2 /*return*/];\n                                }\n                                this.refreshLockWhileAcquired(storageKey, iat);\n                                return [2 /*return*/];\n                        }\n                    });\n                }); }, 1000);\n                return [2 /*return*/];\n            });\n        });\n    };\n    SuperTokensLock.prototype.waitForSomethingToChange = function (MAX_TIME) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, new Promise(function (resolve) {\n                            var resolvedCalled = false;\n                            var startedAt = Date.now();\n                            var MIN_TIME_TO_WAIT = 50; // ms\n                            var removedListeners = false;\n                            function stopWaiting() {\n                                if (!removedListeners) {\n                                    window.removeEventListener('storage', stopWaiting);\n                                    SuperTokensLock.removeFromWaiting(stopWaiting);\n                                    clearTimeout(timeOutId);\n                                    removedListeners = true;\n                                }\n                                if (!resolvedCalled) {\n                                    resolvedCalled = true;\n                                    var timeToWait = MIN_TIME_TO_WAIT - (Date.now() - startedAt);\n                                    if (timeToWait > 0) {\n                                        setTimeout(resolve, timeToWait);\n                                    }\n                                    else {\n                                        resolve(null);\n                                    }\n                                }\n                            }\n                            window.addEventListener('storage', stopWaiting);\n                            SuperTokensLock.addToWaiting(stopWaiting);\n                            var timeOutId = setTimeout(stopWaiting, Math.max(0, MAX_TIME - Date.now()));\n                        })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    SuperTokensLock.addToWaiting = function (func) {\n        this.removeFromWaiting(func);\n        if (SuperTokensLock.waiters === undefined) {\n            return;\n        }\n        SuperTokensLock.waiters.push(func);\n    };\n    SuperTokensLock.removeFromWaiting = function (func) {\n        if (SuperTokensLock.waiters === undefined) {\n            return;\n        }\n        SuperTokensLock.waiters = SuperTokensLock.waiters.filter(function (i) { return i !== func; });\n    };\n    SuperTokensLock.notifyWaiters = function () {\n        if (SuperTokensLock.waiters === undefined) {\n            return;\n        }\n        var waiters = SuperTokensLock.waiters.slice(); // so that if Lock.waiters is changed it's ok.\n        waiters.forEach(function (i) { return i(); });\n    };\n    /**\n     * @function releaseLock\n     * @memberOf Lock\n     * @param {string} lockKey - Key for which lock is being released\n     * @returns {void}\n     * @description Release a lock.\n     */\n    SuperTokensLock.prototype.releaseLock = function (lockKey) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.releaseLock__private__(lockKey)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * @function releaseLock\n     * @memberOf Lock\n     * @param {string} lockKey - Key for which lock is being released\n     * @returns {void}\n     * @description Release a lock.\n     */\n    SuperTokensLock.prototype.releaseLock__private__ = function (lockKey) {\n        return __awaiter(this, void 0, void 0, function () {\n            var STORAGE, STORAGE_KEY, lockObj, parsedlockObj;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        STORAGE = this.storageHandler === undefined ? DEFAULT_STORAGE_HANDLER : this.storageHandler;\n                        STORAGE_KEY = LOCK_STORAGE_KEY + \"-\" + lockKey;\n                        lockObj = STORAGE.getItemSync(STORAGE_KEY);\n                        if (lockObj === null) {\n                            return [2 /*return*/];\n                        }\n                        parsedlockObj = JSON.parse(lockObj);\n                        if (!(parsedlockObj.id === this.id)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, processLock_1.default().lock(parsedlockObj.iat)];\n                    case 1:\n                        _a.sent();\n                        this.acquiredIatSet.delete(parsedlockObj.iat);\n                        STORAGE.removeItemSync(STORAGE_KEY);\n                        processLock_1.default().unlock(parsedlockObj.iat);\n                        SuperTokensLock.notifyWaiters();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @function lockCorrector\n     * @returns {void}\n     * @description If a lock is acquired by a tab and the tab is closed before the lock is\n     *              released, this function will release those locks\n     */\n    SuperTokensLock.lockCorrector = function (storageHandler) {\n        var MIN_ALLOWED_TIME = Date.now() - 5000;\n        var STORAGE = storageHandler;\n        var KEYS = [];\n        var currIndex = 0;\n        while (true) {\n            var key = STORAGE.keySync(currIndex);\n            if (key === null) {\n                break;\n            }\n            KEYS.push(key);\n            currIndex++;\n        }\n        var notifyWaiters = false;\n        for (var i = 0; i < KEYS.length; i++) {\n            var LOCK_KEY = KEYS[i];\n            if (LOCK_KEY.includes(LOCK_STORAGE_KEY)) {\n                var lockObj = STORAGE.getItemSync(LOCK_KEY);\n                if (lockObj !== null) {\n                    var parsedlockObj = JSON.parse(lockObj);\n                    if ((parsedlockObj.timeRefreshed === undefined && parsedlockObj.timeAcquired < MIN_ALLOWED_TIME) ||\n                        (parsedlockObj.timeRefreshed !== undefined && parsedlockObj.timeRefreshed < MIN_ALLOWED_TIME)) {\n                        STORAGE.removeItemSync(LOCK_KEY);\n                        notifyWaiters = true;\n                    }\n                }\n            }\n        }\n        if (notifyWaiters) {\n            SuperTokensLock.notifyWaiters();\n        }\n    };\n    SuperTokensLock.waiters = undefined;\n    return SuperTokensLock;\n}());\nexports[\"default\"] = SuperTokensLock;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/browser-tabs-lock/index.js\n"));

/***/ }),

/***/ "./node_modules/browser-tabs-lock/processLock.js":
/*!*******************************************************!*\
  !*** ./node_modules/browser-tabs-lock/processLock.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ProcessLocking = /** @class */ (function () {\n    function ProcessLocking() {\n        var _this = this;\n        this.locked = new Map();\n        this.addToLocked = function (key, toAdd) {\n            var callbacks = _this.locked.get(key);\n            if (callbacks === undefined) {\n                if (toAdd === undefined) {\n                    _this.locked.set(key, []);\n                }\n                else {\n                    _this.locked.set(key, [toAdd]);\n                }\n            }\n            else {\n                if (toAdd !== undefined) {\n                    callbacks.unshift(toAdd);\n                    _this.locked.set(key, callbacks);\n                }\n            }\n        };\n        this.isLocked = function (key) {\n            return _this.locked.has(key);\n        };\n        this.lock = function (key) {\n            return new Promise(function (resolve, reject) {\n                if (_this.isLocked(key)) {\n                    _this.addToLocked(key, resolve);\n                }\n                else {\n                    _this.addToLocked(key);\n                    resolve();\n                }\n            });\n        };\n        this.unlock = function (key) {\n            var callbacks = _this.locked.get(key);\n            if (callbacks === undefined || callbacks.length === 0) {\n                _this.locked.delete(key);\n                return;\n            }\n            var toCall = callbacks.pop();\n            _this.locked.set(key, callbacks);\n            if (toCall !== undefined) {\n                setTimeout(toCall, 0);\n            }\n        };\n    }\n    ProcessLocking.getInstance = function () {\n        if (ProcessLocking.instance === undefined) {\n            ProcessLocking.instance = new ProcessLocking();\n        }\n        return ProcessLocking.instance;\n    };\n    return ProcessLocking;\n}());\nfunction getLock() {\n    return ProcessLocking.getInstance();\n}\nexports[\"default\"] = getLock;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYnJvd3Nlci10YWJzLWxvY2svcHJvY2Vzc0xvY2suanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYnJvd3Nlci10YWJzLWxvY2svcHJvY2Vzc0xvY2suanM/NzBiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBQcm9jZXNzTG9ja2luZyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBQcm9jZXNzTG9ja2luZygpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy5sb2NrZWQgPSBuZXcgTWFwKCk7XG4gICAgICAgIHRoaXMuYWRkVG9Mb2NrZWQgPSBmdW5jdGlvbiAoa2V5LCB0b0FkZCkge1xuICAgICAgICAgICAgdmFyIGNhbGxiYWNrcyA9IF90aGlzLmxvY2tlZC5nZXQoa2V5KTtcbiAgICAgICAgICAgIGlmIChjYWxsYmFja3MgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGlmICh0b0FkZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLmxvY2tlZC5zZXQoa2V5LCBbXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5sb2NrZWQuc2V0KGtleSwgW3RvQWRkXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKHRvQWRkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2tzLnVuc2hpZnQodG9BZGQpO1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5sb2NrZWQuc2V0KGtleSwgY2FsbGJhY2tzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuaXNMb2NrZWQgPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMubG9ja2VkLmhhcyhrZXkpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLmxvY2sgPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICAgICAgICAgIGlmIChfdGhpcy5pc0xvY2tlZChrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLmFkZFRvTG9ja2VkKGtleSwgcmVzb2x2ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5hZGRUb0xvY2tlZChrZXkpO1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMudW5sb2NrID0gZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgdmFyIGNhbGxiYWNrcyA9IF90aGlzLmxvY2tlZC5nZXQoa2V5KTtcbiAgICAgICAgICAgIGlmIChjYWxsYmFja3MgPT09IHVuZGVmaW5lZCB8fCBjYWxsYmFja3MubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMubG9ja2VkLmRlbGV0ZShrZXkpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciB0b0NhbGwgPSBjYWxsYmFja3MucG9wKCk7XG4gICAgICAgICAgICBfdGhpcy5sb2NrZWQuc2V0KGtleSwgY2FsbGJhY2tzKTtcbiAgICAgICAgICAgIGlmICh0b0NhbGwgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQodG9DYWxsLCAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG4gICAgUHJvY2Vzc0xvY2tpbmcuZ2V0SW5zdGFuY2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChQcm9jZXNzTG9ja2luZy5pbnN0YW5jZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBQcm9jZXNzTG9ja2luZy5pbnN0YW5jZSA9IG5ldyBQcm9jZXNzTG9ja2luZygpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBQcm9jZXNzTG9ja2luZy5pbnN0YW5jZTtcbiAgICB9O1xuICAgIHJldHVybiBQcm9jZXNzTG9ja2luZztcbn0oKSk7XG5mdW5jdGlvbiBnZXRMb2NrKCkge1xuICAgIHJldHVybiBQcm9jZXNzTG9ja2luZy5nZXRJbnN0YW5jZSgpO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gZ2V0TG9jaztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/browser-tabs-lock/processLock.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! ../../compiled/process */ \"./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSxxQ0FBcUMscUJBQU0saUZBQWlGLHFCQUFNLGtFQUFrRSxxQkFBTSxXQUFXLG1CQUFPLENBQUMsb0ZBQXdCOztBQUVyUCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzP2NhNjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX2dsb2JhbF9wcm9jZXNzLCBfZ2xvYmFsX3Byb2Nlc3MxO1xubW9kdWxlLmV4cG9ydHMgPSAoKF9nbG9iYWxfcHJvY2VzcyA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX2dsb2JhbF9wcm9jZXNzLmVudikgJiYgdHlwZW9mICgoX2dsb2JhbF9wcm9jZXNzMSA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX2dsb2JhbF9wcm9jZXNzMS5lbnYpID09PSBcIm9iamVjdFwiID8gZ2xvYmFsLnByb2Nlc3MgOiByZXF1aXJlKFwiLi4vLi4vY29tcGlsZWQvcHJvY2Vzc1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./src/styles/globals.css":
/*!**************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./src/styles/globals.css ***!
  \**************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\n! tailwindcss v3.3.2 | MIT License | https://tailwindcss.com\\n*//*\\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\\n*/\\n\\n*,\\n::before,\\n::after {\\n  box-sizing: border-box; /* 1 */\\n  border-width: 0; /* 2 */\\n  border-style: solid; /* 2 */\\n  border-color: currentColor; /* 2 */\\n}\\n\\n::before,\\n::after {\\n  --tw-content: '';\\n}\\n\\n/*\\n1. Use a consistent sensible line-height in all browsers.\\n2. Prevent adjustments of font size after orientation changes in iOS.\\n3. Use a more readable tab size.\\n4. Use the user's configured `sans` font-family by default.\\n5. Use the user's configured `sans` font-feature-settings by default.\\n6. Use the user's configured `sans` font-variation-settings by default.\\n*/\\n\\nhtml {\\n  line-height: 1.5; /* 1 */\\n  -webkit-text-size-adjust: 100%; /* 2 */\\n  -moz-tab-size: 4; /* 3 */\\n  -o-tab-size: 4;\\n     tab-size: 4; /* 3 */\\n  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\"; /* 4 */\\n  font-feature-settings: normal; /* 5 */\\n  font-variation-settings: normal; /* 6 */\\n}\\n\\n/*\\n1. Remove the margin in all browsers.\\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\\n*/\\n\\nbody {\\n  margin: 0; /* 1 */\\n  line-height: inherit; /* 2 */\\n}\\n\\n/*\\n1. Add the correct height in Firefox.\\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\\n3. Ensure horizontal rules are visible by default.\\n*/\\n\\nhr {\\n  height: 0; /* 1 */\\n  color: inherit; /* 2 */\\n  border-top-width: 1px; /* 3 */\\n}\\n\\n/*\\nAdd the correct text decoration in Chrome, Edge, and Safari.\\n*/\\n\\nabbr:where([title]) {\\n  -webkit-text-decoration: underline dotted;\\n          text-decoration: underline dotted;\\n}\\n\\n/*\\nRemove the default font size and weight for headings.\\n*/\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n/*\\nReset links to optimize for opt-in styling instead of opt-out.\\n*/\\n\\na {\\n  color: inherit;\\n  text-decoration: inherit;\\n}\\n\\n/*\\nAdd the correct font weight in Edge and Safari.\\n*/\\n\\nb,\\nstrong {\\n  font-weight: bolder;\\n}\\n\\n/*\\n1. Use the user's configured `mono` font family by default.\\n2. Correct the odd `em` font sizing in all browsers.\\n*/\\n\\ncode,\\nkbd,\\nsamp,\\npre {\\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace; /* 1 */\\n  font-size: 1em; /* 2 */\\n}\\n\\n/*\\nAdd the correct font size in all browsers.\\n*/\\n\\nsmall {\\n  font-size: 80%;\\n}\\n\\n/*\\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\\n*/\\n\\nsub,\\nsup {\\n  font-size: 75%;\\n  line-height: 0;\\n  position: relative;\\n  vertical-align: baseline;\\n}\\n\\nsub {\\n  bottom: -0.25em;\\n}\\n\\nsup {\\n  top: -0.5em;\\n}\\n\\n/*\\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\\n3. Remove gaps between table borders by default.\\n*/\\n\\ntable {\\n  text-indent: 0; /* 1 */\\n  border-color: inherit; /* 2 */\\n  border-collapse: collapse; /* 3 */\\n}\\n\\n/*\\n1. Change the font styles in all browsers.\\n2. Remove the margin in Firefox and Safari.\\n3. Remove default padding in all browsers.\\n*/\\n\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n  font-family: inherit; /* 1 */\\n  font-size: 100%; /* 1 */\\n  font-weight: inherit; /* 1 */\\n  line-height: inherit; /* 1 */\\n  color: inherit; /* 1 */\\n  margin: 0; /* 2 */\\n  padding: 0; /* 3 */\\n}\\n\\n/*\\nRemove the inheritance of text transform in Edge and Firefox.\\n*/\\n\\nbutton,\\nselect {\\n  text-transform: none;\\n}\\n\\n/*\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Remove default button styles.\\n*/\\n\\nbutton,\\n[type='button'],\\n[type='reset'],\\n[type='submit'] {\\n  -webkit-appearance: button; /* 1 */\\n  background-color: transparent; /* 2 */\\n  background-image: none; /* 2 */\\n}\\n\\n/*\\nUse the modern Firefox focus style for all focusable elements.\\n*/\\n\\n:-moz-focusring {\\n  outline: auto;\\n}\\n\\n/*\\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\\n*/\\n\\n:-moz-ui-invalid {\\n  box-shadow: none;\\n}\\n\\n/*\\nAdd the correct vertical alignment in Chrome and Firefox.\\n*/\\n\\nprogress {\\n  vertical-align: baseline;\\n}\\n\\n/*\\nCorrect the cursor style of increment and decrement buttons in Safari.\\n*/\\n\\n::-webkit-inner-spin-button,\\n::-webkit-outer-spin-button {\\n  height: auto;\\n}\\n\\n/*\\n1. Correct the odd appearance in Chrome and Safari.\\n2. Correct the outline style in Safari.\\n*/\\n\\n[type='search'] {\\n  -webkit-appearance: textfield; /* 1 */\\n  outline-offset: -2px; /* 2 */\\n}\\n\\n/*\\nRemove the inner padding in Chrome and Safari on macOS.\\n*/\\n\\n::-webkit-search-decoration {\\n  -webkit-appearance: none;\\n}\\n\\n/*\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Change font properties to `inherit` in Safari.\\n*/\\n\\n::-webkit-file-upload-button {\\n  -webkit-appearance: button; /* 1 */\\n  font: inherit; /* 2 */\\n}\\n\\n/*\\nAdd the correct display in Chrome and Safari.\\n*/\\n\\nsummary {\\n  display: list-item;\\n}\\n\\n/*\\nRemoves the default spacing and border for appropriate elements.\\n*/\\n\\nblockquote,\\ndl,\\ndd,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\nhr,\\nfigure,\\np,\\npre {\\n  margin: 0;\\n}\\n\\nfieldset {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nlegend {\\n  padding: 0;\\n}\\n\\nol,\\nul,\\nmenu {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n/*\\nPrevent resizing textareas horizontally by default.\\n*/\\n\\ntextarea {\\n  resize: vertical;\\n}\\n\\n/*\\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\\n2. Set the default placeholder color to the user's configured gray 400 color.\\n*/\\n\\ninput::-moz-placeholder, textarea::-moz-placeholder {\\n  opacity: 1; /* 1 */\\n  color: #9ca3af; /* 2 */\\n}\\n\\ninput::placeholder,\\ntextarea::placeholder {\\n  opacity: 1; /* 1 */\\n  color: #9ca3af; /* 2 */\\n}\\n\\n/*\\nSet the default cursor for buttons.\\n*/\\n\\nbutton,\\n[role=\\\"button\\\"] {\\n  cursor: pointer;\\n}\\n\\n/*\\nMake sure disabled buttons don't get the pointer cursor.\\n*/\\n:disabled {\\n  cursor: default;\\n}\\n\\n/*\\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\\n   This can trigger a poorly considered lint error in some tools but is included by design.\\n*/\\n\\nimg,\\nsvg,\\nvideo,\\ncanvas,\\naudio,\\niframe,\\nembed,\\nobject {\\n  display: block; /* 1 */\\n  vertical-align: middle; /* 2 */\\n}\\n\\n/*\\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\\n*/\\n\\nimg,\\nvideo {\\n  max-width: 100%;\\n  height: auto;\\n}\\n\\n/* Make elements with the HTML hidden attribute stay hidden by default */\\n[hidden] {\\n  display: none;\\n}\\n\\n*, ::before, ::after {\\n  --tw-border-spacing-x: 0;\\n  --tw-border-spacing-y: 0;\\n  --tw-translate-x: 0;\\n  --tw-translate-y: 0;\\n  --tw-rotate: 0;\\n  --tw-skew-x: 0;\\n  --tw-skew-y: 0;\\n  --tw-scale-x: 1;\\n  --tw-scale-y: 1;\\n  --tw-pan-x:  ;\\n  --tw-pan-y:  ;\\n  --tw-pinch-zoom:  ;\\n  --tw-scroll-snap-strictness: proximity;\\n  --tw-gradient-from-position:  ;\\n  --tw-gradient-via-position:  ;\\n  --tw-gradient-to-position:  ;\\n  --tw-ordinal:  ;\\n  --tw-slashed-zero:  ;\\n  --tw-numeric-figure:  ;\\n  --tw-numeric-spacing:  ;\\n  --tw-numeric-fraction:  ;\\n  --tw-ring-inset:  ;\\n  --tw-ring-offset-width: 0px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: rgb(59 130 246 / 0.5);\\n  --tw-ring-offset-shadow: 0 0 #0000;\\n  --tw-ring-shadow: 0 0 #0000;\\n  --tw-shadow: 0 0 #0000;\\n  --tw-shadow-colored: 0 0 #0000;\\n  --tw-blur:  ;\\n  --tw-brightness:  ;\\n  --tw-contrast:  ;\\n  --tw-grayscale:  ;\\n  --tw-hue-rotate:  ;\\n  --tw-invert:  ;\\n  --tw-saturate:  ;\\n  --tw-sepia:  ;\\n  --tw-drop-shadow:  ;\\n  --tw-backdrop-blur:  ;\\n  --tw-backdrop-brightness:  ;\\n  --tw-backdrop-contrast:  ;\\n  --tw-backdrop-grayscale:  ;\\n  --tw-backdrop-hue-rotate:  ;\\n  --tw-backdrop-invert:  ;\\n  --tw-backdrop-opacity:  ;\\n  --tw-backdrop-saturate:  ;\\n  --tw-backdrop-sepia:  ;\\n}\\n\\n::backdrop {\\n  --tw-border-spacing-x: 0;\\n  --tw-border-spacing-y: 0;\\n  --tw-translate-x: 0;\\n  --tw-translate-y: 0;\\n  --tw-rotate: 0;\\n  --tw-skew-x: 0;\\n  --tw-skew-y: 0;\\n  --tw-scale-x: 1;\\n  --tw-scale-y: 1;\\n  --tw-pan-x:  ;\\n  --tw-pan-y:  ;\\n  --tw-pinch-zoom:  ;\\n  --tw-scroll-snap-strictness: proximity;\\n  --tw-gradient-from-position:  ;\\n  --tw-gradient-via-position:  ;\\n  --tw-gradient-to-position:  ;\\n  --tw-ordinal:  ;\\n  --tw-slashed-zero:  ;\\n  --tw-numeric-figure:  ;\\n  --tw-numeric-spacing:  ;\\n  --tw-numeric-fraction:  ;\\n  --tw-ring-inset:  ;\\n  --tw-ring-offset-width: 0px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: rgb(59 130 246 / 0.5);\\n  --tw-ring-offset-shadow: 0 0 #0000;\\n  --tw-ring-shadow: 0 0 #0000;\\n  --tw-shadow: 0 0 #0000;\\n  --tw-shadow-colored: 0 0 #0000;\\n  --tw-blur:  ;\\n  --tw-brightness:  ;\\n  --tw-contrast:  ;\\n  --tw-grayscale:  ;\\n  --tw-hue-rotate:  ;\\n  --tw-invert:  ;\\n  --tw-saturate:  ;\\n  --tw-sepia:  ;\\n  --tw-drop-shadow:  ;\\n  --tw-backdrop-blur:  ;\\n  --tw-backdrop-brightness:  ;\\n  --tw-backdrop-contrast:  ;\\n  --tw-backdrop-grayscale:  ;\\n  --tw-backdrop-hue-rotate:  ;\\n  --tw-backdrop-invert:  ;\\n  --tw-backdrop-opacity:  ;\\n  --tw-backdrop-saturate:  ;\\n  --tw-backdrop-sepia:  ;\\n}\\n.container {\\n  width: 100%;\\n}\\n@media (min-width: 640px) {\\n\\n  .container {\\n    max-width: 640px;\\n  }\\n}\\n@media (min-width: 768px) {\\n\\n  .container {\\n    max-width: 768px;\\n  }\\n}\\n@media (min-width: 1024px) {\\n\\n  .container {\\n    max-width: 1024px;\\n  }\\n}\\n@media (min-width: 1280px) {\\n\\n  .container {\\n    max-width: 1280px;\\n  }\\n}\\n@media (min-width: 1536px) {\\n\\n  .container {\\n    max-width: 1536px;\\n  }\\n}\\n.sr-only {\\n  position: absolute;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  margin: -1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0);\\n  white-space: nowrap;\\n  border-width: 0;\\n}\\n.absolute {\\n  position: absolute;\\n}\\n.relative {\\n  position: relative;\\n}\\n.left-1 {\\n  left: 0.25rem;\\n}\\n.top-1 {\\n  top: 0.25rem;\\n}\\n.m-1 {\\n  margin: 0.25rem;\\n}\\n.m-2 {\\n  margin: 0.5rem;\\n}\\n.mx-auto {\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n.ml-3 {\\n  margin-left: 0.75rem;\\n}\\n.mt-6 {\\n  margin-top: 1.5rem;\\n}\\n.block {\\n  display: block;\\n}\\n.flex {\\n  display: flex;\\n}\\n.inline-flex {\\n  display: inline-flex;\\n}\\n.h-6 {\\n  height: 1.5rem;\\n}\\n.h-8 {\\n  height: 2rem;\\n}\\n.h-screen {\\n  height: 100vh;\\n}\\n.w-14 {\\n  width: 3.5rem;\\n}\\n.w-6 {\\n  width: 1.5rem;\\n}\\n.w-full {\\n  width: 100%;\\n}\\n.cursor-pointer {\\n  cursor: pointer;\\n}\\n.flex-row {\\n  flex-direction: row;\\n}\\n.flex-col {\\n  flex-direction: column;\\n}\\n.items-center {\\n  align-items: center;\\n}\\n.justify-center {\\n  justify-content: center;\\n}\\n.justify-between {\\n  justify-content: space-between;\\n}\\n.space-x-4 > :not([hidden]) ~ :not([hidden]) {\\n  --tw-space-x-reverse: 0;\\n  margin-right: calc(1rem * var(--tw-space-x-reverse));\\n  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));\\n}\\n.rounded {\\n  border-radius: 0.25rem;\\n}\\n.rounded-full {\\n  border-radius: 9999px;\\n}\\n.rounded-md {\\n  border-radius: 0.375rem;\\n}\\n.bg-black {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(18 16 16 / var(--tw-bg-opacity));\\n}\\n.bg-grayLight {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(21 21 21 / var(--tw-bg-opacity));\\n}\\n.bg-white {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(255 255 255 / var(--tw-bg-opacity));\\n}\\n.bg-gradient-to-r {\\n  background-image: linear-gradient(to right, var(--tw-gradient-stops));\\n}\\n.from-greyGradient1 {\\n  --tw-gradient-from: #212121 var(--tw-gradient-from-position);\\n  --tw-gradient-to: rgb(33 33 33 / 0) var(--tw-gradient-to-position);\\n  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\\n}\\n.to-greyGradient2 {\\n  --tw-gradient-to: #303030 var(--tw-gradient-to-position);\\n}\\n.p-8 {\\n  padding: 2rem;\\n}\\n.px-4 {\\n  padding-left: 1rem;\\n  padding-right: 1rem;\\n}\\n.px-6 {\\n  padding-left: 1.5rem;\\n  padding-right: 1.5rem;\\n}\\n.py-10 {\\n  padding-top: 2.5rem;\\n  padding-bottom: 2.5rem;\\n}\\n.py-2 {\\n  padding-top: 0.5rem;\\n  padding-bottom: 0.5rem;\\n}\\n.py-20 {\\n  padding-top: 5rem;\\n  padding-bottom: 5rem;\\n}\\n.py-4 {\\n  padding-top: 1rem;\\n  padding-bottom: 1rem;\\n}\\n.text-center {\\n  text-align: center;\\n}\\n.text-2xl {\\n  font-size: 1.5rem;\\n  line-height: 2rem;\\n}\\n.text-base {\\n  font-size: 1rem;\\n  line-height: 1.5rem;\\n}\\n.text-sm {\\n  font-size: 0.875rem;\\n  line-height: 1.25rem;\\n}\\n.text-xl {\\n  font-size: 1.25rem;\\n  line-height: 1.75rem;\\n}\\n.font-bold {\\n  font-weight: 700;\\n}\\n.font-medium {\\n  font-weight: 500;\\n}\\n.font-semibold {\\n  font-weight: 600;\\n}\\n.leading-7 {\\n  line-height: 1.75rem;\\n}\\n.tracking-tight {\\n  letter-spacing: -0.025em;\\n}\\n.text-greyText {\\n  --tw-text-opacity: 1;\\n  color: rgb(167 167 167 / var(--tw-text-opacity));\\n}\\n.text-white {\\n  --tw-text-opacity: 1;\\n  color: rgb(255 255 255 / var(--tw-text-opacity));\\n}\\n.transition {\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;\\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;\\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\n  transition-duration: 150ms;\\n}\\n\\n:root {\\n  --foreground-rgb: 0, 0, 0;\\n  --background-start-rgb: 214, 219, 220;\\n  --background-end-rgb: 255, 255, 255;\\n}\\n\\n@media (prefers-color-scheme: dark) {\\n  :root {\\n    --foreground-rgb: 255, 255, 255;\\n    --background-start-rgb: 24, 24, 24, 1;\\n    --background-end-rgb: 0, 0, 0;\\n    \\n  }\\n}\\n\\n/*add a css for toggle switch*/\\n.switch {\\n  position: relative;\\n  display: inline-block;\\n  width: 60px;\\n  height: 34px;\\n  margin-left: 10px;\\n  margin-right: 10px;\\n}\\n\\n.switch input {\\n  opacity: 0;\\n  width: 0;\\n  height: 0;\\n}\\n\\n/*slider*/\\n.slider {\\n  position: absolute;\\n  cursor: pointer;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: rgb(var(--background-start-rgb));\\n  transition: 0.4s;\\n}\\n\\n/*slider:before*/\\n.slider:before {\\n  position: absolute;\\n  content: \\\"\\\";\\n  height: 26px;\\n  width: 26px;\\n  left: 4px;\\n  bottom: 4px;\\n  background-color: rgb(var(--foreground-rgb));\\n  transition: 0.4s;\\n}\\n\\n/*input:checked + .slider*/\\ninput:checked + .slider {\\n  background-color: rgb(var(--background-end-rgb));\\n}\\n\\n/*input:focus + .slider*/\\ninput:focus + .slider {\\n  box-shadow: 0 0 1px rgb(var(--foreground-rgb));\\n}\\n\\n/*input:checked + .slider:before*/\\ninput:checked + .slider:before {\\n  transform: translateX(26px);\\n}\\n\\n/*slider.round*/\\n.slider.round {\\n  border-radius: 34px;\\n}\\n\\n/*slider.round:before*/\\n.slider.round:before {\\n  border-radius: 50%;\\n}\\n\\n/*body*/\\n\\n\\nbody {\\n  color: rgb(var(--foreground-rgb));\\n  background: linear-gradient(\\n      to bottom,\\n      transparent,\\n      rgb(var(--background-end-rgb))\\n    )\\n    rgb(var(--background-start-rgb));\\n}\\n\\n\\n.focus\\\\:outline-none:focus {\\n  outline: 2px solid transparent;\\n  outline-offset: 2px;\\n}\\n\\n\\n@media (min-width: 640px) {\\n\\n  .sm\\\\:mt-20 {\\n    margin-top: 5rem;\\n  }\\n\\n  .sm\\\\:p-10 {\\n    padding: 2.5rem;\\n  }\\n}\\n\\n\\n@media (min-width: 1024px) {\\n\\n  .lg\\\\:mx-20 {\\n    margin-left: 5rem;\\n    margin-right: 5rem;\\n  }\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://src/styles/globals.css\",\"<no source>\"],\"names\":[],\"mappings\":\"AAAA;;CAAc,CAAd;;;CAAc;;AAAd;;;EAAA,sBAAc,EAAd,MAAc;EAAd,eAAc,EAAd,MAAc;EAAd,mBAAc,EAAd,MAAc;EAAd,0BAAc,EAAd,MAAc;AAAA;;AAAd;;EAAA,gBAAc;AAAA;;AAAd;;;;;;;CAAc;;AAAd;EAAA,gBAAc,EAAd,MAAc;EAAd,8BAAc,EAAd,MAAc;EAAd,gBAAc,EAAd,MAAc;EAAd,cAAc;KAAd,WAAc,EAAd,MAAc;EAAd,4NAAc,EAAd,MAAc;EAAd,6BAAc,EAAd,MAAc;EAAd,+BAAc,EAAd,MAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,SAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;AAAA;;AAAd;;;;CAAc;;AAAd;EAAA,SAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;EAAd,qBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,yCAAc;UAAd,iCAAc;AAAA;;AAAd;;CAAc;;AAAd;;;;;;EAAA,kBAAc;EAAd,oBAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,cAAc;EAAd,wBAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,mBAAc;AAAA;;AAAd;;;CAAc;;AAAd;;;;EAAA,+GAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,cAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,cAAc;EAAd,cAAc;EAAd,kBAAc;EAAd,wBAAc;AAAA;;AAAd;EAAA,eAAc;AAAA;;AAAd;EAAA,WAAc;AAAA;;AAAd;;;;CAAc;;AAAd;EAAA,cAAc,EAAd,MAAc;EAAd,qBAAc,EAAd,MAAc;EAAd,yBAAc,EAAd,MAAc;AAAA;;AAAd;;;;CAAc;;AAAd;;;;;EAAA,oBAAc,EAAd,MAAc;EAAd,eAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;EAAd,SAAc,EAAd,MAAc;EAAd,UAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,oBAAc;AAAA;;AAAd;;;CAAc;;AAAd;;;;EAAA,0BAAc,EAAd,MAAc;EAAd,6BAAc,EAAd,MAAc;EAAd,sBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,aAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,gBAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,wBAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,YAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,6BAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,wBAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,0BAAc,EAAd,MAAc;EAAd,aAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,kBAAc;AAAA;;AAAd;;CAAc;;AAAd;;;;;;;;;;;;;EAAA,SAAc;AAAA;;AAAd;EAAA,SAAc;EAAd,UAAc;AAAA;;AAAd;EAAA,UAAc;AAAA;;AAAd;;;EAAA,gBAAc;EAAd,SAAc;EAAd,UAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,gBAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,UAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;AAAA;;AAAd;;EAAA,UAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,eAAc;AAAA;;AAAd;;CAAc;AAAd;EAAA,eAAc;AAAA;;AAAd;;;;CAAc;;AAAd;;;;;;;;EAAA,cAAc,EAAd,MAAc;EAAd,sBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,eAAc;EAAd,YAAc;AAAA;;AAAd,wEAAc;AAAd;EAAA,aAAc;AAAA;;AAAd;EAAA,wBAAc;EAAd,wBAAc;EAAd,mBAAc;EAAd,mBAAc;EAAd,cAAc;EAAd,cAAc;EAAd,cAAc;EAAd,eAAc;EAAd,eAAc;EAAd,aAAc;EAAd,aAAc;EAAd,kBAAc;EAAd,sCAAc;EAAd,8BAAc;EAAd,6BAAc;EAAd,4BAAc;EAAd,eAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,kBAAc;EAAd,2BAAc;EAAd,4BAAc;EAAd,sCAAc;EAAd,kCAAc;EAAd,2BAAc;EAAd,sBAAc;EAAd,8BAAc;EAAd,YAAc;EAAd,kBAAc;EAAd,gBAAc;EAAd,iBAAc;EAAd,kBAAc;EAAd,cAAc;EAAd,gBAAc;EAAd,aAAc;EAAd,mBAAc;EAAd,qBAAc;EAAd,2BAAc;EAAd,yBAAc;EAAd,0BAAc;EAAd,2BAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,yBAAc;EAAd;AAAc;;AAAd;EAAA,wBAAc;EAAd,wBAAc;EAAd,mBAAc;EAAd,mBAAc;EAAd,cAAc;EAAd,cAAc;EAAd,cAAc;EAAd,eAAc;EAAd,eAAc;EAAd,aAAc;EAAd,aAAc;EAAd,kBAAc;EAAd,sCAAc;EAAd,8BAAc;EAAd,6BAAc;EAAd,4BAAc;EAAd,eAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,kBAAc;EAAd,2BAAc;EAAd,4BAAc;EAAd,sCAAc;EAAd,kCAAc;EAAd,2BAAc;EAAd,sBAAc;EAAd,8BAAc;EAAd,YAAc;EAAd,kBAAc;EAAd,gBAAc;EAAd,iBAAc;EAAd,kBAAc;EAAd,cAAc;EAAd,gBAAc;EAAd,aAAc;EAAd,mBAAc;EAAd,qBAAc;EAAd,2BAAc;EAAd,yBAAc;EAAd,0BAAc;EAAd,2BAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,yBAAc;EAAd;AAAc;AACd;EAAA;AAAoB;AAApB;;EAAA;IAAA;EAAoB;AAAA;AAApB;;EAAA;IAAA;EAAoB;AAAA;AAApB;;EAAA;IAAA;EAAoB;AAAA;AAApB;;EAAA;IAAA;EAAoB;AAAA;AAApB;;EAAA;IAAA;EAAoB;AAAA;AACpB;EAAA,kBAAmB;EAAnB,UAAmB;EAAnB,WAAmB;EAAnB,UAAmB;EAAnB,YAAmB;EAAnB,gBAAmB;EAAnB,sBAAmB;EAAnB,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,uBAAmB;EAAnB,oDAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,4DAAmB;EAAnB,kEAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,iBAAmB;EAAnB;AAAmB;AAAnB;EAAA,eAAmB;EAAnB;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA,kBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,gKAAmB;EAAnB,wJAAmB;EAAnB,iLAAmB;EAAnB,wDAAmB;EAAnB;AAAmB;;AAEnB;EACE,yBAAyB;EACzB,qCAAqC;EACrC,mCAAmC;AACrC;;AAEA;EACE;IACE,+BAA+B;IAC/B,qCAAqC;IACrC,6BAA6B;;EAE/B;AACF;;AAEA,8BAA8B;AAC9B;EACE,kBAAkB;EAClB,qBAAqB;EACrB,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,UAAU;EACV,QAAQ;EACR,SAAS;AACX;;AAEA,SAAS;AACT;EACE,kBAAkB;EAClB,eAAe;EACf,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;EACT,kDAAkD;EAElD,gBAAgB;AAClB;;AAEA,gBAAgB;AAChB;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,WAAW;EACX,SAAS;EACT,WAAW;EACX,4CAA4C;EAE5C,gBAAgB;AAClB;;AAEA,0BAA0B;AAC1B;EACE,gDAAgD;AAClD;;AAEA,wBAAwB;AACxB;EACE,8CAA8C;AAChD;;AAEA,iCAAiC;AACjC;EAGE,2BAA2B;AAC7B;;AAEA,eAAe;AACf;EACE,mBAAmB;AACrB;;AAEA,sBAAsB;AACtB;EACE,kBAAkB;AACpB;;AAEA,OAAO;;;AAGP;EACE,iCAAiC;EACjC;;;;;oCAKkC;AACpC;;;AAnGA;EAAA,+BCAA;EDAA;CCAA;;;ADAA;;EAAA;IAAA;GCAA;;EDAA;IAAA;GCAA;CAAA;;;ADAA;;EAAA;IAAA,kBCAA;IDAA;GCAA;CAAA\",\"sourcesContent\":[\"@tailwind base;\\n@tailwind components;\\n@tailwind utilities;\\n\\n:root {\\n  --foreground-rgb: 0, 0, 0;\\n  --background-start-rgb: 214, 219, 220;\\n  --background-end-rgb: 255, 255, 255;\\n}\\n\\n@media (prefers-color-scheme: dark) {\\n  :root {\\n    --foreground-rgb: 255, 255, 255;\\n    --background-start-rgb: 24, 24, 24, 1;\\n    --background-end-rgb: 0, 0, 0;\\n    \\n  }\\n}\\n\\n/*add a css for toggle switch*/\\n.switch {\\n  position: relative;\\n  display: inline-block;\\n  width: 60px;\\n  height: 34px;\\n  margin-left: 10px;\\n  margin-right: 10px;\\n}\\n\\n.switch input {\\n  opacity: 0;\\n  width: 0;\\n  height: 0;\\n}\\n\\n/*slider*/\\n.slider {\\n  position: absolute;\\n  cursor: pointer;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: rgb(var(--background-start-rgb));\\n  -webkit-transition: 0.4s;\\n  transition: 0.4s;\\n}\\n\\n/*slider:before*/\\n.slider:before {\\n  position: absolute;\\n  content: \\\"\\\";\\n  height: 26px;\\n  width: 26px;\\n  left: 4px;\\n  bottom: 4px;\\n  background-color: rgb(var(--foreground-rgb));\\n  -webkit-transition: 0.4s;\\n  transition: 0.4s;\\n}\\n\\n/*input:checked + .slider*/\\ninput:checked + .slider {\\n  background-color: rgb(var(--background-end-rgb));\\n}\\n\\n/*input:focus + .slider*/\\ninput:focus + .slider {\\n  box-shadow: 0 0 1px rgb(var(--foreground-rgb));\\n}\\n\\n/*input:checked + .slider:before*/\\ninput:checked + .slider:before {\\n  -webkit-transform: translateX(26px);\\n  -ms-transform: translateX(26px);\\n  transform: translateX(26px);\\n}\\n\\n/*slider.round*/\\n.slider.round {\\n  border-radius: 34px;\\n}\\n\\n/*slider.round:before*/\\n.slider.round:before {\\n  border-radius: 50%;\\n}\\n\\n/*body*/\\n\\n\\nbody {\\n  color: rgb(var(--foreground-rgb));\\n  background: linear-gradient(\\n      to bottom,\\n      transparent,\\n      rgb(var(--background-end-rgb))\\n    )\\n    rgb(var(--background-start-rgb));\\n}\\n\",null],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./src/styles/globals.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\n\nmodule.exports = function(useSourceMap) {\n    var list = [] // return the list of modules as css string\n    ;\n    list.toString = function toString() {\n        return this.map(function(item) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            var content = cssWithMappingToString(item, useSourceMap);\n            if (item[2]) {\n                return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n            }\n            return content;\n        }).join(\"\");\n    } // import a list of modules into the list\n    ;\n    // eslint-disable-next-line func-names\n    // @ts-expect-error TODO: fix type\n    list.i = function(modules, mediaQuery, dedupe) {\n        if (typeof modules === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            modules = [\n                [\n                    null,\n                    modules,\n                    \"\"\n                ]\n            ];\n        }\n        var alreadyImportedModules = {};\n        if (dedupe) {\n            for(var i = 0; i < this.length; i++){\n                // eslint-disable-next-line prefer-destructuring\n                var id = this[i][0];\n                if (id != null) {\n                    alreadyImportedModules[id] = true;\n                }\n            }\n        }\n        for(var _i = 0; _i < modules.length; _i++){\n            var item = [].concat(modules[_i]);\n            if (dedupe && alreadyImportedModules[item[0]]) {\n                continue;\n            }\n            if (mediaQuery) {\n                if (!item[2]) {\n                    item[2] = mediaQuery;\n                } else {\n                    item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n                }\n            }\n            list.push(item);\n        }\n    };\n    return list;\n};\nfunction cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || \"\" // eslint-disable-next-line prefer-destructuring\n    ;\n    var cssMapping = item[3];\n    if (!cssMapping) {\n        return content;\n    }\n    if (useSourceMap && typeof btoa === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        var sourceMapping = toComment(cssMapping);\n        var sourceURLs = cssMapping.sources.map(function(source) {\n            return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n        });\n        return [\n            content\n        ].concat(sourceURLs).concat([\n            sourceMapping\n        ]).join(\"\\n\");\n    }\n    return [\n        content\n    ].join(\"\\n\");\n} // Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELHFCQUFxQjtBQUN6RTtBQUNBO0FBQ0EsU0FBUztBQUNULE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixpQkFBaUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IscUJBQXFCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanM/Y2E0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qLyAvLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblwidXNlIHN0cmljdFwiO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgbGlzdCA9IFtdIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgICA7XG4gICAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2UtYmVmb3JlLWRlZmluZVxuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG4gICAgICAgICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICAgIH0pLmpvaW4oXCJcIik7XG4gICAgfSAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAgIDtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgVE9ETzogZml4IHR5cGVcbiAgICBsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgICAgICAgIG1vZHVsZXMgPSBbXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb2R1bGVzLFxuICAgICAgICAgICAgICAgICAgICBcIlwiXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgICAgICBpZiAoZGVkdXBlKSB7XG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgICAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcbiAgICAgICAgICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvcih2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKXtcbiAgICAgICAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcbiAgICAgICAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIGxpc3Q7XG59O1xuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgXCJcIiAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICA7XG4gICAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICAgIGlmICghY3NzTWFwcGluZykge1xuICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICB9XG4gICAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdXNlLWJlZm9yZS1kZWZpbmVcbiAgICAgICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbihzb3VyY2UpIHtcbiAgICAgICAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBjb250ZW50XG4gICAgICAgIF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbXG4gICAgICAgICAgICBzb3VyY2VNYXBwaW5nXG4gICAgICAgIF0pLmpvaW4oXCJcXG5cIik7XG4gICAgfVxuICAgIHJldHVybiBbXG4gICAgICAgIGNvbnRlbnRcbiAgICBdLmpvaW4oXCJcXG5cIik7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./src/pages/_app.tsx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfYXBwJnBhZ2U9JTJGX2FwcCEuanMiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxxREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzY3ODIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!\n"));

/***/ }),

/***/ "./src/styles/globals.css":
/*!********************************!*\
  !*** ./src/styles/globals.css ***!
  \********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./src/styles/globals.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./src/styles/globals.css\",\n      function () {\n        content = __webpack_require__(/*! !!../../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!../../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[13].use[2]!./src/styles/globals.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3R5bGVzL2dsb2JhbHMuY3NzLmpzIiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyx1TkFBMkc7QUFDN0gsMEJBQTBCLG1CQUFPLENBQUMscWZBQXVQOztBQUV6Ujs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0EsSUFBSSxJQUFVO0FBQ2QseUJBQXlCLFVBQVU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUksaUJBQWlCO0FBQ3JCLE1BQU0scWZBQXVQO0FBQzdQO0FBQ0Esa0JBQWtCLG1CQUFPLENBQUMscWZBQXVQOztBQUVqUjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsVUFBVTs7QUFFMUI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLFVBQVU7QUFDWjtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc3R5bGVzL2dsb2JhbHMuY3NzPzYyYjIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1zdHlsZS1sb2FkZXIvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLm9uZU9mWzEzXS51c2VbMV0hLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLm9uZU9mWzEzXS51c2VbMl0hLi9nbG9iYWxzLmNzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQnkgZGVmYXVsdCwgc3R5bGUtbG9hZGVyIGluamVjdHMgQ1NTIGludG8gdGhlIGJvdHRvbVxuICAgICAgICAgICAgICAgICAgICAvLyBvZiA8aGVhZD4uIFRoaXMgY2F1c2VzIG9yZGVyaW5nIHByb2JsZW1zIGJldHdlZW4gZGV2XG4gICAgICAgICAgICAgICAgICAgIC8vIGFuZCBwcm9kLiBUbyBmaXggdGhpcywgd2UgcmVuZGVyIGEgPG5vc2NyaXB0PiB0YWcgYXNcbiAgICAgICAgICAgICAgICAgICAgLy8gYW4gYW5jaG9yIGZvciB0aGUgc3R5bGVzIHRvIGJlIHBsYWNlZCBiZWZvcmUuIFRoZXNlXG4gICAgICAgICAgICAgICAgICAgIC8vIHN0eWxlcyB3aWxsIGJlIGFwcGxpZWQgX2JlZm9yZV8gPHN0eWxlIGpzeCBnbG9iYWw+LlxuICAgICAgICAgICAgICAgICAgICAvLyBUaGVzZSBlbGVtZW50cyBzaG91bGQgYWx3YXlzIGV4aXN0LiBJZiB0aGV5IGRvIG5vdCxcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhpcyBjb2RlIHNob3VsZCBmYWlsLlxuICAgICAgICAgICAgICAgICAgICB2YXIgYW5jaG9yRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjX19uZXh0X2Nzc19fRE9fTk9UX1VTRV9fXCIpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcGFyZW50Tm9kZSA9IGFuY2hvckVsZW1lbnQucGFyZW50Tm9kZS8vIE5vcm1hbGx5IDxoZWFkPlxuICAgICAgICAgICAgICAgICAgICA7XG4gICAgICAgICAgICAgICAgICAgIC8vIEVhY2ggc3R5bGUgdGFnIHNob3VsZCBiZSBwbGFjZWQgcmlnaHQgYmVmb3JlIG91clxuICAgICAgICAgICAgICAgICAgICAvLyBhbmNob3IuIEJ5IGluc2VydGluZyBiZWZvcmUgYW5kIG5vdCBhZnRlciwgd2UgZG8gbm90XG4gICAgICAgICAgICAgICAgICAgIC8vIG5lZWQgdG8gdHJhY2sgdGhlIGxhc3QgaW5zZXJ0ZWQgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZWxlbWVudCwgYW5jaG9yRWxlbWVudCk7XG4gICAgICAgICAgICAgICAgfTtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgaWYgKCFjb250ZW50LmxvY2FscyB8fCBtb2R1bGUuaG90LmludmFsaWRhdGUpIHtcbiAgICB2YXIgaXNFcXVhbExvY2FscyA9IGZ1bmN0aW9uIGlzRXF1YWxMb2NhbHMoYSwgYiwgaXNOYW1lZEV4cG9ydCkge1xuICAgIGlmICghYSAmJiBiIHx8IGEgJiYgIWIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBsZXQgcDtcbiAgICBmb3IocCBpbiBhKXtcbiAgICAgICAgaWYgKGlzTmFtZWRFeHBvcnQgJiYgcCA9PT0gXCJkZWZhdWx0XCIpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhW3BdICE9PSBiW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yKHAgaW4gYil7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWFbcF0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn07XG4gICAgdmFyIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXG4gICAgICBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0ub25lT2ZbMTNdLnVzZVsxXSEuLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0ub25lT2ZbMTNdLnVzZVsyXSEuL2dsb2JhbHMuY3NzXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS5vbmVPZlsxM10udXNlWzFdIS4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS5vbmVPZlsxM10udXNlWzJdIS4vZ2xvYmFscy5jc3NcIik7XG5cbiAgICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmICghaXNFcXVhbExvY2FscyhvbGRMb2NhbHMsIGNvbnRlbnQubG9jYWxzKSkge1xuICAgICAgICAgICAgICAgIG1vZHVsZS5ob3QuaW52YWxpZGF0ZSgpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICAgICAgICAgICAgdXBkYXRlKGNvbnRlbnQpO1xuICAgICAgfVxuICAgIClcbiAgfVxuXG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHtcbiAgICB1cGRhdGUoKTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/styles/globals.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nconst isOldIE = function isOldIE() {\n    let memo;\n    return function memorize() {\n        if (typeof memo === \"undefined\") {\n            // Test for IE <= 9 as proposed by Browserhacks\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n            // Tests for existence of standard globals is to allow style-loader\n            // to operate correctly into non-standard environments\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\n            memo = Boolean(window && document && document.all && !window.atob);\n        }\n        return memo;\n    };\n}();\nconst getTargetElement = function() {\n    const memo = {};\n    return function memorize(target) {\n        if (typeof memo[target] === \"undefined\") {\n            let styleTarget = document.querySelector(target);\n            // Special case to return head of iframe instead of iframe itself\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n                try {\n                    // This will throw an exception if access to iframe is blocked\n                    // due to cross-origin restrictions\n                    styleTarget = styleTarget.contentDocument.head;\n                } catch (e) {\n                    // istanbul ignore next\n                    styleTarget = null;\n                }\n            }\n            memo[target] = styleTarget;\n        }\n        return memo[target];\n    };\n}();\nconst stylesInDom = [];\nfunction getIndexByIdentifier(identifier) {\n    let result = -1;\n    for(let i = 0; i < stylesInDom.length; i++){\n        if (stylesInDom[i].identifier === identifier) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nfunction modulesToDom(list, options) {\n    const idCountMap = {};\n    const identifiers = [];\n    for(let i = 0; i < list.length; i++){\n        const item = list[i];\n        const id = options.base ? item[0] + options.base : item[0];\n        const count = idCountMap[id] || 0;\n        const identifier = id + \" \" + count.toString();\n        idCountMap[id] = count + 1;\n        const index = getIndexByIdentifier(identifier);\n        const obj = {\n            css: item[1],\n            media: item[2],\n            sourceMap: item[3]\n        };\n        if (index !== -1) {\n            stylesInDom[index].references++;\n            stylesInDom[index].updater(obj);\n        } else {\n            stylesInDom.push({\n                identifier: identifier,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                updater: addStyle(obj, options),\n                references: 1\n            });\n        }\n        identifiers.push(identifier);\n    }\n    return identifiers;\n}\nfunction insertStyleElement(options) {\n    const style = document.createElement(\"style\");\n    const attributes = options.attributes || {};\n    if (typeof attributes.nonce === \"undefined\") {\n        const nonce = // eslint-disable-next-line no-undef\n         true ? __webpack_require__.nc : 0;\n        if (nonce) {\n            attributes.nonce = nonce;\n        }\n    }\n    Object.keys(attributes).forEach(function(key) {\n        style.setAttribute(key, attributes[key]);\n    });\n    if (typeof options.insert === \"function\") {\n        options.insert(style);\n    } else {\n        const target = getTargetElement(options.insert || \"head\");\n        if (!target) {\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n        }\n        target.appendChild(style);\n    }\n    return style;\n}\nfunction removeStyleElement(style) {\n    // istanbul ignore if\n    if (style.parentNode === null) {\n        return false;\n    }\n    style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */ const replaceText = function replaceText() {\n    const textStore = [];\n    return function replace(index, replacement) {\n        textStore[index] = replacement;\n        return textStore.filter(Boolean).join(\"\\n\");\n    };\n}();\nfunction applyToSingletonTag(style, index, remove, obj) {\n    const css = remove ? \"\" : obj.media ? \"@media \" + obj.media + \" {\" + obj.css + \"}\" : obj.css;\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = replaceText(index, css);\n    } else {\n        const cssNode = document.createTextNode(css);\n        const childNodes = style.childNodes;\n        if (childNodes[index]) {\n            style.removeChild(childNodes[index]);\n        }\n        if (childNodes.length) {\n            style.insertBefore(cssNode, childNodes[index]);\n        } else {\n            style.appendChild(cssNode);\n        }\n    }\n}\nfunction applyToTag(style, _options, obj) {\n    let css = obj.css;\n    const media = obj.media;\n    const sourceMap = obj.sourceMap;\n    if (media) {\n        style.setAttribute(\"media\", media);\n    } else {\n        style.removeAttribute(\"media\");\n    }\n    if (sourceMap && typeof btoa !== \"undefined\") {\n        css += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n    }\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        while(style.firstChild){\n            style.removeChild(style.firstChild);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n}\nlet singleton = null;\nlet singletonCounter = 0;\nfunction addStyle(obj, options) {\n    let style;\n    let update;\n    let remove;\n    if (options.singleton) {\n        const styleIndex = singletonCounter++;\n        style = singleton || (singleton = insertStyleElement(options));\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else {\n        style = insertStyleElement(options);\n        update = applyToTag.bind(null, style, options);\n        remove = function() {\n            removeStyleElement(style);\n        };\n    }\n    update(obj);\n    return function updateStyle(newObj) {\n        if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n                return;\n            }\n            update(obj = newObj);\n        } else {\n            remove();\n        }\n    };\n}\nmodule.exports = function(list, options) {\n    options = options || {};\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n    if (!options.singleton && typeof options.singleton !== \"boolean\") {\n        options.singleton = isOldIE();\n    }\n    list = list || [];\n    let lastIdentifiers = modulesToDom(list, options);\n    return function update(newList) {\n        newList = newList || [];\n        if (Object.prototype.toString.call(newList) !== \"[object Array]\") {\n            return;\n        }\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            stylesInDom[index].references--;\n        }\n        const newLastIdentifiers = modulesToDom(newList, options);\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            if (stylesInDom[index].references === 0) {\n                stylesInDom[index].updater();\n                stylesInDom.splice(index, 1);\n            }\n        }\n        lastIdentifiers = newLastIdentifiers;\n    };\n};\n\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n"));

/***/ }),

/***/ "./config/appInfo.ts":
/*!***************************!*\
  !*** ./config/appInfo.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"appInfo\": function() { return /* binding */ appInfo; }\n/* harmony export */ });\nconst appInfo = {\n    // learn more about this on https://supertokens.com/docs/thirdpartyemailpassword/appinfo\n    appName: \"Diktatorial\",\n    apiDomain: \"http://localhost:3000\",\n    /*if you do a LocalDev cahnge to \"http://localhost:3000\" */ websiteDomain: \"http://localhost:3000\",\n    /*if you do a LocalDev cahnge to \"http://localhost:3000\" */ apiBasePath: \"/api/auth\",\n    websiteBasePath: \"/upload\"\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb25maWcvYXBwSW5mby50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQ08sTUFBTUEsVUFBVTtJQUNuQix3RkFBd0Y7SUFDeEZDLFNBQVM7SUFDVEMsV0FBVztJQUF3Qix5REFBeUQsR0FDNUZDLGVBQWU7SUFBd0IseURBQXlELEdBQ2hHQyxhQUFhO0lBQ2JDLGlCQUFpQjtBQUNuQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbmZpZy9hcHBJbmZvLnRzPzlmYzMiXSwic291cmNlc0NvbnRlbnQiOlsiXHJcbmV4cG9ydCBjb25zdCBhcHBJbmZvID0ge1xyXG4gICAgLy8gbGVhcm4gbW9yZSBhYm91dCB0aGlzIG9uIGh0dHBzOi8vc3VwZXJ0b2tlbnMuY29tL2RvY3MvdGhpcmRwYXJ0eWVtYWlscGFzc3dvcmQvYXBwaW5mb1xyXG4gICAgYXBwTmFtZTogXCJEaWt0YXRvcmlhbFwiLFxyXG4gICAgYXBpRG9tYWluOiBcImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMFwiLC8qaWYgeW91IGRvIGEgTG9jYWxEZXYgY2FobmdlIHRvIFwiaHR0cDovL2xvY2FsaG9zdDozMDAwXCIgKi9cclxuICAgIHdlYnNpdGVEb21haW46IFwiaHR0cDovL2xvY2FsaG9zdDozMDAwXCIsLyppZiB5b3UgZG8gYSBMb2NhbERldiBjYWhuZ2UgdG8gXCJodHRwOi8vbG9jYWxob3N0OjMwMDBcIiAqL1xyXG4gICAgYXBpQmFzZVBhdGg6IFwiL2FwaS9hdXRoXCIsXHJcbiAgICB3ZWJzaXRlQmFzZVBhdGg6IFwiL3VwbG9hZFwiXHJcbiAgfVxyXG4gICJdLCJuYW1lcyI6WyJhcHBJbmZvIiwiYXBwTmFtZSIsImFwaURvbWFpbiIsIndlYnNpdGVEb21haW4iLCJhcGlCYXNlUGF0aCIsIndlYnNpdGVCYXNlUGF0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./config/appInfo.ts\n"));

/***/ }),

/***/ "./config/frontendConfig.ts":
/*!**********************************!*\
  !*** ./config/frontendConfig.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"frontendConfig\": function() { return /* binding */ frontendConfig; }\n/* harmony export */ });\n/* harmony import */ var supertokens_auth_react_recipe_emailpassword__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! supertokens-auth-react/recipe/emailpassword */ \"./node_modules/supertokens-auth-react/recipe/emailpassword/index.js\");\n/* harmony import */ var supertokens_auth_react_recipe_emailpassword__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(supertokens_auth_react_recipe_emailpassword__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var supertokens_auth_react_recipe_session__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! supertokens-auth-react/recipe/session */ \"./node_modules/supertokens-auth-react/recipe/session/index.js\");\n/* harmony import */ var supertokens_auth_react_recipe_session__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(supertokens_auth_react_recipe_session__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _appInfo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./appInfo */ \"./config/appInfo.ts\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nconst frontendConfig = ()=>{\n    return {\n        appInfo: _appInfo__WEBPACK_IMPORTED_MODULE_2__.appInfo,\n        recipeList: [\n            supertokens_auth_react_recipe_emailpassword__WEBPACK_IMPORTED_MODULE_0___default().init(),\n            supertokens_auth_react_recipe_session__WEBPACK_IMPORTED_MODULE_1___default().init()\n        ],\n        windowHandler: (oI)=>{\n            return {\n                ...oI,\n                location: {\n                    ...oI.location,\n                    setHref: (href)=>{\n                        next_router__WEBPACK_IMPORTED_MODULE_3___default().push(href);\n                    }\n                }\n            };\n        }\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb25maWcvZnJvbnRlbmRDb25maWcudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBNEU7QUFDWjtBQUM3QjtBQUNIO0FBRXpCLE1BQU1JLGlCQUFpQixJQUFNO0lBQ2xDLE9BQU87UUFDTEYsT0FBT0EsK0NBQUFBO1FBQ1BHLFlBQVk7WUFDVkwsdUZBQXVCO1lBQ3ZCQyxpRkFBaUI7U0FDbEI7UUFDRE0sZUFBZSxDQUFDQyxLQUFZO1lBQzFCLE9BQU87Z0JBQ0wsR0FBR0EsRUFBRTtnQkFDTEMsVUFBVTtvQkFDUixHQUFHRCxHQUFHQyxRQUFRO29CQUNkQyxTQUFTLENBQUNDLE9BQWlCO3dCQUN6QlIsdURBQVcsQ0FBQ1E7b0JBQ2Q7Z0JBQ0Y7WUFDRjtRQUNGO0lBQ0Y7QUFDRixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbmZpZy9mcm9udGVuZENvbmZpZy50cz8wMDlhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFbWFpbFBhc3N3b3JkUmVhY3QgZnJvbSAnc3VwZXJ0b2tlbnMtYXV0aC1yZWFjdC9yZWNpcGUvZW1haWxwYXNzd29yZCdcclxuaW1wb3J0IFNlc3Npb25SZWFjdCBmcm9tICdzdXBlcnRva2Vucy1hdXRoLXJlYWN0L3JlY2lwZS9zZXNzaW9uJ1xyXG5pbXBvcnQgeyBhcHBJbmZvIH0gZnJvbSAnLi9hcHBJbmZvJ1xyXG5pbXBvcnQgUm91dGVyIGZyb20gJ25leHQvcm91dGVyJ1xyXG5cclxuZXhwb3J0IGNvbnN0IGZyb250ZW5kQ29uZmlnID0gKCkgPT4ge1xyXG4gIHJldHVybiB7XHJcbiAgICBhcHBJbmZvLFxyXG4gICAgcmVjaXBlTGlzdDogW1xyXG4gICAgICBFbWFpbFBhc3N3b3JkUmVhY3QuaW5pdCgpLFxyXG4gICAgICBTZXNzaW9uUmVhY3QuaW5pdCgpLFxyXG4gICAgXSxcclxuICAgIHdpbmRvd0hhbmRsZXI6IChvSTogYW55KSA9PiB7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgLi4ub0ksXHJcbiAgICAgICAgbG9jYXRpb246IHtcclxuICAgICAgICAgIC4uLm9JLmxvY2F0aW9uLFxyXG4gICAgICAgICAgc2V0SHJlZjogKGhyZWY6IHN0cmluZykgPT4ge1xyXG4gICAgICAgICAgICBSb3V0ZXIucHVzaChocmVmKVxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9LFxyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gIH1cclxufSJdLCJuYW1lcyI6WyJFbWFpbFBhc3N3b3JkUmVhY3QiLCJTZXNzaW9uUmVhY3QiLCJhcHBJbmZvIiwiUm91dGVyIiwiZnJvbnRlbmRDb25maWciLCJyZWNpcGVMaXN0IiwiaW5pdCIsIndpbmRvd0hhbmRsZXIiLCJvSSIsImxvY2F0aW9uIiwic2V0SHJlZiIsImhyZWYiLCJwdXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./config/frontendConfig.ts\n"));

/***/ }),

/***/ "./src/pages/_app.tsx":
/*!****************************!*\
  !*** ./src/pages/_app.tsx ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/globals.css */ \"./src/styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var supertokens_auth_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! supertokens-auth-react */ \"./node_modules/supertokens-auth-react/index.js\");\n/* harmony import */ var supertokens_auth_react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(supertokens_auth_react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _config_frontendConfig__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../config/frontendConfig */ \"./config/frontendConfig.ts\");\n\n\n\n\n\nif (true) {\n    // we only want to call this init function on the frontend, so we check typeof window !== 'undefined'\n    supertokens_auth_react__WEBPACK_IMPORTED_MODULE_3___default().init((0,_config_frontendConfig__WEBPACK_IMPORTED_MODULE_4__.frontendConfig)());\n}\nfunction MyApp(param) {\n    let { Component , pageProps  } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(supertokens_auth_react__WEBPACK_IMPORTED_MODULE_3__.SuperTokensWrapper, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n            ...pageProps\n        }, void 0, false, {\n            fileName: \"/app/src/pages/_app.tsx\",\n            lineNumber: 15,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/app/src/pages/_app.tsx\",\n        lineNumber: 14,\n        columnNumber: 5\n    }, this);\n}\n_c = MyApp;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MyApp);\nvar _c;\n$RefreshReg$(_c, \"MyApp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvX2FwcC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBOEI7QUFDTDtBQUVvRDtBQUNqQjtBQUU1RCxJQUFJLElBQWtCLEVBQWE7SUFDakMscUdBQXFHO0lBQ3JHQyxrRUFBcUIsQ0FBQ0Usc0VBQWNBO0FBQ3RDLENBQUM7QUFFRCxTQUFTRSxNQUFNLEtBQWtDLEVBQUU7UUFBcEMsRUFBRUMsVUFBUyxFQUFFQyxVQUFTLEVBQVksR0FBbEM7SUFDYixxQkFDRSw4REFBQ0wsc0VBQWtCQTtrQkFDakIsNEVBQUNJO1lBQVcsR0FBR0MsU0FBUzs7Ozs7Ozs7Ozs7QUFHOUI7S0FOU0Y7QUFRVCwrREFBZUEsS0FBS0EsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvcGFnZXMvX2FwcC50c3g/ZjlkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4uL3N0eWxlcy9nbG9iYWxzLmNzcydcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IEFwcFByb3BzIH0gZnJvbSAnbmV4dC9hcHAnXG5pbXBvcnQgU3VwZXJUb2tlbnNSZWFjdCwgeyBTdXBlclRva2Vuc1dyYXBwZXIgfSBmcm9tICdzdXBlcnRva2Vucy1hdXRoLXJlYWN0J1xuaW1wb3J0IHsgZnJvbnRlbmRDb25maWcgfSBmcm9tICcuLi8uLi9jb25maWcvZnJvbnRlbmRDb25maWcnXG5cbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAvLyB3ZSBvbmx5IHdhbnQgdG8gY2FsbCB0aGlzIGluaXQgZnVuY3Rpb24gb24gdGhlIGZyb250ZW5kLCBzbyB3ZSBjaGVjayB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJ1xuICBTdXBlclRva2Vuc1JlYWN0LmluaXQoZnJvbnRlbmRDb25maWcoKSlcbn1cblxuZnVuY3Rpb24gTXlBcHAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9OiBBcHBQcm9wcykge1xuICByZXR1cm4gKFxuICAgIDxTdXBlclRva2Vuc1dyYXBwZXI+XG4gICAgICA8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+XG4gICAgPC9TdXBlclRva2Vuc1dyYXBwZXI+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IE15QXBwIl0sIm5hbWVzIjpbIlJlYWN0IiwiU3VwZXJUb2tlbnNSZWFjdCIsIlN1cGVyVG9rZW5zV3JhcHBlciIsImZyb250ZW5kQ29uZmlnIiwiaW5pdCIsIk15QXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pages/_app.tsx\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxPQUFPLGdCQUFnQixtQkFBbUIsTUFBTSxNQUFNLDRCQUE0QixtREFBbUQsK0JBQStCLHFEQUFxRCxZQUFZLElBQUksbUNBQW1DLGFBQWEsS0FBSyxvQkFBb0IsU0FBUyxtQkFBbUIsSUFBSSxxQ0FBcUMsZUFBZSxLQUFLLHVCQUF1QixTQUFTLHVCQUF1QixJQUFJLHVCQUF1QixtQkFBbUIsdUJBQXVCLDJDQUEyQyxhQUFhLHVCQUF1QixJQUFJLGNBQWMsU0FBUyxJQUFJLHdCQUF3QixTQUFTLDBCQUEwQiw0QkFBNEIscUJBQXFCLHVCQUF1QixnREFBZ0QsZUFBZSx1QkFBdUIsSUFBSSxZQUFZLFNBQVMsSUFBSSxzQkFBc0IsU0FBUyx3QkFBd0IsU0FBUyxZQUFZLE1BQU0sU0FBUywyQkFBMkIsV0FBVyxPQUFPLFFBQVEsYUFBYSxjQUFjLEtBQUssS0FBSyxhQUFhLGNBQWMsc0JBQXNCLE1BQU0sT0FBTyxrQ0FBa0MsT0FBTyxlQUFlLFNBQVMsSUFBSSxLQUFLLGFBQWEsTUFBTSxZQUFZLEtBQUssV0FBVyxPQUFPLFFBQVEsbUJBQW1CLHVCQUF1QixvQ0FBb0MsdUJBQXVCLFlBQVksbUJBQW1CLEtBQUsscUJBQXFCLHNCQUFzQixxQkFBcUIseUJBQXlCLG1CQUFtQixXQUFXLGFBQWEsOEJBQThCLGlDQUFpQyxrQkFBa0IsZUFBZSxTQUFTLFVBQVUsYUFBYSxjQUFjLGlCQUFpQixVQUFVLG1CQUFtQixZQUFZLFdBQVcsc0JBQXNCLDBCQUEwQixZQUFZLHVCQUF1QiwyQkFBMkIsd0JBQXdCLFVBQVUsc0JBQXNCLHFEQUFxRCxpQkFBaUIsV0FBVyxvQkFBb0IsbURBQW1ELG1CQUFtQixZQUFZLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLCtCQUErQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wcm9jZXNzL2Jyb3dzZXIuanM/MWIxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17MjI5OmZ1bmN0aW9uKGUpe3ZhciB0PWUuZXhwb3J0cz17fTt2YXIgcjt2YXIgbjtmdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfShmdW5jdGlvbigpe3RyeXtpZih0eXBlb2Ygc2V0VGltZW91dD09PVwiZnVuY3Rpb25cIil7cj1zZXRUaW1lb3V0fWVsc2V7cj1kZWZhdWx0U2V0VGltb3V0fX1jYXRjaChlKXtyPWRlZmF1bHRTZXRUaW1vdXR9dHJ5e2lmKHR5cGVvZiBjbGVhclRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe249Y2xlYXJUaW1lb3V0fWVsc2V7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX1jYXRjaChlKXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fSkoKTtmdW5jdGlvbiBydW5UaW1lb3V0KGUpe2lmKHI9PT1zZXRUaW1lb3V0KXtyZXR1cm4gc2V0VGltZW91dChlLDApfWlmKChyPT09ZGVmYXVsdFNldFRpbW91dHx8IXIpJiZzZXRUaW1lb3V0KXtyPXNldFRpbWVvdXQ7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX10cnl7cmV0dXJuIHIoZSwwKX1jYXRjaCh0KXt0cnl7cmV0dXJuIHIuY2FsbChudWxsLGUsMCl9Y2F0Y2godCl7cmV0dXJuIHIuY2FsbCh0aGlzLGUsMCl9fX1mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQoZSl7aWYobj09PWNsZWFyVGltZW91dCl7cmV0dXJuIGNsZWFyVGltZW91dChlKX1pZigobj09PWRlZmF1bHRDbGVhclRpbWVvdXR8fCFuKSYmY2xlYXJUaW1lb3V0KXtuPWNsZWFyVGltZW91dDtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfXRyeXtyZXR1cm4gbihlKX1jYXRjaCh0KXt0cnl7cmV0dXJuIG4uY2FsbChudWxsLGUpfWNhdGNoKHQpe3JldHVybiBuLmNhbGwodGhpcyxlKX19fXZhciBpPVtdO3ZhciBvPWZhbHNlO3ZhciB1O3ZhciBhPS0xO2Z1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpe2lmKCFvfHwhdSl7cmV0dXJufW89ZmFsc2U7aWYodS5sZW5ndGgpe2k9dS5jb25jYXQoaSl9ZWxzZXthPS0xfWlmKGkubGVuZ3RoKXtkcmFpblF1ZXVlKCl9fWZ1bmN0aW9uIGRyYWluUXVldWUoKXtpZihvKXtyZXR1cm59dmFyIGU9cnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO289dHJ1ZTt2YXIgdD1pLmxlbmd0aDt3aGlsZSh0KXt1PWk7aT1bXTt3aGlsZSgrK2E8dCl7aWYodSl7dVthXS5ydW4oKX19YT0tMTt0PWkubGVuZ3RofXU9bnVsbDtvPWZhbHNlO3J1bkNsZWFyVGltZW91dChlKX10Lm5leHRUaWNrPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dFtyLTFdPWFyZ3VtZW50c1tyXX19aS5wdXNoKG5ldyBJdGVtKGUsdCkpO2lmKGkubGVuZ3RoPT09MSYmIW8pe3J1blRpbWVvdXQoZHJhaW5RdWV1ZSl9fTtmdW5jdGlvbiBJdGVtKGUsdCl7dGhpcy5mdW49ZTt0aGlzLmFycmF5PXR9SXRlbS5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX07dC50aXRsZT1cImJyb3dzZXJcIjt0LmJyb3dzZXI9dHJ1ZTt0LmVudj17fTt0LmFyZ3Y9W107dC52ZXJzaW9uPVwiXCI7dC52ZXJzaW9ucz17fTtmdW5jdGlvbiBub29wKCl7fXQub249bm9vcDt0LmFkZExpc3RlbmVyPW5vb3A7dC5vbmNlPW5vb3A7dC5vZmY9bm9vcDt0LnJlbW92ZUxpc3RlbmVyPW5vb3A7dC5yZW1vdmVBbGxMaXN0ZW5lcnM9bm9vcDt0LmVtaXQ9bm9vcDt0LnByZXBlbmRMaXN0ZW5lcj1ub29wO3QucHJlcGVuZE9uY2VMaXN0ZW5lcj1ub29wO3QubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybltdfTt0LmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9O3QuY2hkaXI9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXt2YXIgbj10W3JdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9dFtyXT17ZXhwb3J0czp7fX07dmFyIG89dHJ1ZTt0cnl7ZVtyXShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtvPWZhbHNlfWZpbmFsbHl7aWYobylkZWxldGUgdFtyXX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgcj1fX25jY3dwY2tfcmVxdWlyZV9fKDIyOSk7bW9kdWxlLmV4cG9ydHM9cn0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "./node_modules/next/router.js":
/*!*************************************!*\
  !*** ./node_modules/next/router.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/client/router */ \"./node_modules/next/dist/client/router.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9yb3V0ZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsNkdBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L3JvdXRlci5qcz8xYmI2Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2NsaWVudC9yb3V0ZXInKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/router.js\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-runtime.development.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-runtime.development.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nfunction jsxWithValidationStatic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nfunction jsxWithValidationDynamic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, false);\n  }\n}\n\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\n\nvar jsxs =  jsxWithValidationStatic ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsx;\nexports.jsxs = jsxs;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz81Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-runtime.js":
/*!*******************************************!*\
  !*** ./node_modules/react/jsx-runtime.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LXJ1bnRpbWUuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixFQUFFLCtJQUFrRTtBQUNwRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LXJ1bnRpbWUuanM/MzRkMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-runtime.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-auth-react/index.js":
/*!******************************************************!*\
  !*** ./node_modules/supertokens-auth-react/index.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n__export(__webpack_require__(/*! ./lib/build/ */ \"./node_modules/supertokens-auth-react/lib/build/index.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtYXV0aC1yZWFjdC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCLFNBQVMsbUJBQU8sQ0FBQyw4RUFBYyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtYXV0aC1yZWFjdC9pbmRleC5qcz81N2IxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIENvcHlyaWdodCAoYykgMjAyMSwgVlJBSSBMYWJzIGFuZC9vciBpdHMgYWZmaWxpYXRlcy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvZnR3YXJlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpIGFzIHB1Ymxpc2hlZCBieSB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24uXG4gKlxuICogWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5XG4gKiBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVFxuICogV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlXG4gKiBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuXCJ1c2Ugc3RyaWN0XCI7XG5mdW5jdGlvbiBfX2V4cG9ydChtKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAoIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIGV4cG9ydHNbcF0gPSBtW3BdO1xufVxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbl9fZXhwb3J0KHJlcXVpcmUoXCIuL2xpYi9idWlsZC9cIikpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/supertokens-auth-react/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-auth-react/lib/build/authRecipe-shared.js":
/*!****************************************************************************!*\
  !*** ./node_modules/supertokens-auth-react/lib/build/authRecipe-shared.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ./utils.js */ \"./node_modules/supertokens-auth-react/lib/build/utils.js\");\nvar postSuperTokensInitCallbacks = __webpack_require__(/*! supertokens-web-js/utils/postSuperTokensInitCallbacks */ \"./node_modules/supertokens-web-js/utils/postSuperTokensInitCallbacks.js\");\nvar utils$1 = __webpack_require__(/*! ./recipeModule-shared.js */ \"./node_modules/supertokens-auth-react/lib/build/recipeModule-shared.js\");\nvar recipe = __webpack_require__(/*! ./session-shared2.js */ \"./node_modules/supertokens-auth-react/lib/build/session-shared2.js\");\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar AuthRecipe = /** @class */ (function (_super) {\n    utils.__extends(AuthRecipe, _super);\n    function AuthRecipe(config) {\n        var _this = _super.call(this, config) || this;\n        _this.getAuthRecipeDefaultRedirectionURL = function (context) {\n            return utils.__awaiter(_this, void 0, void 0, function () {\n                return utils.__generator(this, function (_a) {\n                    if (context.action === \"SUCCESS\") {\n                        return [2 /*return*/, context.redirectToPath === undefined ? \"/\" : context.redirectToPath];\n                    } else {\n                        throw new Error(\"Should never come here\");\n                    }\n                });\n            });\n        };\n        _this.signOut = function (input) {\n            return utils.__awaiter(_this, void 0, void 0, function () {\n                return utils.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            return [\n                                4 /*yield*/,\n                                recipe.Session.getInstanceOrThrow().signOut({\n                                    userContext: utils.getNormalisedUserContext(\n                                        input === null || input === void 0 ? void 0 : input.userContext\n                                    ),\n                                }),\n                            ];\n                        case 1:\n                            return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        _this.doesSessionExist = function (input) {\n            return utils.__awaiter(_this, void 0, void 0, function () {\n                return utils.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            return [\n                                4 /*yield*/,\n                                recipe.Session.getInstanceOrThrow().doesSessionExist({\n                                    userContext: utils.getNormalisedUserContext(\n                                        input === null || input === void 0 ? void 0 : input.userContext\n                                    ),\n                                }),\n                            ];\n                        case 1:\n                            return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        postSuperTokensInitCallbacks.PostSuperTokensInitCallbacks.addPostInitCallback(function () {\n            var session = recipe.Session.getInstance();\n            if (session !== undefined) {\n                session.addAuthRecipeRedirectionHandler(_this.config.recipeId, _this.redirect.bind(_this));\n            }\n        });\n        return _this;\n    }\n    return AuthRecipe;\n})(utils$1.RecipeModule);\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nfunction normaliseAuthRecipe(config) {\n    return utils$1.normaliseRecipeModuleConfig(config);\n}\n\nexports.AuthRecipe = AuthRecipe;\nexports.normaliseAuthRecipe = normaliseAuthRecipe;\n//# sourceMappingURL=authRecipe-shared.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtYXV0aC1yZWFjdC9saWIvYnVpbGQvYXV0aFJlY2lwZS1zaGFyZWQuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLDRFQUFZO0FBQ2hDLG1DQUFtQyxtQkFBTyxDQUFDLHNJQUF1RDtBQUNsRyxjQUFjLG1CQUFPLENBQUMsd0dBQTBCO0FBQ2hELGFBQWEsbUJBQU8sQ0FBQyxnR0FBc0I7O0FBRTNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCO0FBQ2xCLDJCQUEyQjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtYXV0aC1yZWFjdC9saWIvYnVpbGQvYXV0aFJlY2lwZS1zaGFyZWQuanM/NWU0NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIHV0aWxzID0gcmVxdWlyZShcIi4vdXRpbHMuanNcIik7XG52YXIgcG9zdFN1cGVyVG9rZW5zSW5pdENhbGxiYWNrcyA9IHJlcXVpcmUoXCJzdXBlcnRva2Vucy13ZWItanMvdXRpbHMvcG9zdFN1cGVyVG9rZW5zSW5pdENhbGxiYWNrc1wiKTtcbnZhciB1dGlscyQxID0gcmVxdWlyZShcIi4vcmVjaXBlTW9kdWxlLXNoYXJlZC5qc1wiKTtcbnZhciByZWNpcGUgPSByZXF1aXJlKFwiLi9zZXNzaW9uLXNoYXJlZDIuanNcIik7XG5cbi8qIENvcHlyaWdodCAoYykgMjAyMSwgVlJBSSBMYWJzIGFuZC9vciBpdHMgYWZmaWxpYXRlcy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvZnR3YXJlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpIGFzIHB1Ymxpc2hlZCBieSB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24uXG4gKlxuICogWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5XG4gKiBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVFxuICogV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlXG4gKiBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBBdXRoUmVjaXBlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIHV0aWxzLl9fZXh0ZW5kcyhBdXRoUmVjaXBlLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEF1dGhSZWNpcGUoY29uZmlnKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGNvbmZpZykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuZ2V0QXV0aFJlY2lwZURlZmF1bHRSZWRpcmVjdGlvblVSTCA9IGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAgICAgICByZXR1cm4gdXRpbHMuX19hd2FpdGVyKF90aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB1dGlscy5fX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbnRleHQuYWN0aW9uID09PSBcIlNVQ0NFU1NcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIGNvbnRleHQucmVkaXJlY3RUb1BhdGggPT09IHVuZGVmaW5lZCA/IFwiL1wiIDogY29udGV4dC5yZWRpcmVjdFRvUGF0aF07XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJTaG91bGQgbmV2ZXIgY29tZSBoZXJlXCIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMuc2lnbk91dCA9IGZ1bmN0aW9uIChpbnB1dCkge1xuICAgICAgICAgICAgcmV0dXJuIHV0aWxzLl9fYXdhaXRlcihfdGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdXRpbHMuX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA0IC8qeWllbGQqLyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjaXBlLlNlc3Npb24uZ2V0SW5zdGFuY2VPclRocm93KCkuc2lnbk91dCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyQ29udGV4dDogdXRpbHMuZ2V0Tm9ybWFsaXNlZFVzZXJDb250ZXh0KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0ID09PSBudWxsIHx8IGlucHV0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpbnB1dC51c2VyQ29udGV4dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgX2Euc2VudCgpXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzLmRvZXNTZXNzaW9uRXhpc3QgPSBmdW5jdGlvbiAoaW5wdXQpIHtcbiAgICAgICAgICAgIHJldHVybiB1dGlscy5fX2F3YWl0ZXIoX3RoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHV0aWxzLl9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNCAvKnlpZWxkKi8sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY2lwZS5TZXNzaW9uLmdldEluc3RhbmNlT3JUaHJvdygpLmRvZXNTZXNzaW9uRXhpc3Qoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlckNvbnRleHQ6IHV0aWxzLmdldE5vcm1hbGlzZWRVc2VyQ29udGV4dChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dCA9PT0gbnVsbCB8fCBpbnB1dCA9PT0gdm9pZCAwID8gdm9pZCAwIDogaW5wdXQudXNlckNvbnRleHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF07XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIF9hLnNlbnQoKV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICBwb3N0U3VwZXJUb2tlbnNJbml0Q2FsbGJhY2tzLlBvc3RTdXBlclRva2Vuc0luaXRDYWxsYmFja3MuYWRkUG9zdEluaXRDYWxsYmFjayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgc2Vzc2lvbiA9IHJlY2lwZS5TZXNzaW9uLmdldEluc3RhbmNlKCk7XG4gICAgICAgICAgICBpZiAoc2Vzc2lvbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgc2Vzc2lvbi5hZGRBdXRoUmVjaXBlUmVkaXJlY3Rpb25IYW5kbGVyKF90aGlzLmNvbmZpZy5yZWNpcGVJZCwgX3RoaXMucmVkaXJlY3QuYmluZChfdGhpcykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICByZXR1cm4gQXV0aFJlY2lwZTtcbn0pKHV0aWxzJDEuUmVjaXBlTW9kdWxlKTtcblxuLyogQ29weXJpZ2h0IChjKSAyMDIxLCBWUkFJIExhYnMgYW5kL29yIGl0cyBhZmZpbGlhdGVzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc29mdHdhcmUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIikgYXMgcHVibGlzaGVkIGJ5IHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbi5cbiAqXG4gKiBZb3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXlcbiAqIG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUXG4gKiBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGVcbiAqIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuZnVuY3Rpb24gbm9ybWFsaXNlQXV0aFJlY2lwZShjb25maWcpIHtcbiAgICByZXR1cm4gdXRpbHMkMS5ub3JtYWxpc2VSZWNpcGVNb2R1bGVDb25maWcoY29uZmlnKTtcbn1cblxuZXhwb3J0cy5BdXRoUmVjaXBlID0gQXV0aFJlY2lwZTtcbmV4cG9ydHMubm9ybWFsaXNlQXV0aFJlY2lwZSA9IG5vcm1hbGlzZUF1dGhSZWNpcGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRoUmVjaXBlLXNoYXJlZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-auth-react/lib/build/authRecipe-shared.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-auth-react/lib/build/emailpassword-shared2.js":
/*!********************************************************************************!*\
  !*** ./node_modules/supertokens-auth-react/lib/build/emailpassword-shared2.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar genericComponentOverrideContext = __webpack_require__(/*! ./genericComponentOverrideContext.js */ \"./node_modules/supertokens-auth-react/lib/build/genericComponentOverrideContext.js\");\n\nvar _a = genericComponentOverrideContext.createGenericComponentsOverrideContext(),\n    useContext = _a[0],\n    Provider = _a[1];\n\nexports.Provider = Provider;\nexports.useContext = useContext;\n//# sourceMappingURL=emailpassword-shared2.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtYXV0aC1yZWFjdC9saWIvYnVpbGQvZW1haWxwYXNzd29yZC1zaGFyZWQyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHNDQUFzQyxtQkFBTyxDQUFDLGdJQUFzQzs7QUFFcEY7QUFDQTtBQUNBOztBQUVBLGdCQUFnQjtBQUNoQixrQkFBa0I7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1cGVydG9rZW5zLWF1dGgtcmVhY3QvbGliL2J1aWxkL2VtYWlscGFzc3dvcmQtc2hhcmVkMi5qcz8zZmQ4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgZ2VuZXJpY0NvbXBvbmVudE92ZXJyaWRlQ29udGV4dCA9IHJlcXVpcmUoXCIuL2dlbmVyaWNDb21wb25lbnRPdmVycmlkZUNvbnRleHQuanNcIik7XG5cbnZhciBfYSA9IGdlbmVyaWNDb21wb25lbnRPdmVycmlkZUNvbnRleHQuY3JlYXRlR2VuZXJpY0NvbXBvbmVudHNPdmVycmlkZUNvbnRleHQoKSxcbiAgICB1c2VDb250ZXh0ID0gX2FbMF0sXG4gICAgUHJvdmlkZXIgPSBfYVsxXTtcblxuZXhwb3J0cy5Qcm92aWRlciA9IFByb3ZpZGVyO1xuZXhwb3J0cy51c2VDb250ZXh0ID0gdXNlQ29udGV4dDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVtYWlscGFzc3dvcmQtc2hhcmVkMi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-auth-react/lib/build/emailpassword-shared2.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-auth-react/lib/build/emailpassword-shared3.js":
/*!********************************************************************************!*\
  !*** ./node_modules/supertokens-auth-react/lib/build/emailpassword-shared3.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ./utils.js */ \"./node_modules/supertokens-auth-react/lib/build/utils.js\");\nvar EmailPasswordWebJS = __webpack_require__(/*! supertokens-web-js/recipe/emailpassword */ \"./node_modules/supertokens-web-js/recipe/emailpassword/index.js\");\nvar NormalisedURLPath = __webpack_require__(/*! supertokens-web-js/utils/normalisedURLPath */ \"./node_modules/supertokens-web-js/utils/normalisedURLPath.js\");\nvar utils$1 = __webpack_require__(/*! ./authRecipe-shared.js */ \"./node_modules/supertokens-auth-react/lib/build/authRecipe-shared.js\");\nvar validators = __webpack_require__(/*! ./emailpassword-shared4.js */ \"./node_modules/supertokens-auth-react/lib/build/emailpassword-shared4.js\");\n\nfunction _interopDefault(e) {\n    return e && e.__esModule ? e : { default: e };\n}\n\nvar EmailPasswordWebJS__default = /*#__PURE__*/ _interopDefault(EmailPasswordWebJS);\nvar NormalisedURLPath__default = /*#__PURE__*/ _interopDefault(NormalisedURLPath);\n\nvar getFunctionOverrides = function (onHandleEvent) {\n    return function (originalImp) {\n        return utils.__assign(utils.__assign({}, originalImp), {\n            submitNewPassword: function (input) {\n                return utils.__awaiter(this, void 0, void 0, function () {\n                    var response;\n                    return utils.__generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                return [\n                                    4 /*yield*/,\n                                    originalImp.submitNewPassword(\n                                        utils.__assign(utils.__assign({}, input), { formFields: [input.formFields[0]] })\n                                    ),\n                                ];\n                            case 1:\n                                response = _a.sent();\n                                if (response.status === \"OK\") {\n                                    onHandleEvent({\n                                        action: \"PASSWORD_RESET_SUCCESSFUL\",\n                                        userContext: input.userContext,\n                                    });\n                                }\n                                return [2 /*return*/, response];\n                        }\n                    });\n                });\n            },\n            sendPasswordResetEmail: function (input) {\n                return utils.__awaiter(this, void 0, void 0, function () {\n                    var response;\n                    return utils.__generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                return [4 /*yield*/, originalImp.sendPasswordResetEmail(input)];\n                            case 1:\n                                response = _a.sent();\n                                if (response.status === \"OK\") {\n                                    onHandleEvent({\n                                        action: \"RESET_PASSWORD_EMAIL_SENT\",\n                                        userContext: input.userContext,\n                                    });\n                                }\n                                return [2 /*return*/, response];\n                        }\n                    });\n                });\n            },\n            signUp: function (input) {\n                return utils.__awaiter(this, void 0, void 0, function () {\n                    var response;\n                    return utils.__generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                return [4 /*yield*/, originalImp.signUp(input)];\n                            case 1:\n                                response = _a.sent();\n                                if (response.status === \"OK\") {\n                                    onHandleEvent({\n                                        action: \"SUCCESS\",\n                                        isNewUser: true,\n                                        user: response.user,\n                                        userContext: input.userContext,\n                                    });\n                                }\n                                return [2 /*return*/, response];\n                        }\n                    });\n                });\n            },\n            signIn: function (input) {\n                return utils.__awaiter(this, void 0, void 0, function () {\n                    var response;\n                    return utils.__generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                return [4 /*yield*/, originalImp.signIn(input)];\n                            case 1:\n                                response = _a.sent();\n                                if (response.status === \"OK\") {\n                                    onHandleEvent({\n                                        action: \"SUCCESS\",\n                                        isNewUser: false,\n                                        user: response.user,\n                                        userContext: input.userContext,\n                                    });\n                                }\n                                return [2 /*return*/, response];\n                        }\n                    });\n                });\n            },\n        });\n    };\n};\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nfunction normaliseEmailPasswordConfig(config) {\n    if (config === undefined) {\n        config = {};\n    }\n    var signInAndUpFeature = normaliseSignInAndUpFeature(config.signInAndUpFeature);\n    var signUpPasswordField = signInAndUpFeature.signUpForm.formFields.find(function (field) {\n        return field.id === \"password\";\n    });\n    var signUpEmailField = signInAndUpFeature.signUpForm.formFields.find(function (field) {\n        return field.id === \"email\";\n    });\n    var resetPasswordUsingTokenFeature = normaliseResetPasswordUsingTokenFeature(\n        signUpPasswordField.validate,\n        signUpEmailField,\n        config.resetPasswordUsingTokenFeature\n    );\n    var override = utils.__assign(\n        {\n            functions: function (originalImplementation) {\n                return originalImplementation;\n            },\n        },\n        config.override\n    );\n    return utils.__assign(utils.__assign({}, utils$1.normaliseAuthRecipe(config)), {\n        signInAndUpFeature: signInAndUpFeature,\n        resetPasswordUsingTokenFeature: resetPasswordUsingTokenFeature,\n        override: override,\n    });\n}\nfunction normaliseSignInAndUpFeature(config) {\n    if (config === undefined) {\n        config = {};\n    }\n    var disableDefaultUI = config.disableDefaultUI === true;\n    var signUpForm = normaliseSignUpFormFeatureConfig(config.signUpForm);\n    var defaultToSignUp = config.defaultToSignUp !== undefined ? config.defaultToSignUp : false;\n    /*\n     * Default Sign In corresponds to computed Sign Up fields filtered by email and password only.\n     * i.e. If the user overrides sign Up fields, that is propagated to default sign In fields.\n     * Exception made of the password validator which only verifies that the value is not empty for login\n     * https://github.com/supertokens/supertokens-auth-react/issues/21\n     */\n    var defaultSignInFields = signUpForm.formFields.reduce(function (signInFieldsAccumulator, field) {\n        if (field.id === \"email\") {\n            return utils.__spreadArray(utils.__spreadArray([], signInFieldsAccumulator, true), [field], false);\n        }\n        if (field.id === \"password\") {\n            return utils.__spreadArray(\n                utils.__spreadArray([], signInFieldsAccumulator, true),\n                [\n                    utils.__assign(utils.__assign({}, field), {\n                        autoComplete: \"current-password\",\n                        validate: validators.defaultLoginPasswordValidator,\n                    }),\n                ],\n                false\n            );\n        }\n        return signInFieldsAccumulator;\n    }, []);\n    var signInForm = normaliseSignInFormFeatureConfig(defaultSignInFields, config.signInForm);\n    return {\n        disableDefaultUI: disableDefaultUI,\n        defaultToSignUp: defaultToSignUp,\n        signUpForm: signUpForm,\n        signInForm: signInForm,\n    };\n}\nfunction normaliseSignUpFormFeatureConfig(config) {\n    if (config === undefined) {\n        config = {};\n    }\n    var defaultFormFields = getDefaultFormFields();\n    var userFormFields = [];\n    if (config.formFields !== undefined) {\n        userFormFields = config.formFields;\n    }\n    var formFields = mergeFormFields(defaultFormFields, userFormFields);\n    var privacyPolicyLink = config.privacyPolicyLink;\n    var termsOfServiceLink = config.termsOfServiceLink;\n    var style = config.style !== undefined ? config.style : \"\";\n    return {\n        style: style,\n        formFields: formFields,\n        privacyPolicyLink: privacyPolicyLink,\n        termsOfServiceLink: termsOfServiceLink,\n    };\n}\nfunction normaliseSignInFormFeatureConfig(defaultFormFields, config) {\n    if (config === undefined) {\n        config = {};\n    }\n    var userFormFields = [];\n    if (config.formFields !== undefined) {\n        userFormFields = config.formFields\n            // Filter on email and password only.\n            .filter(function (field) {\n                return validators.MANDATORY_FORM_FIELDS_ID_ARRAY.includes(field.id);\n            })\n            // Sign In fields are never optional.\n            .map(function (field) {\n                return utils.__assign(utils.__assign({}, field), { optional: false });\n            });\n    }\n    var formFields = mergeFormFields(defaultFormFields, userFormFields);\n    var style = config.style !== undefined ? config.style : \"\";\n    return {\n        style: style,\n        formFields: formFields,\n    };\n}\nfunction getDefaultFormFields() {\n    return [getDefaultEmailFormField(), getDefaultPasswordFormField()];\n}\nfunction getDefaultEmailFormField() {\n    return {\n        id: \"email\",\n        label: \"EMAIL_PASSWORD_EMAIL_LABEL\",\n        placeholder: \"EMAIL_PASSWORD_EMAIL_PLACEHOLDER\",\n        validate: validators.defaultEmailValidator,\n        optional: false,\n        autoComplete: \"email\",\n    };\n}\nfunction getDefaultPasswordFormField() {\n    return {\n        id: \"password\",\n        label: \"EMAIL_PASSWORD_PASSWORD_LABEL\",\n        placeholder: \"EMAIL_PASSWORD_PASSWORD_PLACEHOLDER\",\n        validate: validators.defaultPasswordValidator,\n        optional: false,\n        autoComplete: \"new-password\",\n    };\n}\nfunction normaliseResetPasswordUsingTokenFeature(signUpPasswordFieldValidate, signUpEmailField, config) {\n    if (config === undefined) {\n        config = {};\n    }\n    var disableDefaultUI = config.disableDefaultUI === true;\n    var submitNewPasswordFormStyle =\n        config.submitNewPasswordForm !== undefined && config.submitNewPasswordForm.style !== undefined\n            ? config.submitNewPasswordForm.style\n            : \"\";\n    var submitNewPasswordForm = {\n        style: submitNewPasswordFormStyle,\n        formFields: [\n            {\n                id: \"password\",\n                label: \"EMAIL_PASSWORD_NEW_PASSWORD_LABEL\",\n                placeholder: \"EMAIL_PASSWORD_NEW_PASSWORD_PLACEHOLDER\",\n                validate: signUpPasswordFieldValidate,\n                optional: false,\n                autoComplete: \"new-password\",\n            },\n            {\n                id: \"confirm-password\",\n                label: \"EMAIL_PASSWORD_CONFIRM_PASSWORD_LABEL\",\n                placeholder: \"EMAIL_PASSWORD_CONFIRM_PASSWORD_PLACEHOLDER\",\n                validate: signUpPasswordFieldValidate,\n                optional: false,\n                autoComplete: \"new-password\",\n            },\n        ],\n    };\n    var enterEmailFormStyle =\n        config.enterEmailForm !== undefined && config.enterEmailForm.style !== undefined\n            ? config.enterEmailForm.style\n            : \"\";\n    var enterEmailForm = {\n        style: enterEmailFormStyle,\n        formFields: [\n            utils.__assign(utils.__assign({}, getDefaultEmailFormField()), {\n                validate: signUpEmailField.validate,\n                placeholder: \"\",\n                autofocus: true,\n            }),\n        ],\n    };\n    return {\n        disableDefaultUI: disableDefaultUI,\n        submitNewPasswordForm: submitNewPasswordForm,\n        enterEmailForm: enterEmailForm,\n    };\n}\n/*\n * mergeFormFields by keeping the provided order, defaultFormFields or merged first, and unmerged userFormFields after.\n */\nfunction mergeFormFields(defaultFormFields, userFormFields) {\n    // Create a new array with default fields.\n    var mergedFormFields = defaultFormFields;\n    // Loop through user provided fields.\n    for (var i = 0; i < userFormFields.length; i++) {\n        var userField = userFormFields[i];\n        var isNewField = true;\n        // Loop through the merged fields array.\n        for (var j = 0; j < mergedFormFields.length; j++) {\n            var mergedField = mergedFormFields[j];\n            // If id is equal, merge the fields\n            if (userField.id === mergedField.id) {\n                // Make sure that email and password are kept mandatory.\n                var optional = mergedField.optional; // Init with default value.\n                // If user provided value, overwrite.\n                if (userField.optional !== undefined) {\n                    optional = userField.optional;\n                }\n                // If \"email\" or \"password\", always mandatory.\n                if (validators.MANDATORY_FORM_FIELDS_ID_ARRAY.includes(userField.id)) {\n                    optional = false;\n                }\n                // Merge.\n                mergedFormFields[j] = utils.__assign(\n                    utils.__assign(utils.__assign({}, mergedFormFields[j]), userField),\n                    { optional: optional }\n                );\n                isNewField = false;\n                break;\n            }\n        }\n        // If new field, push to mergeFormFields.\n        if (isNewField) {\n            mergedFormFields.push(\n                utils.__assign(\n                    { optional: false, placeholder: userField.label, validate: validators.defaultValidate },\n                    userField\n                )\n            );\n        }\n    }\n    return mergedFormFields.map(function (field) {\n        return getFormattedFormField(field);\n    });\n}\nfunction getFormattedFormField(field) {\n    var _this = this;\n    return utils.__assign(utils.__assign({}, field), {\n        validate: function (value) {\n            return utils.__awaiter(_this, void 0, void 0, function () {\n                return utils.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            // Absent or not optional empty field\n                            if (value === \"\" && field.optional === false) {\n                                return [2 /*return*/, \"ERROR_NON_OPTIONAL\"];\n                            }\n                            return [4 /*yield*/, field.validate(value)];\n                        case 1:\n                            return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        },\n    });\n}\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n/*\n * Class.\n */\nvar EmailPassword = /** @class */ (function (_super) {\n    utils.__extends(EmailPassword, _super);\n    function EmailPassword(config, webJSRecipe) {\n        if (webJSRecipe === void 0) {\n            webJSRecipe = EmailPasswordWebJS__default.default;\n        }\n        var _this = _super.call(this, config) || this;\n        _this.webJSRecipe = webJSRecipe;\n        _this.getDefaultRedirectionURL = function (context) {\n            return utils.__awaiter(_this, void 0, void 0, function () {\n                var resetPasswordPath;\n                return utils.__generator(this, function (_a) {\n                    if (context.action === \"RESET_PASSWORD\") {\n                        resetPasswordPath = new NormalisedURLPath__default.default(\n                            validators.DEFAULT_RESET_PASSWORD_PATH\n                        );\n                        return [\n                            2 /*return*/,\n                            \"\"\n                                .concat(\n                                    this.config.appInfo.websiteBasePath\n                                        .appendPath(resetPasswordPath)\n                                        .getAsStringDangerous(),\n                                    \"?rid=\"\n                                )\n                                .concat(this.config.recipeId),\n                        ];\n                    }\n                    return [2 /*return*/, this.getAuthRecipeDefaultRedirectionURL(context)];\n                });\n            });\n        };\n        return _this;\n    }\n    EmailPassword.init = function (config) {\n        var normalisedConfig = normaliseEmailPasswordConfig(config);\n        return {\n            authReact: function (appInfo) {\n                EmailPassword.instance = new EmailPassword(\n                    utils.__assign(utils.__assign({}, normalisedConfig), {\n                        appInfo: appInfo,\n                        recipeId: EmailPassword.RECIPE_ID,\n                    })\n                );\n                return EmailPassword.instance;\n            },\n            webJS: EmailPasswordWebJS__default.default.init(\n                utils.__assign(utils.__assign({}, normalisedConfig), {\n                    override: {\n                        functions: function (originalImpl, builder) {\n                            var functions = getFunctionOverrides(normalisedConfig.onHandleEvent);\n                            builder.override(functions);\n                            builder.override(normalisedConfig.override.functions);\n                            return originalImpl;\n                        },\n                    },\n                })\n            ),\n        };\n    };\n    EmailPassword.getInstanceOrThrow = function () {\n        if (EmailPassword.instance === undefined) {\n            var error =\n                \"No instance of EmailPassword found. Make sure to call the EmailPassword.init method.\" +\n                \"See https://supertokens.io/docs/emailpassword/quick-setup/frontend\";\n            // eslint-disable-next-line supertokens-auth-react/no-direct-window-object\n            if (typeof window === \"undefined\") {\n                error = error + utils.SSR_ERROR;\n            }\n            throw Error(error);\n        }\n        return EmailPassword.instance;\n    };\n    /*\n     * Tests methods.\n     */\n    EmailPassword.reset = function () {\n        if (!utils.isTest()) {\n            return;\n        }\n        EmailPassword.instance = undefined;\n        return;\n    };\n    EmailPassword.RECIPE_ID = \"emailpassword\";\n    return EmailPassword;\n})(utils$1.AuthRecipe);\n\nexports.EmailPassword = EmailPassword;\nexports.normaliseEmailPasswordConfig = normaliseEmailPasswordConfig;\n//# sourceMappingURL=emailpassword-shared3.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-auth-react/lib/build/emailpassword-shared3.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-auth-react/lib/build/emailpassword-shared4.js":
/*!********************************************************************************!*\
  !*** ./node_modules/supertokens-auth-react/lib/build/emailpassword-shared4.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ./utils.js */ \"./node_modules/supertokens-auth-react/lib/build/utils.js\");\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar MANDATORY_FORM_FIELDS_ID_ARRAY = [\"email\", \"password\"];\nvar DEFAULT_RESET_PASSWORD_PATH = \"/reset-password\";\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n/*\n * defaultEmailValidator.\n */\nfunction defaultEmailValidator(value) {\n    return utils.__awaiter(this, void 0, void 0, function () {\n        var defaultEmailValidatorRegexp;\n        return utils.__generator(this, function (_a) {\n            if (typeof value !== \"string\") {\n                return [2 /*return*/, \"ERROR_EMAIL_NON_STRING\"];\n            }\n            value = value.trim();\n            defaultEmailValidatorRegexp =\n                // eslint-disable-next-line no-useless-escape\n                /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            // We check if the email syntax is correct\n            // As per https://github.com/supertokens/supertokens-auth-react/issues/5#issuecomment-709512438\n            // Regex from https://stackoverflow.com/a/46181/3867175\n            if (value.match(defaultEmailValidatorRegexp) === null) {\n                return [2 /*return*/, \"ERROR_EMAIL_INVALID\"];\n            }\n            return [2 /*return*/, undefined];\n        });\n    });\n}\n/*\n * defaultPasswordValidator.\n * min 8 characters.\n * Contains lowercase, uppercase, and numbers.\n */\nfunction defaultPasswordValidator(value) {\n    return utils.__awaiter(this, void 0, void 0, function () {\n        return utils.__generator(this, function (_a) {\n            if (typeof value !== \"string\") {\n                return [2 /*return*/, \"ERROR_PASSWORD_NON_STRING\"];\n            }\n            // length >= 8 && < 100\n            // must have a number and a character\n            // as per https://github.com/supertokens/supertokens-auth-react/issues/5#issuecomment-709512438\n            if (value.length < 8) {\n                return [2 /*return*/, \"ERROR_PASSWORD_TOO_SHORT\"];\n            }\n            if (value.length >= 100) {\n                return [2 /*return*/, \"ERROR_PASSWORD_TOO_LONG\"];\n            }\n            if (value.match(/^.*[A-Za-z]+.*$/) === null) {\n                return [2 /*return*/, \"ERROR_PASSWORD_NO_ALPHA\"];\n            }\n            if (value.match(/^.*[0-9]+.*$/) === null) {\n                return [2 /*return*/, \"ERROR_PASSWORD_NO_NUM\"];\n            }\n            return [2 /*return*/, undefined];\n        });\n    });\n}\n/*\n * defaultLoginPasswordValidator.\n * type string\n */\nfunction defaultLoginPasswordValidator(value) {\n    return utils.__awaiter(this, void 0, void 0, function () {\n        return utils.__generator(this, function (_a) {\n            if (typeof value !== \"string\") {\n                return [2 /*return*/, \"ERROR_PASSWORD_NON_STRING\"];\n            }\n            return [2 /*return*/, undefined];\n        });\n    });\n}\n/*\n * defaultValidate\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction defaultValidate(_) {\n    return utils.__awaiter(this, void 0, void 0, function () {\n        return utils.__generator(this, function (_a) {\n            return [2 /*return*/, undefined];\n        });\n    });\n}\n\nexports.DEFAULT_RESET_PASSWORD_PATH = DEFAULT_RESET_PASSWORD_PATH;\nexports.MANDATORY_FORM_FIELDS_ID_ARRAY = MANDATORY_FORM_FIELDS_ID_ARRAY;\nexports.defaultEmailValidator = defaultEmailValidator;\nexports.defaultLoginPasswordValidator = defaultLoginPasswordValidator;\nexports.defaultPasswordValidator = defaultPasswordValidator;\nexports.defaultValidate = defaultValidate;\n//# sourceMappingURL=emailpassword-shared4.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtYXV0aC1yZWFjdC9saWIvYnVpbGQvZW1haWxwYXNzd29yZC1zaGFyZWQ0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyw0RUFBWTs7QUFFaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLHlCQUF5Qiw2QkFBNkIsSUFBSSxRQUFRLElBQUksUUFBUSxJQUFJLFFBQVEsSUFBSSxpQ0FBaUMsR0FBRztBQUNySztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDs7QUFFQSxtQ0FBbUM7QUFDbkMsc0NBQXNDO0FBQ3RDLDZCQUE2QjtBQUM3QixxQ0FBcUM7QUFDckMsZ0NBQWdDO0FBQ2hDLHVCQUF1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtYXV0aC1yZWFjdC9saWIvYnVpbGQvZW1haWxwYXNzd29yZC1zaGFyZWQ0LmpzPzBhNjQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xuXG4vKiBDb3B5cmlnaHQgKGMpIDIwMjEsIFZSQUkgTGFicyBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb2Z0d2FyZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLlxuICpcbiAqIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heVxuICogb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdCBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVRcbiAqIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZVxuICogTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgTUFOREFUT1JZX0ZPUk1fRklFTERTX0lEX0FSUkFZID0gW1wiZW1haWxcIiwgXCJwYXNzd29yZFwiXTtcbnZhciBERUZBVUxUX1JFU0VUX1BBU1NXT1JEX1BBVEggPSBcIi9yZXNldC1wYXNzd29yZFwiO1xuXG4vKiBDb3B5cmlnaHQgKGMpIDIwMjEsIFZSQUkgTGFicyBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb2Z0d2FyZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLlxuICpcbiAqIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heVxuICogb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdCBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVRcbiAqIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZVxuICogTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG4vKlxuICogZGVmYXVsdEVtYWlsVmFsaWRhdG9yLlxuICovXG5mdW5jdGlvbiBkZWZhdWx0RW1haWxWYWxpZGF0b3IodmFsdWUpIHtcbiAgICByZXR1cm4gdXRpbHMuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBkZWZhdWx0RW1haWxWYWxpZGF0b3JSZWdleHA7XG4gICAgICAgIHJldHVybiB1dGlscy5fX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgXCJFUlJPUl9FTUFJTF9OT05fU1RSSU5HXCJdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS50cmltKCk7XG4gICAgICAgICAgICBkZWZhdWx0RW1haWxWYWxpZGF0b3JSZWdleHAgPVxuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11c2VsZXNzLWVzY2FwZVxuICAgICAgICAgICAgICAgIC9eKChbXjw+KClcXFtcXF1cXFxcLiw7Olxcc0BcIl0rKFxcLltePD4oKVxcW1xcXVxcXFwuLDs6XFxzQFwiXSspKil8KFwiLitcIikpQCgoXFxbWzAtOV17MSwzfVxcLlswLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcXSl8KChbYS16QS1aXFwtMC05XStcXC4pK1thLXpBLVpdezIsfSkpJC87XG4gICAgICAgICAgICAvLyBXZSBjaGVjayBpZiB0aGUgZW1haWwgc3ludGF4IGlzIGNvcnJlY3RcbiAgICAgICAgICAgIC8vIEFzIHBlciBodHRwczovL2dpdGh1Yi5jb20vc3VwZXJ0b2tlbnMvc3VwZXJ0b2tlbnMtYXV0aC1yZWFjdC9pc3N1ZXMvNSNpc3N1ZWNvbW1lbnQtNzA5NTEyNDM4XG4gICAgICAgICAgICAvLyBSZWdleCBmcm9tIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vYS80NjE4MS8zODY3MTc1XG4gICAgICAgICAgICBpZiAodmFsdWUubWF0Y2goZGVmYXVsdEVtYWlsVmFsaWRhdG9yUmVnZXhwKSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBcIkVSUk9SX0VNQUlMX0lOVkFMSURcIl07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgdW5kZWZpbmVkXTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG4vKlxuICogZGVmYXVsdFBhc3N3b3JkVmFsaWRhdG9yLlxuICogbWluIDggY2hhcmFjdGVycy5cbiAqIENvbnRhaW5zIGxvd2VyY2FzZSwgdXBwZXJjYXNlLCBhbmQgbnVtYmVycy5cbiAqL1xuZnVuY3Rpb24gZGVmYXVsdFBhc3N3b3JkVmFsaWRhdG9yKHZhbHVlKSB7XG4gICAgcmV0dXJuIHV0aWxzLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdXRpbHMuX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIFwiRVJST1JfUEFTU1dPUkRfTk9OX1NUUklOR1wiXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGxlbmd0aCA+PSA4ICYmIDwgMTAwXG4gICAgICAgICAgICAvLyBtdXN0IGhhdmUgYSBudW1iZXIgYW5kIGEgY2hhcmFjdGVyXG4gICAgICAgICAgICAvLyBhcyBwZXIgaHR0cHM6Ly9naXRodWIuY29tL3N1cGVydG9rZW5zL3N1cGVydG9rZW5zLWF1dGgtcmVhY3QvaXNzdWVzLzUjaXNzdWVjb21tZW50LTcwOTUxMjQzOFxuICAgICAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCA8IDgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgXCJFUlJPUl9QQVNTV09SRF9UT09fU0hPUlRcIl07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodmFsdWUubGVuZ3RoID49IDEwMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBcIkVSUk9SX1BBU1NXT1JEX1RPT19MT05HXCJdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHZhbHVlLm1hdGNoKC9eLipbQS1aYS16XSsuKiQvKSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBcIkVSUk9SX1BBU1NXT1JEX05PX0FMUEhBXCJdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHZhbHVlLm1hdGNoKC9eLipbMC05XSsuKiQvKSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBcIkVSUk9SX1BBU1NXT1JEX05PX05VTVwiXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCB1bmRlZmluZWRdO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbi8qXG4gKiBkZWZhdWx0TG9naW5QYXNzd29yZFZhbGlkYXRvci5cbiAqIHR5cGUgc3RyaW5nXG4gKi9cbmZ1bmN0aW9uIGRlZmF1bHRMb2dpblBhc3N3b3JkVmFsaWRhdG9yKHZhbHVlKSB7XG4gICAgcmV0dXJuIHV0aWxzLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdXRpbHMuX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIFwiRVJST1JfUEFTU1dPUkRfTk9OX1NUUklOR1wiXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCB1bmRlZmluZWRdO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbi8qXG4gKiBkZWZhdWx0VmFsaWRhdGVcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuZnVuY3Rpb24gZGVmYXVsdFZhbGlkYXRlKF8pIHtcbiAgICByZXR1cm4gdXRpbHMuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB1dGlscy5fX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCB1bmRlZmluZWRdO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cblxuZXhwb3J0cy5ERUZBVUxUX1JFU0VUX1BBU1NXT1JEX1BBVEggPSBERUZBVUxUX1JFU0VUX1BBU1NXT1JEX1BBVEg7XG5leHBvcnRzLk1BTkRBVE9SWV9GT1JNX0ZJRUxEU19JRF9BUlJBWSA9IE1BTkRBVE9SWV9GT1JNX0ZJRUxEU19JRF9BUlJBWTtcbmV4cG9ydHMuZGVmYXVsdEVtYWlsVmFsaWRhdG9yID0gZGVmYXVsdEVtYWlsVmFsaWRhdG9yO1xuZXhwb3J0cy5kZWZhdWx0TG9naW5QYXNzd29yZFZhbGlkYXRvciA9IGRlZmF1bHRMb2dpblBhc3N3b3JkVmFsaWRhdG9yO1xuZXhwb3J0cy5kZWZhdWx0UGFzc3dvcmRWYWxpZGF0b3IgPSBkZWZhdWx0UGFzc3dvcmRWYWxpZGF0b3I7XG5leHBvcnRzLmRlZmF1bHRWYWxpZGF0ZSA9IGRlZmF1bHRWYWxpZGF0ZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVtYWlscGFzc3dvcmQtc2hhcmVkNC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-auth-react/lib/build/emailpassword-shared4.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-auth-react/lib/build/emailpassword.js":
/*!************************************************************************!*\
  !*** ./node_modules/supertokens-auth-react/lib/build/emailpassword.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar utils = __webpack_require__(/*! ./utils.js */ \"./node_modules/supertokens-auth-react/lib/build/utils.js\");\nvar componentOverrideContext = __webpack_require__(/*! ./emailpassword-shared2.js */ \"./node_modules/supertokens-auth-react/lib/build/emailpassword-shared2.js\");\nvar recipe = __webpack_require__(/*! ./emailpassword-shared3.js */ \"./node_modules/supertokens-auth-react/lib/build/emailpassword-shared3.js\");\n__webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n__webpack_require__(/*! supertokens-web-js/utils/cookieHandler */ \"./node_modules/supertokens-web-js/utils/cookieHandler/index.js\");\n__webpack_require__(/*! supertokens-web-js/utils/normalisedURLDomain */ \"./node_modules/supertokens-web-js/utils/normalisedURLDomain.js\");\n__webpack_require__(/*! supertokens-web-js/utils/normalisedURLPath */ \"./node_modules/supertokens-web-js/utils/normalisedURLPath.js\");\n__webpack_require__(/*! supertokens-web-js/utils/windowHandler */ \"./node_modules/supertokens-web-js/utils/windowHandler/index.js\");\n__webpack_require__(/*! ./genericComponentOverrideContext.js */ \"./node_modules/supertokens-auth-react/lib/build/genericComponentOverrideContext.js\");\n__webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n__webpack_require__(/*! supertokens-web-js/recipe/emailpassword */ \"./node_modules/supertokens-web-js/recipe/emailpassword/index.js\");\n__webpack_require__(/*! ./authRecipe-shared.js */ \"./node_modules/supertokens-auth-react/lib/build/authRecipe-shared.js\");\n__webpack_require__(/*! supertokens-web-js/utils/postSuperTokensInitCallbacks */ \"./node_modules/supertokens-web-js/utils/postSuperTokensInitCallbacks.js\");\n__webpack_require__(/*! ./recipeModule-shared.js */ \"./node_modules/supertokens-auth-react/lib/build/recipeModule-shared.js\");\n__webpack_require__(/*! supertokens-web-js */ \"./node_modules/supertokens-web-js/index.js\");\n__webpack_require__(/*! ./session-shared2.js */ \"./node_modules/supertokens-auth-react/lib/build/session-shared2.js\");\n__webpack_require__(/*! supertokens-web-js/recipe/session */ \"./node_modules/supertokens-web-js/recipe/session/index.js\");\n__webpack_require__(/*! ./emailpassword-shared4.js */ \"./node_modules/supertokens-auth-react/lib/build/emailpassword-shared4.js\");\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar Wrapper = /** @class */ (function () {\n    function Wrapper() {}\n    Wrapper.init = function (config) {\n        return recipe.EmailPassword.init(config);\n    };\n    Wrapper.signOut = function (input) {\n        return utils.__awaiter(this, void 0, void 0, function () {\n            return utils.__generator(this, function (_a) {\n                return [\n                    2 /*return*/,\n                    recipe.EmailPassword.getInstanceOrThrow().signOut({\n                        userContext: utils.getNormalisedUserContext(\n                            input === null || input === void 0 ? void 0 : input.userContext\n                        ),\n                    }),\n                ];\n            });\n        });\n    };\n    Wrapper.submitNewPassword = function (input) {\n        return utils.__awaiter(this, void 0, void 0, function () {\n            return utils.__generator(this, function (_a) {\n                return [\n                    2 /*return*/,\n                    recipe.EmailPassword.getInstanceOrThrow().webJSRecipe.submitNewPassword(\n                        utils.__assign(utils.__assign({}, input), {\n                            userContext: utils.getNormalisedUserContext(input.userContext),\n                        })\n                    ),\n                ];\n            });\n        });\n    };\n    Wrapper.sendPasswordResetEmail = function (input) {\n        return utils.__awaiter(this, void 0, void 0, function () {\n            return utils.__generator(this, function (_a) {\n                return [\n                    2 /*return*/,\n                    recipe.EmailPassword.getInstanceOrThrow().webJSRecipe.sendPasswordResetEmail(\n                        utils.__assign(utils.__assign({}, input), {\n                            userContext: utils.getNormalisedUserContext(input.userContext),\n                        })\n                    ),\n                ];\n            });\n        });\n    };\n    Wrapper.signUp = function (input) {\n        return utils.__awaiter(this, void 0, void 0, function () {\n            return utils.__generator(this, function (_a) {\n                return [\n                    2 /*return*/,\n                    recipe.EmailPassword.getInstanceOrThrow().webJSRecipe.signUp(\n                        utils.__assign(utils.__assign({}, input), {\n                            userContext: utils.getNormalisedUserContext(input.userContext),\n                        })\n                    ),\n                ];\n            });\n        });\n    };\n    Wrapper.signIn = function (input) {\n        return utils.__awaiter(this, void 0, void 0, function () {\n            return utils.__generator(this, function (_a) {\n                return [\n                    2 /*return*/,\n                    recipe.EmailPassword.getInstanceOrThrow().webJSRecipe.signIn(\n                        utils.__assign(utils.__assign({}, input), {\n                            userContext: utils.getNormalisedUserContext(input.userContext),\n                        })\n                    ),\n                ];\n            });\n        });\n    };\n    Wrapper.doesEmailExist = function (input) {\n        return utils.__awaiter(this, void 0, void 0, function () {\n            return utils.__generator(this, function (_a) {\n                return [\n                    2 /*return*/,\n                    recipe.EmailPassword.getInstanceOrThrow().webJSRecipe.doesEmailExist(\n                        utils.__assign(utils.__assign({}, input), {\n                            userContext: utils.getNormalisedUserContext(input.userContext),\n                        })\n                    ),\n                ];\n            });\n        });\n    };\n    Wrapper.getResetPasswordTokenFromURL = function (input) {\n        return recipe.EmailPassword.getInstanceOrThrow().webJSRecipe.getResetPasswordTokenFromURL(\n            utils.__assign(utils.__assign({}, input), {\n                userContext: utils.getNormalisedUserContext(\n                    input === null || input === void 0 ? void 0 : input.userContext\n                ),\n            })\n        );\n    };\n    Wrapper.ComponentsOverrideProvider = componentOverrideContext.Provider;\n    return Wrapper;\n})();\nvar init = Wrapper.init;\nvar signOut = Wrapper.signOut;\nvar submitNewPassword = Wrapper.submitNewPassword;\nvar sendPasswordResetEmail = Wrapper.sendPasswordResetEmail;\nvar signUp = Wrapper.signUp;\nvar signIn = Wrapper.signIn;\nvar doesEmailExist = Wrapper.doesEmailExist;\nvar getResetPasswordTokenFromURL = Wrapper.getResetPasswordTokenFromURL;\nvar EmailPasswordComponentsOverrideProvider = Wrapper.ComponentsOverrideProvider;\n\nexports.EmailPasswordComponentsOverrideProvider = EmailPasswordComponentsOverrideProvider;\nexports[\"default\"] = Wrapper;\nexports.doesEmailExist = doesEmailExist;\nexports.getResetPasswordTokenFromURL = getResetPasswordTokenFromURL;\nexports.init = init;\nexports.sendPasswordResetEmail = sendPasswordResetEmail;\nexports.signIn = signIn;\nexports.signOut = signOut;\nexports.signUp = signUp;\nexports.submitNewPassword = submitNewPassword;\n//# sourceMappingURL=emailpassword.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-auth-react/lib/build/emailpassword.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-auth-react/lib/build/genericComponentOverrideContext.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/supertokens-auth-react/lib/build/genericComponentOverrideContext.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ./utils.js */ \"./node_modules/supertokens-auth-react/lib/build/utils.js\");\nvar jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nfunction _interopDefault(e) {\n    return e && e.__esModule ? e : { default: e };\n}\n\nvar React__default = /*#__PURE__*/ _interopDefault(React);\n\nvar createGenericComponentsOverrideContext = function (v) {\n    if (v === void 0) {\n        v = {};\n    }\n    var genericContext = React__default.default.createContext(v);\n    var useComponentsOverrideContext = function () {\n        return React__default.default.useContext(genericContext);\n    };\n    var Provider = function (_a) {\n        var children = _a.children,\n            components = _a.components;\n        return jsxRuntime.jsx(genericContext.Provider, utils.__assign({ value: components }, { children: children }));\n    };\n    return [useComponentsOverrideContext, Provider, genericContext.Consumer];\n};\n\nexports.createGenericComponentsOverrideContext = createGenericComponentsOverrideContext;\n//# sourceMappingURL=genericComponentOverrideContext.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtYXV0aC1yZWFjdC9saWIvYnVpbGQvZ2VuZXJpY0NvbXBvbmVudE92ZXJyaWRlQ29udGV4dC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMsNEVBQVk7QUFDaEMsaUJBQWlCLG1CQUFPLENBQUMsOERBQW1CO0FBQzVDLFlBQVksbUJBQU8sQ0FBQyw0Q0FBTzs7QUFFM0I7QUFDQSxxQ0FBcUM7QUFDckM7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdFQUF3RSxtQkFBbUIsSUFBSSxvQkFBb0I7QUFDbkg7QUFDQTtBQUNBOztBQUVBLDhDQUE4QztBQUM5QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtYXV0aC1yZWFjdC9saWIvYnVpbGQvZ2VuZXJpY0NvbXBvbmVudE92ZXJyaWRlQ29udGV4dC5qcz8zNjVkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKFwiLi91dGlscy5qc1wiKTtcbnZhciBqc3hSdW50aW1lID0gcmVxdWlyZShcInJlYWN0L2pzeC1ydW50aW1lXCIpO1xudmFyIFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcERlZmF1bHQoZSkge1xuICAgIHJldHVybiBlICYmIGUuX19lc01vZHVsZSA/IGUgOiB7IGRlZmF1bHQ6IGUgfTtcbn1cblxudmFyIFJlYWN0X19kZWZhdWx0ID0gLyojX19QVVJFX18qLyBfaW50ZXJvcERlZmF1bHQoUmVhY3QpO1xuXG52YXIgY3JlYXRlR2VuZXJpY0NvbXBvbmVudHNPdmVycmlkZUNvbnRleHQgPSBmdW5jdGlvbiAodikge1xuICAgIGlmICh2ID09PSB2b2lkIDApIHtcbiAgICAgICAgdiA9IHt9O1xuICAgIH1cbiAgICB2YXIgZ2VuZXJpY0NvbnRleHQgPSBSZWFjdF9fZGVmYXVsdC5kZWZhdWx0LmNyZWF0ZUNvbnRleHQodik7XG4gICAgdmFyIHVzZUNvbXBvbmVudHNPdmVycmlkZUNvbnRleHQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBSZWFjdF9fZGVmYXVsdC5kZWZhdWx0LnVzZUNvbnRleHQoZ2VuZXJpY0NvbnRleHQpO1xuICAgIH07XG4gICAgdmFyIFByb3ZpZGVyID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgIHZhciBjaGlsZHJlbiA9IF9hLmNoaWxkcmVuLFxuICAgICAgICAgICAgY29tcG9uZW50cyA9IF9hLmNvbXBvbmVudHM7XG4gICAgICAgIHJldHVybiBqc3hSdW50aW1lLmpzeChnZW5lcmljQ29udGV4dC5Qcm92aWRlciwgdXRpbHMuX19hc3NpZ24oeyB2YWx1ZTogY29tcG9uZW50cyB9LCB7IGNoaWxkcmVuOiBjaGlsZHJlbiB9KSk7XG4gICAgfTtcbiAgICByZXR1cm4gW3VzZUNvbXBvbmVudHNPdmVycmlkZUNvbnRleHQsIFByb3ZpZGVyLCBnZW5lcmljQ29udGV4dC5Db25zdW1lcl07XG59O1xuXG5leHBvcnRzLmNyZWF0ZUdlbmVyaWNDb21wb25lbnRzT3ZlcnJpZGVDb250ZXh0ID0gY3JlYXRlR2VuZXJpY0NvbXBvbmVudHNPdmVycmlkZUNvbnRleHQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZW5lcmljQ29tcG9uZW50T3ZlcnJpZGVDb250ZXh0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/supertokens-auth-react/lib/build/genericComponentOverrideContext.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-auth-react/lib/build/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/supertokens-auth-react/lib/build/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar utils = __webpack_require__(/*! ./utils.js */ \"./node_modules/supertokens-auth-react/lib/build/utils.js\");\nvar jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nvar sessionAuth = __webpack_require__(/*! ./session-shared.js */ \"./node_modules/supertokens-auth-react/lib/build/session-shared.js\");\nvar utils$1 = __webpack_require__(/*! ./recipeModule-shared.js */ \"./node_modules/supertokens-auth-react/lib/build/recipeModule-shared.js\");\nvar translationContext = __webpack_require__(/*! ./translationContext.js */ \"./node_modules/supertokens-auth-react/lib/build/translationContext.js\");\n__webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n__webpack_require__(/*! supertokens-web-js/utils/cookieHandler */ \"./node_modules/supertokens-web-js/utils/cookieHandler/index.js\");\n__webpack_require__(/*! supertokens-web-js/utils/normalisedURLDomain */ \"./node_modules/supertokens-web-js/utils/normalisedURLDomain.js\");\n__webpack_require__(/*! supertokens-web-js/utils/normalisedURLPath */ \"./node_modules/supertokens-web-js/utils/normalisedURLPath.js\");\n__webpack_require__(/*! supertokens-web-js/utils/windowHandler */ \"./node_modules/supertokens-web-js/utils/windowHandler/index.js\");\n__webpack_require__(/*! ./index2.js */ \"./node_modules/supertokens-auth-react/lib/build/index2.js\");\n__webpack_require__(/*! ./session-shared2.js */ \"./node_modules/supertokens-auth-react/lib/build/session-shared2.js\");\n__webpack_require__(/*! supertokens-web-js/recipe/session */ \"./node_modules/supertokens-web-js/recipe/session/index.js\");\n__webpack_require__(/*! supertokens-web-js */ \"./node_modules/supertokens-web-js/index.js\");\n__webpack_require__(/*! supertokens-web-js/utils/postSuperTokensInitCallbacks */ \"./node_modules/supertokens-web-js/utils/postSuperTokensInitCallbacks.js\");\n\nvar SuperTokensWrapper = function (props) {\n    return jsxRuntime.jsx(\n        sessionAuth.SessionAuthWrapper,\n        utils.__assign({}, props, { requireAuth: false, doRedirection: false })\n    );\n};\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n/*\n * API Wrapper exposed to user.\n */\nvar SuperTokensAPIWrapper = /** @class */ (function () {\n    function SuperTokensAPIWrapper() {}\n    SuperTokensAPIWrapper.init = function (config) {\n        utils$1.SuperTokens.init(config);\n    };\n    SuperTokensAPIWrapper.changeLanguage = function (language) {\n        return utils$1.SuperTokens.getInstanceOrThrow().changeLanguage(language);\n    };\n    SuperTokensAPIWrapper.loadTranslation = function (store) {\n        return utils$1.SuperTokens.getInstanceOrThrow().loadTranslation(store);\n    };\n    var _a;\n    _a = SuperTokensAPIWrapper;\n    SuperTokensAPIWrapper.SuperTokensWrapper = SuperTokensWrapper;\n    SuperTokensAPIWrapper.redirectToAuth = function (options) {\n        return utils.__awaiter(void 0, void 0, void 0, function () {\n            var _b;\n            return utils.__generator(_a, function (_c) {\n                return [\n                    2 /*return*/,\n                    utils$1.SuperTokens.getInstanceOrThrow().redirectToAuth(\n                        utils.__assign(utils.__assign({}, options), {\n                            redirectBack:\n                                (_b = options === null || options === void 0 ? void 0 : options.redirectBack) !==\n                                    null && _b !== void 0\n                                    ? _b\n                                    : true,\n                        })\n                    ),\n                ];\n            });\n        });\n    };\n    SuperTokensAPIWrapper.useTranslation = translationContext.useTranslation;\n    SuperTokensAPIWrapper.useUserContext = sessionAuth.useUserContext;\n    return SuperTokensAPIWrapper;\n})();\nvar init = SuperTokensAPIWrapper.init;\nvar changeLanguage = SuperTokensAPIWrapper.changeLanguage;\nvar loadTranslation = SuperTokensAPIWrapper.loadTranslation;\nvar redirectToAuth = SuperTokensAPIWrapper.redirectToAuth;\n\nexports.useUserContext = sessionAuth.useUserContext;\nexports.useTranslation = translationContext.useTranslation;\nexports.SuperTokensWrapper = SuperTokensWrapper;\nexports.changeLanguage = changeLanguage;\nexports[\"default\"] = SuperTokensAPIWrapper;\nexports.init = init;\nexports.loadTranslation = loadTranslation;\nexports.redirectToAuth = redirectToAuth;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtYXV0aC1yZWFjdC9saWIvYnVpbGQvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxZQUFZLG1CQUFPLENBQUMsNEVBQVk7QUFDaEMsaUJBQWlCLG1CQUFPLENBQUMsOERBQW1CO0FBQzVDLGtCQUFrQixtQkFBTyxDQUFDLDhGQUFxQjtBQUMvQyxjQUFjLG1CQUFPLENBQUMsd0dBQTBCO0FBQ2hELHlCQUF5QixtQkFBTyxDQUFDLHNHQUF5QjtBQUMxRCxtQkFBTyxDQUFDLDRDQUFPO0FBQ2YsbUJBQU8sQ0FBQyw4R0FBd0M7QUFDaEQsbUJBQU8sQ0FBQyxvSEFBOEM7QUFDdEQsbUJBQU8sQ0FBQyxnSEFBNEM7QUFDcEQsbUJBQU8sQ0FBQyw4R0FBd0M7QUFDaEQsbUJBQU8sQ0FBQyw4RUFBYTtBQUNyQixtQkFBTyxDQUFDLGdHQUFzQjtBQUM5QixtQkFBTyxDQUFDLG9HQUFtQztBQUMzQyxtQkFBTyxDQUFDLHNFQUFvQjtBQUM1QixtQkFBTyxDQUFDLHNJQUF1RDs7QUFFL0Q7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFdBQVcsMENBQTBDO0FBQzlFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RDtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHNCQUFzQjtBQUN0QixzQkFBc0I7QUFDdEIsMEJBQTBCO0FBQzFCLHNCQUFzQjtBQUN0QixrQkFBZTtBQUNmLFlBQVk7QUFDWix1QkFBdUI7QUFDdkIsc0JBQXNCO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdXBlcnRva2Vucy1hdXRoLXJlYWN0L2xpYi9idWlsZC9pbmRleC5qcz80ZTBmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xudmFyIGpzeFJ1bnRpbWUgPSByZXF1aXJlKFwicmVhY3QvanN4LXJ1bnRpbWVcIik7XG52YXIgc2Vzc2lvbkF1dGggPSByZXF1aXJlKFwiLi9zZXNzaW9uLXNoYXJlZC5qc1wiKTtcbnZhciB1dGlscyQxID0gcmVxdWlyZShcIi4vcmVjaXBlTW9kdWxlLXNoYXJlZC5qc1wiKTtcbnZhciB0cmFuc2xhdGlvbkNvbnRleHQgPSByZXF1aXJlKFwiLi90cmFuc2xhdGlvbkNvbnRleHQuanNcIik7XG5yZXF1aXJlKFwicmVhY3RcIik7XG5yZXF1aXJlKFwic3VwZXJ0b2tlbnMtd2ViLWpzL3V0aWxzL2Nvb2tpZUhhbmRsZXJcIik7XG5yZXF1aXJlKFwic3VwZXJ0b2tlbnMtd2ViLWpzL3V0aWxzL25vcm1hbGlzZWRVUkxEb21haW5cIik7XG5yZXF1aXJlKFwic3VwZXJ0b2tlbnMtd2ViLWpzL3V0aWxzL25vcm1hbGlzZWRVUkxQYXRoXCIpO1xucmVxdWlyZShcInN1cGVydG9rZW5zLXdlYi1qcy91dGlscy93aW5kb3dIYW5kbGVyXCIpO1xucmVxdWlyZShcIi4vaW5kZXgyLmpzXCIpO1xucmVxdWlyZShcIi4vc2Vzc2lvbi1zaGFyZWQyLmpzXCIpO1xucmVxdWlyZShcInN1cGVydG9rZW5zLXdlYi1qcy9yZWNpcGUvc2Vzc2lvblwiKTtcbnJlcXVpcmUoXCJzdXBlcnRva2Vucy13ZWItanNcIik7XG5yZXF1aXJlKFwic3VwZXJ0b2tlbnMtd2ViLWpzL3V0aWxzL3Bvc3RTdXBlclRva2Vuc0luaXRDYWxsYmFja3NcIik7XG5cbnZhciBTdXBlclRva2Vuc1dyYXBwZXIgPSBmdW5jdGlvbiAocHJvcHMpIHtcbiAgICByZXR1cm4ganN4UnVudGltZS5qc3goXG4gICAgICAgIHNlc3Npb25BdXRoLlNlc3Npb25BdXRoV3JhcHBlcixcbiAgICAgICAgdXRpbHMuX19hc3NpZ24oe30sIHByb3BzLCB7IHJlcXVpcmVBdXRoOiBmYWxzZSwgZG9SZWRpcmVjdGlvbjogZmFsc2UgfSlcbiAgICApO1xufTtcblxuLyogQ29weXJpZ2h0IChjKSAyMDIxLCBWUkFJIExhYnMgYW5kL29yIGl0cyBhZmZpbGlhdGVzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc29mdHdhcmUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIikgYXMgcHVibGlzaGVkIGJ5IHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbi5cbiAqXG4gKiBZb3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXlcbiAqIG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUXG4gKiBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGVcbiAqIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuLypcbiAqIEFQSSBXcmFwcGVyIGV4cG9zZWQgdG8gdXNlci5cbiAqL1xudmFyIFN1cGVyVG9rZW5zQVBJV3JhcHBlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTdXBlclRva2Vuc0FQSVdyYXBwZXIoKSB7fVxuICAgIFN1cGVyVG9rZW5zQVBJV3JhcHBlci5pbml0ID0gZnVuY3Rpb24gKGNvbmZpZykge1xuICAgICAgICB1dGlscyQxLlN1cGVyVG9rZW5zLmluaXQoY29uZmlnKTtcbiAgICB9O1xuICAgIFN1cGVyVG9rZW5zQVBJV3JhcHBlci5jaGFuZ2VMYW5ndWFnZSA9IGZ1bmN0aW9uIChsYW5ndWFnZSkge1xuICAgICAgICByZXR1cm4gdXRpbHMkMS5TdXBlclRva2Vucy5nZXRJbnN0YW5jZU9yVGhyb3coKS5jaGFuZ2VMYW5ndWFnZShsYW5ndWFnZSk7XG4gICAgfTtcbiAgICBTdXBlclRva2Vuc0FQSVdyYXBwZXIubG9hZFRyYW5zbGF0aW9uID0gZnVuY3Rpb24gKHN0b3JlKSB7XG4gICAgICAgIHJldHVybiB1dGlscyQxLlN1cGVyVG9rZW5zLmdldEluc3RhbmNlT3JUaHJvdygpLmxvYWRUcmFuc2xhdGlvbihzdG9yZSk7XG4gICAgfTtcbiAgICB2YXIgX2E7XG4gICAgX2EgPSBTdXBlclRva2Vuc0FQSVdyYXBwZXI7XG4gICAgU3VwZXJUb2tlbnNBUElXcmFwcGVyLlN1cGVyVG9rZW5zV3JhcHBlciA9IFN1cGVyVG9rZW5zV3JhcHBlcjtcbiAgICBTdXBlclRva2Vuc0FQSVdyYXBwZXIucmVkaXJlY3RUb0F1dGggPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdXRpbHMuX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfYjtcbiAgICAgICAgICAgIHJldHVybiB1dGlscy5fX2dlbmVyYXRvcihfYSwgZnVuY3Rpb24gKF9jKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgICAgICAgICAgMiAvKnJldHVybiovLFxuICAgICAgICAgICAgICAgICAgICB1dGlscyQxLlN1cGVyVG9rZW5zLmdldEluc3RhbmNlT3JUaHJvdygpLnJlZGlyZWN0VG9BdXRoKFxuICAgICAgICAgICAgICAgICAgICAgICAgdXRpbHMuX19hc3NpZ24odXRpbHMuX19hc3NpZ24oe30sIG9wdGlvbnMpLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVkaXJlY3RCYWNrOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoX2IgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMucmVkaXJlY3RCYWNrKSAhPT1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bGwgJiYgX2IgIT09IHZvaWQgMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgU3VwZXJUb2tlbnNBUElXcmFwcGVyLnVzZVRyYW5zbGF0aW9uID0gdHJhbnNsYXRpb25Db250ZXh0LnVzZVRyYW5zbGF0aW9uO1xuICAgIFN1cGVyVG9rZW5zQVBJV3JhcHBlci51c2VVc2VyQ29udGV4dCA9IHNlc3Npb25BdXRoLnVzZVVzZXJDb250ZXh0O1xuICAgIHJldHVybiBTdXBlclRva2Vuc0FQSVdyYXBwZXI7XG59KSgpO1xudmFyIGluaXQgPSBTdXBlclRva2Vuc0FQSVdyYXBwZXIuaW5pdDtcbnZhciBjaGFuZ2VMYW5ndWFnZSA9IFN1cGVyVG9rZW5zQVBJV3JhcHBlci5jaGFuZ2VMYW5ndWFnZTtcbnZhciBsb2FkVHJhbnNsYXRpb24gPSBTdXBlclRva2Vuc0FQSVdyYXBwZXIubG9hZFRyYW5zbGF0aW9uO1xudmFyIHJlZGlyZWN0VG9BdXRoID0gU3VwZXJUb2tlbnNBUElXcmFwcGVyLnJlZGlyZWN0VG9BdXRoO1xuXG5leHBvcnRzLnVzZVVzZXJDb250ZXh0ID0gc2Vzc2lvbkF1dGgudXNlVXNlckNvbnRleHQ7XG5leHBvcnRzLnVzZVRyYW5zbGF0aW9uID0gdHJhbnNsYXRpb25Db250ZXh0LnVzZVRyYW5zbGF0aW9uO1xuZXhwb3J0cy5TdXBlclRva2Vuc1dyYXBwZXIgPSBTdXBlclRva2Vuc1dyYXBwZXI7XG5leHBvcnRzLmNoYW5nZUxhbmd1YWdlID0gY2hhbmdlTGFuZ3VhZ2U7XG5leHBvcnRzLmRlZmF1bHQgPSBTdXBlclRva2Vuc0FQSVdyYXBwZXI7XG5leHBvcnRzLmluaXQgPSBpbml0O1xuZXhwb3J0cy5sb2FkVHJhbnNsYXRpb24gPSBsb2FkVHJhbnNsYXRpb247XG5leHBvcnRzLnJlZGlyZWN0VG9BdXRoID0gcmVkaXJlY3RUb0F1dGg7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-auth-react/lib/build/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-auth-react/lib/build/index2.js":
/*!*****************************************************************!*\
  !*** ./node_modules/supertokens-auth-react/lib/build/index2.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar NormalisedURLPath = __webpack_require__(/*! supertokens-web-js/utils/normalisedURLPath */ \"./node_modules/supertokens-web-js/utils/normalisedURLPath.js\");\nvar utils = __webpack_require__(/*! ./utils.js */ \"./node_modules/supertokens-auth-react/lib/build/utils.js\");\n\nfunction _interopDefault(e) {\n    return e && e.__esModule ? e : { default: e };\n}\n\nvar React__default = /*#__PURE__*/ _interopDefault(React);\nvar NormalisedURLPath__default = /*#__PURE__*/ _interopDefault(NormalisedURLPath);\n\nvar RecipeRouter = /** @class */ (function () {\n    function RecipeRouter() {\n        var _this = this;\n        this.getPathsToFeatureComponentWithRecipeIdMap = function () {\n            // Memoized version of the map.\n            if (_this.pathsToFeatureComponentWithRecipeIdMap !== undefined) {\n                return _this.pathsToFeatureComponentWithRecipeIdMap;\n            }\n            var pathsToFeatureComponentWithRecipeIdMap = {};\n            var features = _this.getFeatures();\n            var featurePaths = Object.keys(features);\n            for (var j = 0; j < featurePaths.length; j++) {\n                // If no components yet for this route, initialize empty array.\n                var featurePath = featurePaths[j];\n                if (pathsToFeatureComponentWithRecipeIdMap[featurePath] === undefined) {\n                    pathsToFeatureComponentWithRecipeIdMap[featurePath] = [];\n                }\n                pathsToFeatureComponentWithRecipeIdMap[featurePath].push(features[featurePath]);\n            }\n            _this.pathsToFeatureComponentWithRecipeIdMap = pathsToFeatureComponentWithRecipeIdMap;\n            return _this.pathsToFeatureComponentWithRecipeIdMap;\n        };\n    }\n    RecipeRouter.getMatchingComponentForRouteAndRecipeIdFromPreBuiltUIList = function (normalisedUrl, preBuiltUIList) {\n        var path = normalisedUrl.getAsStringDangerous();\n        var routeComponents = preBuiltUIList.reduce(function (components, c) {\n            var _a;\n            var routes =\n                (_a = c.getPathsToFeatureComponentWithRecipeIdMap) === null || _a === void 0\n                    ? void 0\n                    : _a.call(c)[path];\n            return routes !== undefined ? components.concat(routes) : components;\n        }, []);\n        if (routeComponents.length === 0) {\n            return undefined;\n        }\n        var component = routeComponents.find(function (c) {\n            return c.matches();\n        });\n        if (component !== undefined) {\n            return component;\n        }\n        // Otherwise, If no recipe Id provided, or if no recipe id matches, return the first matching component.\n        return routeComponents[0];\n    };\n    return RecipeRouter;\n})();\n\nfunction RoutingComponent(props) {\n    var _a, _b;\n    var path = props.path;\n    var location =\n        (_a = props.getReactRouterDomWithCustomHistory()) === null || _a === void 0 ? void 0 : _a.useLocation();\n    var componentToRender = React__default.default.useMemo(\n        function () {\n            var normalizedPath = new NormalisedURLPath__default.default(path);\n            // During development, this runs twice so as to warn devs of if there\n            // are any side effects that happen here. So in tests, it will result in\n            // the console log twice\n            return RecipeRouter.getMatchingComponentForRouteAndRecipeIdFromPreBuiltUIList(\n                normalizedPath,\n                props.preBuiltUIList\n            );\n        },\n        [path, location]\n    ); // location dependency needs to be kept in order to get new component on url change\n    var history =\n        (_b = props.getReactRouterDomWithCustomHistory()) === null || _b === void 0 ? void 0 : _b.useHistoryCustom();\n    if (componentToRender === undefined) {\n        return null;\n    }\n    return jsxRuntime.jsx(componentToRender.component, { history: history });\n}\n\n/*\n * Component.\n */\nfunction getSuperTokensRoutesForReactRouterDom$1(_a) {\n    var getReactRouterDomWithCustomHistory = _a.getReactRouterDomWithCustomHistory,\n        recipeList = _a.recipeList;\n    var routerInfo = getReactRouterDomWithCustomHistory();\n    if (routerInfo === undefined) {\n        return [];\n    }\n    var Route = routerInfo.router.Route;\n    return Object.values(\n        recipeList.reduce(function (routes, recipe) {\n            var pathsToFeatureComponentWithRecipeIdMap = recipe.getPathsToFeatureComponentWithRecipeIdMap();\n            Object.keys(pathsToFeatureComponentWithRecipeIdMap).forEach(function (path) {\n                path = path === \"\" ? \"/\" : path;\n                if (!(path in routes)) {\n                    routes[path] = jsxRuntime.jsx(\n                        Route,\n                        utils.__assign(\n                            { exact: true, path: path },\n                            {\n                                children: jsxRuntime.jsx(RoutingComponent, {\n                                    getReactRouterDomWithCustomHistory: getReactRouterDomWithCustomHistory,\n                                    preBuiltUIList: recipeList,\n                                    path: path,\n                                }),\n                            }\n                        ),\n                        \"st-\".concat(path)\n                    );\n                }\n            });\n            return routes;\n        }, {})\n    );\n}\n\n/*\n * Component.\n */\nfunction getSuperTokensRoutesForReactRouterDomV6(_a) {\n    var getReactRouterDomWithCustomHistory = _a.getReactRouterDomWithCustomHistory,\n        recipeList = _a.recipeList;\n    var routerInfo = getReactRouterDomWithCustomHistory();\n    if (routerInfo === undefined) {\n        return [];\n    }\n    var Route = routerInfo.router.Route;\n    return Object.values(\n        recipeList.reduce(function (routes, recipe) {\n            var pathsToFeatureComponentWithRecipeIdMap = recipe.getPathsToFeatureComponentWithRecipeIdMap();\n            Object.keys(pathsToFeatureComponentWithRecipeIdMap).forEach(function (path) {\n                path = path === \"\" ? \"/\" : path;\n                if (!(path in routes)) {\n                    routes[path] = jsxRuntime.jsx(\n                        Route,\n                        {\n                            path: path,\n                            element: jsxRuntime.jsx(RoutingComponent, {\n                                getReactRouterDomWithCustomHistory: getReactRouterDomWithCustomHistory,\n                                preBuiltUIList: recipeList,\n                                path: path,\n                            }),\n                        },\n                        \"st-\".concat(path)\n                    );\n                }\n            });\n            return routes;\n        }, {})\n    );\n}\n\nvar UI = /** @class */ (function () {\n    function UI() {}\n    UI.getSuperTokensRoutesForReactRouterDom = function (reactRouterDom, preBuiltUiClassList) {\n        if (preBuiltUiClassList === void 0) {\n            preBuiltUiClassList = [];\n        }\n        if (reactRouterDom === undefined || preBuiltUiClassList.length === 0) {\n            throw new Error(\n                // eslint-disable-next-line @typescript-eslint/quotes\n                'Please use getSuperTokensRoutesForReactRouterDom like getSuperTokensRoutesForReactRouterDom(require(\"react-router-dom\"), [EmailPasswordPreBuiltUI]) in your render function'\n            );\n        }\n        var recipeList = preBuiltUiClassList.map(function (r) {\n            return r.getInstanceOrInitAndGetInstance();\n        });\n        if (UI.reactRouterDomIsV6 === undefined) {\n            UI.reactRouterDomIsV6 = reactRouterDom.withRouter === undefined;\n        }\n        if (UI.reactRouterDomIsV6) {\n            if (UI.reactRouterDom === undefined) {\n                // this function wraps the react-router-dom v6 useNavigate function in a way\n                // that enforces that it runs within a useEffect. The reason we do this is\n                // cause of https://github.com/remix-run/react-router/issues/7460\n                // which gets shown when visiting a social auth callback url like\n                // /auth/callback/github, without a valid code or state. This then\n                // doesn't navigate the user to the auth page.\n                var useNavigateHookForRRDV6 = function () {\n                    var navigateHook = reactRouterDom.useNavigate();\n                    var _a = React__default.default.useState(undefined),\n                        to = _a[0],\n                        setTo = _a[1];\n                    React__default.default.useEffect(\n                        function () {\n                            if (to !== undefined) {\n                                setTo(undefined);\n                                navigateHook(to);\n                            }\n                        },\n                        [to, navigateHook, setTo]\n                    );\n                    return setTo;\n                };\n                UI.reactRouterDom = {\n                    router: reactRouterDom,\n                    useHistoryCustom: useNavigateHookForRRDV6,\n                    useLocation: reactRouterDom.useLocation,\n                };\n            }\n            return getSuperTokensRoutesForReactRouterDomV6({\n                getReactRouterDomWithCustomHistory: UI.getReactRouterDomWithCustomHistory,\n                recipeList: recipeList,\n            });\n        }\n        if (UI.reactRouterDom === undefined) {\n            UI.reactRouterDom = {\n                router: reactRouterDom,\n                useHistoryCustom: reactRouterDom.useHistory,\n                useLocation: reactRouterDom.useLocation,\n            };\n        }\n        return getSuperTokensRoutesForReactRouterDom$1({\n            getReactRouterDomWithCustomHistory: UI.getReactRouterDomWithCustomHistory,\n            recipeList: recipeList,\n        });\n    };\n    UI.canHandleRoute = function (preBuiltUiClassList) {\n        var recipeList = preBuiltUiClassList.map(function (r) {\n            return r.getInstanceOrInitAndGetInstance();\n        });\n        return (\n            RecipeRouter.getMatchingComponentForRouteAndRecipeIdFromPreBuiltUIList(\n                utils.getCurrentNormalisedUrlPath(),\n                recipeList\n            ) !== undefined\n        );\n    };\n    UI.getRoutingComponent = function (preBuiltUiClassList) {\n        var recipeList = preBuiltUiClassList.map(function (r) {\n            return r.getInstanceOrInitAndGetInstance();\n        });\n        return jsxRuntime.jsx(RoutingComponent, {\n            getReactRouterDomWithCustomHistory: UI.getReactRouterDomWithCustomHistory,\n            path: utils.getCurrentNormalisedUrlPath().getAsStringDangerous(),\n            preBuiltUIList: recipeList,\n        });\n    };\n    UI.getReactRouterDomWithCustomHistory = function () {\n        return UI.reactRouterDom;\n    };\n    return UI;\n})();\nvar getSuperTokensRoutesForReactRouterDom = UI.getSuperTokensRoutesForReactRouterDom;\nvar canHandleRoute = UI.canHandleRoute;\nvar getRoutingComponent = UI.getRoutingComponent;\n\nexports.RecipeRouter = RecipeRouter;\nexports.UI = UI;\nexports.canHandleRoute = canHandleRoute;\nexports.getRoutingComponent = getRoutingComponent;\nexports.getSuperTokensRoutesForReactRouterDom = getSuperTokensRoutesForReactRouterDom;\n//# sourceMappingURL=index2.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-auth-react/lib/build/index2.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-auth-react/lib/build/recipeModule-shared.js":
/*!******************************************************************************!*\
  !*** ./node_modules/supertokens-auth-react/lib/build/recipeModule-shared.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ./utils.js */ \"./node_modules/supertokens-auth-react/lib/build/utils.js\");\nvar SuperTokensWebJS = __webpack_require__(/*! supertokens-web-js */ \"./node_modules/supertokens-web-js/index.js\");\nvar cookieHandler = __webpack_require__(/*! supertokens-web-js/utils/cookieHandler */ \"./node_modules/supertokens-web-js/utils/cookieHandler/index.js\");\nvar postSuperTokensInitCallbacks = __webpack_require__(/*! supertokens-web-js/utils/postSuperTokensInitCallbacks */ \"./node_modules/supertokens-web-js/utils/postSuperTokensInitCallbacks.js\");\nvar windowHandler = __webpack_require__(/*! supertokens-web-js/utils/windowHandler */ \"./node_modules/supertokens-web-js/utils/windowHandler/index.js\");\n\nfunction _interopDefault(e) {\n    return e && e.__esModule ? e : { default: e };\n}\n\nvar SuperTokensWebJS__default = /*#__PURE__*/ _interopDefault(SuperTokensWebJS);\n\nvar TranslationController = /** @class */ (function () {\n    function TranslationController() {\n        this.handlers = new Map();\n    }\n    TranslationController.prototype.emit = function (event, detail) {\n        var handlerList = this.handlers.get(event) || [];\n        for (var _i = 0, handlerList_1 = handlerList; _i < handlerList_1.length; _i++) {\n            var h = handlerList_1[_i];\n            h(event, detail);\n        }\n    };\n    TranslationController.prototype.on = function (event, handler) {\n        var handlerList = this.handlers.get(event) || [];\n        this.handlers.set(event, handlerList.concat(handler));\n    };\n    TranslationController.prototype.off = function (event, handler) {\n        var handlerList = this.handlers.get(event) || [];\n        this.handlers.set(\n            event,\n            handlerList.filter(function (h) {\n                return h !== handler;\n            })\n        );\n    };\n    return TranslationController;\n})();\nvar CURRENT_LANGUAGE_COOKIE_NAME = \"sCurrLanguage\";\nfunction saveCurrentLanguage(language, cookieDomain) {\n    return utils.__awaiter(this, void 0, void 0, function () {\n        return utils.__generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _b.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, utils.setFrontendCookie(CURRENT_LANGUAGE_COOKIE_NAME, language, cookieDomain)];\n                case 1:\n                    _b.sent();\n                    return [3 /*break*/, 3];\n                case 2:\n                    _b.sent();\n                    return [3 /*break*/, 3];\n                case 3:\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getCurrentLanguageFromCookie() {\n    return utils.__awaiter(this, void 0, void 0, function () {\n        return utils.__generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _b.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, utils.getCookieValue(CURRENT_LANGUAGE_COOKIE_NAME)];\n                case 1:\n                    return [2 /*return*/, _b.sent()];\n                case 2:\n                    _b.sent();\n                    // This can throw if we are not in a browser\n                    // Since this is just loading a preference we can safely ignore the exception\n                    return [2 /*return*/, null];\n                case 3:\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n/*\n * Class.\n */\nvar SuperTokens = /** @class */ (function () {\n    /*\n     * Constructor.\n     */\n    function SuperTokens(config) {\n        var _this = this;\n        this.recipeList = [];\n        this.changeLanguage = function (lang) {\n            return utils.__awaiter(_this, void 0, void 0, function () {\n                return utils.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            return [\n                                4 /*yield*/,\n                                saveCurrentLanguage(lang, this.languageTranslations.currentLanguageCookieScope),\n                            ];\n                        case 1:\n                            _a.sent();\n                            this.languageTranslations.translationEventSource.emit(\"LanguageChange\", lang);\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        this.redirectToAuth = function (options) {\n            return utils.__awaiter(_this, void 0, void 0, function () {\n                var queryParams, redirectUrl;\n                return utils.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            queryParams = options.queryParams === undefined ? {} : options.queryParams;\n                            if (options.show !== undefined) {\n                                queryParams.show = options.show;\n                            }\n                            if (options.redirectBack === true) {\n                                queryParams.redirectToPath = utils.getCurrentNormalisedUrlPath().getAsStringDangerous();\n                            }\n                            return [\n                                4 /*yield*/,\n                                this.getRedirectUrl({\n                                    action: \"TO_AUTH\",\n                                    showSignIn: options.show === \"signin\",\n                                }),\n                            ];\n                        case 1:\n                            redirectUrl = _a.sent();\n                            redirectUrl = utils.appendQueryParamsToURL(redirectUrl, queryParams);\n                            return [2 /*return*/, this.redirectToUrl(redirectUrl, options.history)];\n                    }\n                });\n            });\n        };\n        this.redirectToUrl = function (redirectUrl, history) {\n            return utils.__awaiter(_this, void 0, void 0, function () {\n                var origin_1;\n                return utils.__generator(this, function (_a) {\n                    try {\n                        new URL(redirectUrl); // If full URL, no error thrown, skip in app redirection.\n                    } catch (e) {\n                        origin_1 = utils.getOriginOfPage().getAsStringDangerous();\n                        if (origin_1 !== this.appInfo.websiteDomain.getAsStringDangerous()) {\n                            redirectUrl = \"\"\n                                .concat(this.appInfo.websiteDomain.getAsStringDangerous())\n                                .concat(redirectUrl);\n                            utils.redirectWithFullPageReload(redirectUrl);\n                            return [2 /*return*/];\n                        }\n                        // If history was provided, use to redirect without reloading.\n                        if (history !== undefined) {\n                            utils.redirectWithHistory(redirectUrl, history);\n                            return [2 /*return*/];\n                        }\n                    }\n                    // Otherwise, redirect in app.\n                    utils.redirectWithFullPageReload(redirectUrl);\n                    return [2 /*return*/];\n                });\n            });\n        };\n        this.appInfo = utils.normaliseInputAppInfoOrThrowError(config.appInfo);\n        if (config.recipeList === undefined || config.recipeList.length === 0) {\n            throw new Error(\n                \"Please provide at least one recipe to the supertokens.init function call. See https://supertokens.io/docs/emailpassword/quick-setup/frontend\"\n            );\n        }\n        var translationConfig = config.languageTranslations === undefined ? {} : config.languageTranslations;\n        this.languageTranslations = {\n            defaultLanguage: translationConfig.defaultLanguage === undefined ? \"en\" : translationConfig.defaultLanguage,\n            currentLanguageCookieScope:\n                translationConfig.currentLanguageCookieScope !== undefined\n                    ? utils.normaliseCookieScopeOrThrowError(translationConfig.currentLanguageCookieScope)\n                    : utils.getDefaultCookieScope(),\n            userTranslationStore: translationConfig.translations !== undefined ? translationConfig.translations : {},\n            translationEventSource: new TranslationController(),\n            userTranslationFunc: translationConfig.translationFunc,\n        };\n        var enableDebugLogs = false;\n        if (config.enableDebugLogs !== undefined) {\n            enableDebugLogs = config.enableDebugLogs;\n        }\n        this.userGetRedirectionURL = config.getRedirectionURL;\n        this.recipeList = config.recipeList.map(function (_a) {\n            var authReact = _a.authReact;\n            return authReact(_this.appInfo, enableDebugLogs);\n        });\n    }\n    /*\n     * Static Methods.\n     */\n    SuperTokens.init = function (config) {\n        cookieHandler.CookieHandlerReference.init(config.cookieHandler);\n        windowHandler.WindowHandlerReference.init(config.windowHandler);\n        if (SuperTokens.instance !== undefined) {\n            console.warn(\"SuperTokens was already initialized\");\n            return;\n        }\n        SuperTokensWebJS__default.default.init(\n            utils.__assign(utils.__assign({}, config), {\n                recipeList: config.recipeList.map(function (_a) {\n                    var webJS = _a.webJS;\n                    return webJS;\n                }),\n            })\n        );\n        SuperTokens.instance = new SuperTokens(config);\n        postSuperTokensInitCallbacks.PostSuperTokensInitCallbacks.runPostInitCallbacks();\n    };\n    SuperTokens.getInstanceOrThrow = function () {\n        if (SuperTokens.instance === undefined) {\n            var error = \"SuperTokens must be initialized before calling this method.\";\n            // eslint-disable-next-line supertokens-auth-react/no-direct-window-object\n            if (typeof window === \"undefined\") {\n                error = error + utils.SSR_ERROR;\n            }\n            throw new Error(error);\n        }\n        return SuperTokens.instance;\n    };\n    SuperTokens.prototype.getRecipeOrThrow = function (recipeId) {\n        var recipe = this.recipeList.find(function (recipe) {\n            return recipe.config.recipeId === recipeId;\n        });\n        if (recipe === undefined) {\n            throw new Error(\"Missing recipe: \".concat(recipeId));\n        }\n        return recipe;\n    };\n    SuperTokens.prototype.loadTranslation = function (store) {\n        this.languageTranslations.translationEventSource.emit(\"TranslationLoaded\", store);\n    };\n    SuperTokens.prototype.getRedirectUrl = function (context) {\n        return utils.__awaiter(this, void 0, void 0, function () {\n            var userRes, redirectUrl;\n            return utils.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.userGetRedirectionURL) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.userGetRedirectionURL(context)];\n                    case 1:\n                        userRes = _a.sent();\n                        if (userRes !== undefined) {\n                            return [2 /*return*/, userRes];\n                        }\n                        _a.label = 2;\n                    case 2:\n                        if (context.action === \"TO_AUTH\") {\n                            redirectUrl = this.appInfo.websiteBasePath.getAsStringDangerous();\n                            return [2 /*return*/, utils.appendTrailingSlashToURL(redirectUrl)];\n                        }\n                        throw new Error(\"Should never come here: unexpected redirection context\");\n                }\n            });\n        });\n    };\n    /*\n     * Tests methods.\n     */\n    SuperTokens.reset = function () {\n        if (!utils.isTest()) {\n            return;\n        }\n        SuperTokens.instance = undefined;\n        return;\n    };\n    return SuperTokens;\n})();\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n/*\n * Class.\n */\nvar RecipeModule = /** @class */ (function () {\n    /*\n     * Constructor.\n     */\n    function RecipeModule(config) {\n        var _this = this;\n        this.redirect = function (context, history, queryParams) {\n            return utils.__awaiter(_this, void 0, void 0, function () {\n                var redirectUrl;\n                return utils.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            return [4 /*yield*/, this.getRedirectUrl(context)];\n                        case 1:\n                            redirectUrl = _a.sent();\n                            redirectUrl = utils.appendQueryParamsToURL(redirectUrl, queryParams);\n                            return [2 /*return*/, SuperTokens.getInstanceOrThrow().redirectToUrl(redirectUrl, history)];\n                    }\n                });\n            });\n        };\n        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n        this.getRedirectUrl = function (context) {\n            return utils.__awaiter(_this, void 0, void 0, function () {\n                var redirectUrl;\n                return utils.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            return [4 /*yield*/, this.config.getRedirectionURL(context)];\n                        case 1:\n                            redirectUrl = _a.sent();\n                            if (redirectUrl !== undefined) {\n                                return [2 /*return*/, redirectUrl];\n                            }\n                            return [4 /*yield*/, this.getDefaultRedirectionURL(context)];\n                        case 2:\n                            // Otherwise, use default.\n                            return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        this.config = config;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    RecipeModule.prototype.getDefaultRedirectionURL = function (_) {\n        return utils.__awaiter(this, void 0, void 0, function () {\n            return utils.__generator(this, function (_a) {\n                throw new Error(\"getDefaultRedirectionURL is not implemented.\");\n            });\n        });\n    };\n    return RecipeModule;\n})();\n\nfunction normaliseRecipeModuleConfig(config) {\n    var _this = this;\n    if (config === undefined) {\n        config = {};\n    }\n    var onHandleEvent = config.onHandleEvent,\n        getRedirectionURL = config.getRedirectionURL,\n        preAPIHook = config.preAPIHook,\n        postAPIHook = config.postAPIHook;\n    if (onHandleEvent === undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n        onHandleEvent = function (_) {};\n    }\n    if (getRedirectionURL === undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        getRedirectionURL = function (_) {\n            return utils.__awaiter(_this, void 0, void 0, function () {\n                return utils.__generator(this, function (_a) {\n                    return [2 /*return*/, undefined];\n                });\n            });\n        };\n    }\n    if (preAPIHook === undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        preAPIHook = function (context) {\n            return utils.__awaiter(_this, void 0, void 0, function () {\n                return utils.__generator(this, function (_a) {\n                    return [2 /*return*/, context];\n                });\n            });\n        };\n    }\n    if (postAPIHook === undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        postAPIHook = function () {\n            return utils.__awaiter(_this, void 0, void 0, function () {\n                return utils.__generator(this, function (_a) {\n                    return [2 /*return*/];\n                });\n            });\n        };\n    }\n    var useShadowDom = config.useShadowDom === undefined ? true : config.useShadowDom;\n    useShadowDom = getShouldUseShadowDomBasedOnBrowser(useShadowDom);\n    var rootStyle = config.style === undefined ? \"\" : config.style;\n    return utils.__assign(utils.__assign({}, config), {\n        getRedirectionURL: getRedirectionURL,\n        onHandleEvent: onHandleEvent,\n        preAPIHook: preAPIHook,\n        postAPIHook: postAPIHook,\n        useShadowDom: useShadowDom,\n        rootStyle: rootStyle,\n    });\n}\nfunction getShouldUseShadowDomBasedOnBrowser(useShadowDom) {\n    return useShadowDom !== undefined ? useShadowDom : true;\n}\n\nexports.RecipeModule = RecipeModule;\nexports.SuperTokens = SuperTokens;\nexports.getCurrentLanguageFromCookie = getCurrentLanguageFromCookie;\nexports.normaliseRecipeModuleConfig = normaliseRecipeModuleConfig;\n//# sourceMappingURL=recipeModule-shared.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-auth-react/lib/build/recipeModule-shared.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-auth-react/lib/build/session-shared.js":
/*!*************************************************************************!*\
  !*** ./node_modules/supertokens-auth-react/lib/build/session-shared.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ./utils.js */ \"./node_modules/supertokens-auth-react/lib/build/utils.js\");\nvar jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar utils$1 = __webpack_require__(/*! ./recipeModule-shared.js */ \"./node_modules/supertokens-auth-react/lib/build/recipeModule-shared.js\");\nvar uiEntry = __webpack_require__(/*! ./index2.js */ \"./node_modules/supertokens-auth-react/lib/build/index2.js\");\nvar recipe = __webpack_require__(/*! ./session-shared2.js */ \"./node_modules/supertokens-auth-react/lib/build/session-shared2.js\");\n\nfunction _interopDefault(e) {\n    return e && e.__esModule ? e : { default: e };\n}\n\nvar React__default = /*#__PURE__*/ _interopDefault(React);\n\nvar UserContextContext = React__default.default.createContext(undefined);\nvar useUserContext = function () {\n    return React__default.default.useContext(UserContextContext);\n};\nvar UserContextProvider = function (_a) {\n    var children = _a.children,\n        userContext = _a.userContext;\n    var currentUserContext = React.useState(utils.getNormalisedUserContext(userContext))[0];\n    return jsxRuntime.jsx(\n        UserContextContext.Provider,\n        utils.__assign({ value: currentUserContext }, { children: children })\n    );\n};\n\nfunction UserContextWrapper(props) {\n    /**\n     * If we receive a userContext as a props we should assume that the user\n     * is either trying to use a theme component as standalone or that they\n     * want to override an existing value for userContext.\n     *\n     * In this case we should always return a Provider with the value of userContext\n     */\n    if (props.userContext !== undefined) {\n        return jsxRuntime.jsx(\n            UserContextProvider,\n            utils.__assign({ userContext: props.userContext }, { children: props.children })\n        );\n    }\n    return jsxRuntime.jsx(UserContextContext.Consumer, {\n        children: function (value) {\n            /**\n             * value is undefined only if there is no Provider in the tree. In this case it is safe to\n             * assume that the theme component is not being rendered by the SDK and that the user is not\n             * using this as a child of one of the pre-built feature components.\n             *\n             * In this case we return a provider so that the userContext hook can be used by the children\n             * of this theme component\n             */\n            if (value === undefined) {\n                return jsxRuntime.jsx(UserContextProvider, { children: props.children });\n            }\n            /**\n             * If value is not undefined then a provider exists in the tree. This means that this component\n             * is either being rendered by the SDK or the user has added it as a child of the pre-built\n             * feature components. In either case the userContext hook will be available so simply\n             * return the theme component.\n             */\n            return props.children;\n        },\n    });\n}\n\nvar SessionContext = React__default.default.createContext({\n    loading: true,\n    isDefault: true,\n});\n\nvar SessionAuth = function (_a) {\n    var _b;\n    var children = _a.children,\n        props = utils.__rest(_a, [\"children\"]);\n    var requireAuth = React.useRef(props.requireAuth);\n    if (props.requireAuth !== requireAuth.current) {\n        throw new Error(\n            // eslint-disable-next-line @typescript-eslint/quotes\n            'requireAuth prop should not change. If you are seeing this, it probably means that you are using SessionAuth in multiple routes with different values for requireAuth. To solve this, try adding the \"key\" prop to all uses of SessionAuth like <SessionAuth key=\"someUniqueKeyPerRoute\" requireAuth={...}>'\n        );\n    }\n    // Reusing the parent context was removed because it caused a redirect loop in an edge case\n    // because it'd also reuse the invalid claims part until it loaded.\n    var _c = React.useState({ loading: true }),\n        context = _c[0],\n        setContext = _c[1];\n    var session = React.useRef();\n    // We store this here, to prevent the list of called hooks changing even if a history hook is added later to SuperTokens.\n    var historyHookRef = React.useRef(\n        (_b = uiEntry.UI.getReactRouterDomWithCustomHistory()) === null || _b === void 0 ? void 0 : _b.useHistoryCustom\n    );\n    var history;\n    try {\n        if (historyHookRef.current) {\n            history = historyHookRef.current();\n        }\n    } catch (_d) {\n        // We catch and ignore errors here, because if this is may throw if\n        // the app is using react-router-dom but added a session auth outside of the router.\n    }\n    var userContext = useUserContext();\n    var redirectToLogin = React.useCallback(function () {\n        void utils$1.SuperTokens.getInstanceOrThrow().redirectToAuth({ history: history, redirectBack: true });\n    }, []);\n    var buildContext = React.useCallback(function () {\n        return utils.__awaiter(void 0, void 0, void 0, function () {\n            var sessionExists, invalidClaims, err_1, invalidClaimRedirectToPath, err_2;\n            var _a;\n            return utils.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (session.current === undefined) {\n                            session.current = recipe.Session.getInstanceOrThrow();\n                        }\n                        return [\n                            4 /*yield*/,\n                            session.current.doesSessionExist({\n                                userContext: userContext,\n                            }),\n                        ];\n                    case 1:\n                        sessionExists = _b.sent();\n                        if (sessionExists === false) {\n                            return [\n                                2 /*return*/,\n                                {\n                                    loading: false,\n                                    doesSessionExist: false,\n                                    accessTokenPayload: {},\n                                    invalidClaims: [],\n                                    userId: \"\",\n                                },\n                            ];\n                        }\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, 4, , 6]);\n                        return [\n                            4 /*yield*/,\n                            session.current.validateClaims({\n                                overrideGlobalClaimValidators: props.overrideGlobalClaimValidators,\n                                userContext: userContext,\n                            }),\n                        ];\n                    case 3:\n                        invalidClaims = _b.sent();\n                        return [3 /*break*/, 6];\n                    case 4:\n                        err_1 = _b.sent();\n                        return [\n                            4 /*yield*/,\n                            session.current.doesSessionExist({\n                                userContext: userContext,\n                            }),\n                        ];\n                    case 5:\n                        // These errors should only come from getAccessTokenPayloadSecurely inside validateClaims if refreshing a claim cleared the session\n                        // Which means that the session was most likely cleared, meaning returning false is right.\n                        // This might also happen if the user provides an override or a custom claim validator that throws (or if we have a bug)\n                        // In which case the session will not be cleared so we rethrow the error\n                        if (_b.sent()) {\n                            throw err_1;\n                        }\n                        return [\n                            2 /*return*/,\n                            {\n                                loading: false,\n                                doesSessionExist: false,\n                                accessTokenPayload: {},\n                                invalidClaims: [],\n                                userId: \"\",\n                            },\n                        ];\n                    case 6:\n                        invalidClaimRedirectToPath = utils.popInvalidClaimRedirectPathFromContext(userContext);\n                        _b.label = 7;\n                    case 7:\n                        _b.trys.push([7, 10, , 12]);\n                        _a = {\n                            loading: false,\n                            doesSessionExist: true,\n                            invalidClaims: invalidClaims,\n                            invalidClaimRedirectToPath: invalidClaimRedirectToPath,\n                        };\n                        return [\n                            4 /*yield*/,\n                            session.current.getAccessTokenPayloadSecurely({\n                                userContext: userContext,\n                            }),\n                        ];\n                    case 8:\n                        _a.accessTokenPayload = _b.sent();\n                        return [\n                            4 /*yield*/,\n                            session.current.getUserId({\n                                userContext: userContext,\n                            }),\n                        ];\n                    case 9:\n                        return [2 /*return*/, ((_a.userId = _b.sent()), _a)];\n                    case 10:\n                        err_2 = _b.sent();\n                        return [\n                            4 /*yield*/,\n                            session.current.doesSessionExist({\n                                userContext: userContext,\n                            }),\n                        ];\n                    case 11:\n                        if (_b.sent()) {\n                            throw err_2;\n                        }\n                        // This means that loading the access token or the userId failed\n                        // This may happen if the server cleared the error since the validation was done which should be extremely rare\n                        return [\n                            2 /*return*/,\n                            {\n                                loading: false,\n                                doesSessionExist: false,\n                                accessTokenPayload: {},\n                                invalidClaims: [],\n                                userId: \"\",\n                            },\n                        ];\n                    case 12:\n                        return [2 /*return*/];\n                }\n            });\n        });\n    }, []);\n    var setInitialContextAndMaybeRedirect = React.useCallback(\n        function (toSetContext) {\n            return utils.__awaiter(void 0, void 0, void 0, function () {\n                return utils.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (context.loading === false) {\n                                return [2 /*return*/];\n                            }\n                            if (!(props.doRedirection !== false)) return [3 /*break*/, 3];\n                            if (!(!toSetContext.doesSessionExist && props.requireAuth !== false))\n                                return [3 /*break*/, 1];\n                            redirectToLogin();\n                            return [2 /*return*/];\n                        case 1:\n                            if (!(toSetContext.invalidClaimRedirectToPath !== undefined)) return [3 /*break*/, 3];\n                            return [\n                                4 /*yield*/,\n                                utils$1.SuperTokens.getInstanceOrThrow().redirectToUrl(\n                                    toSetContext.invalidClaimRedirectToPath,\n                                    history\n                                ),\n                            ];\n                        case 2:\n                            _a.sent();\n                            return [2 /*return*/];\n                        case 3:\n                            delete toSetContext.invalidClaimRedirectToPath;\n                            setContext(toSetContext);\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        },\n        [props.doRedirection, props.requireAuth, redirectToLogin, context]\n    );\n    utils.useOnMountAPICall(buildContext, setInitialContextAndMaybeRedirect);\n    // subscribe to events on mount\n    React.useEffect(\n        function () {\n            function onHandleEvent(event) {\n                return utils.__awaiter(this, void 0, void 0, function () {\n                    var _a, invalidClaims, redirectPath;\n                    return utils.__generator(this, function (_b) {\n                        switch (_b.label) {\n                            case 0:\n                                _a = event.action;\n                                switch (_a) {\n                                    case \"SESSION_CREATED\":\n                                        return [3 /*break*/, 1];\n                                    case \"REFRESH_SESSION\":\n                                        return [3 /*break*/, 1];\n                                    case \"ACCESS_TOKEN_PAYLOAD_UPDATED\":\n                                        return [3 /*break*/, 1];\n                                    case \"API_INVALID_CLAIM\":\n                                        return [3 /*break*/, 1];\n                                    case \"SIGN_OUT\":\n                                        return [3 /*break*/, 5];\n                                    case \"UNAUTHORISED\":\n                                        return [3 /*break*/, 6];\n                                }\n                                return [3 /*break*/, 7];\n                            case 1:\n                                return [\n                                    4 /*yield*/,\n                                    session.current.validateClaims({\n                                        overrideGlobalClaimValidators: props.overrideGlobalClaimValidators,\n                                        userContext: userContext,\n                                    }),\n                                ];\n                            case 2:\n                                invalidClaims = _b.sent();\n                                setContext(\n                                    utils.__assign(utils.__assign({}, event.sessionContext), {\n                                        loading: false,\n                                        invalidClaims: invalidClaims,\n                                    })\n                                );\n                                redirectPath = utils.popInvalidClaimRedirectPathFromContext(userContext);\n                                if (!(props.doRedirection !== false && redirectPath)) return [3 /*break*/, 4];\n                                return [\n                                    4 /*yield*/,\n                                    utils$1.SuperTokens.getInstanceOrThrow().redirectToUrl(redirectPath, history),\n                                ];\n                            case 3:\n                                _b.sent();\n                                _b.label = 4;\n                            case 4:\n                                return [2 /*return*/];\n                            case 5:\n                                setContext(\n                                    utils.__assign(utils.__assign({}, event.sessionContext), {\n                                        loading: false,\n                                        invalidClaims: [],\n                                    })\n                                );\n                                return [2 /*return*/];\n                            case 6:\n                                setContext(\n                                    utils.__assign(utils.__assign({}, event.sessionContext), {\n                                        loading: false,\n                                        invalidClaims: [],\n                                    })\n                                );\n                                if (props.onSessionExpired !== undefined) {\n                                    props.onSessionExpired();\n                                } else if (props.requireAuth !== false && props.doRedirection !== false) {\n                                    redirectToLogin();\n                                }\n                                return [2 /*return*/];\n                            case 7:\n                                return [2 /*return*/];\n                        }\n                    });\n                });\n            }\n            if (session.current === undefined) {\n                session.current = recipe.Session.getInstanceOrThrow();\n            }\n            if (context.loading === false) {\n                // we return here cause addEventListener returns a function that removes\n                // the listener, and this function will be called by useEffect when\n                // onHandleEvent changes or if the component is unmounting.\n                return session.current.addEventListener(onHandleEvent);\n            }\n            return undefined;\n        },\n        [props, setContext, context.loading]\n    );\n    if (props.requireAuth !== false && (context.loading || !context.doesSessionExist)) {\n        return null;\n    }\n    return jsxRuntime.jsx(SessionContext.Provider, utils.__assign({ value: context }, { children: children }));\n};\nvar SessionAuthWrapper = function (props) {\n    return jsxRuntime.jsx(\n        UserContextWrapper,\n        utils.__assign(\n            { userContext: props.userContext },\n            { children: jsxRuntime.jsx(SessionAuth, utils.__assign({}, props)) }\n        )\n    );\n};\n\nexports.SessionAuthWrapper = SessionAuthWrapper;\nexports.SessionContext = SessionContext;\nexports.UserContextContext = UserContextContext;\nexports.UserContextWrapper = UserContextWrapper;\nexports.useUserContext = useUserContext;\n//# sourceMappingURL=session-shared.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-auth-react/lib/build/session-shared.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-auth-react/lib/build/session-shared2.js":
/*!**************************************************************************!*\
  !*** ./node_modules/supertokens-auth-react/lib/build/session-shared2.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ./utils.js */ \"./node_modules/supertokens-auth-react/lib/build/utils.js\");\nvar WebJSSessionRecipe = __webpack_require__(/*! supertokens-web-js/recipe/session */ \"./node_modules/supertokens-web-js/recipe/session/index.js\");\nvar utils$1 = __webpack_require__(/*! ./recipeModule-shared.js */ \"./node_modules/supertokens-auth-react/lib/build/recipeModule-shared.js\");\n\nfunction _interopDefault(e) {\n    return e && e.__esModule ? e : { default: e };\n}\n\nvar WebJSSessionRecipe__default = /*#__PURE__*/ _interopDefault(WebJSSessionRecipe);\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar Session = /** @class */ (function (_super) {\n    utils.__extends(Session, _super);\n    function Session(config, webJSRecipe) {\n        if (webJSRecipe === void 0) {\n            webJSRecipe = WebJSSessionRecipe__default.default;\n        }\n        var _this = _super.call(this, config) || this;\n        _this.webJSRecipe = webJSRecipe;\n        _this.eventListeners = new Set();\n        _this.redirectionHandlersFromAuthRecipes = new Map();\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        _this.getFeatureComponent = function (_) {\n            throw new Error(\"should never come here\");\n        };\n        _this.getFeatures = function () {\n            return {};\n        };\n        _this.getUserId = function (input) {\n            return _this.webJSRecipe.getUserId(input);\n        };\n        _this.getAccessToken = function (input) {\n            return _this.webJSRecipe.getAccessToken(input);\n        };\n        _this.getClaimValue = function (input) {\n            return _this.webJSRecipe.getClaimValue(input);\n        };\n        _this.getAccessTokenPayloadSecurely = function (input) {\n            return utils.__awaiter(_this, void 0, void 0, function () {\n                return utils.__generator(this, function (_a) {\n                    return [2 /*return*/, this.webJSRecipe.getAccessTokenPayloadSecurely(input)];\n                });\n            });\n        };\n        _this.doesSessionExist = function (input) {\n            return _this.webJSRecipe.doesSessionExist(input);\n        };\n        _this.signOut = function (input) {\n            return _this.webJSRecipe.signOut(input);\n        };\n        _this.attemptRefreshingSession = function () {\n            return utils.__awaiter(_this, void 0, void 0, function () {\n                return utils.__generator(this, function (_a) {\n                    return [2 /*return*/, this.webJSRecipe.attemptRefreshingSession()];\n                });\n            });\n        };\n        _this.validateClaims = function (input) {\n            return _this.webJSRecipe.validateClaims(input);\n        };\n        _this.getInvalidClaimsFromResponse = function (input) {\n            return _this.webJSRecipe.getInvalidClaimsFromResponse(input);\n        };\n        /**\n         * @returns Function to remove event listener\n         */\n        _this.addEventListener = function (listener) {\n            _this.eventListeners.add(listener);\n            return function () {\n                return _this.eventListeners.delete(listener);\n            };\n        };\n        _this.addAuthRecipeRedirectionHandler = function (rid, redirect) {\n            _this.redirectionHandlersFromAuthRecipes.set(rid, redirect);\n        };\n        _this.validateGlobalClaimsAndHandleSuccessRedirection = function (redirectInfo, userContext, history) {\n            return utils.__awaiter(_this, void 0, void 0, function () {\n                var invalidClaims, invalidClaimRedirectPath, jsonContext, successContextStr, authRecipeRedirectHandler;\n                return utils.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            return [4 /*yield*/, this.doesSessionExist({ userContext: userContext })];\n                        case 1:\n                            // First we check if there is an active session\n                            if (!_a.sent()) {\n                                // If there is none, we have no way of checking claims, so we redirect to the auth page\n                                // This can happen e.g.: if the user clicked on the email verification link in a browser without an active session\n                                return [\n                                    2 /*return*/,\n                                    utils$1.SuperTokens.getInstanceOrThrow().redirectToAuth({\n                                        history: history,\n                                        redirectBack: false,\n                                    }),\n                                ];\n                            }\n                            return [4 /*yield*/, this.validateClaims({ userContext: userContext })];\n                        case 2:\n                            invalidClaims = _a.sent();\n                            invalidClaimRedirectPath = utils.popInvalidClaimRedirectPathFromContext(userContext);\n                            if (!(invalidClaims.length > 0 && invalidClaimRedirectPath !== undefined))\n                                return [3 /*break*/, 5];\n                            if (!(redirectInfo !== undefined)) return [3 /*break*/, 4];\n                            jsonContext = JSON.stringify(redirectInfo);\n                            return [\n                                4 /*yield*/,\n                                utils.setLocalStorage(\"supertokens-success-redirection-context\", jsonContext),\n                            ];\n                        case 3:\n                            _a.sent();\n                            _a.label = 4;\n                        case 4:\n                            // then we do the redirection.\n                            return [\n                                2 /*return*/,\n                                utils$1.SuperTokens.getInstanceOrThrow().redirectToUrl(\n                                    invalidClaimRedirectPath,\n                                    history\n                                ),\n                            ];\n                        case 5:\n                            if (!(redirectInfo === undefined)) return [3 /*break*/, 12];\n                            return [4 /*yield*/, utils.getLocalStorage(\"supertokens-success-redirection-context\")];\n                        case 6:\n                            successContextStr = _a.sent();\n                            if (!(successContextStr !== null)) return [3 /*break*/, 11];\n                            _a.label = 7;\n                        case 7:\n                            _a.trys.push([7, , 8, 10]);\n                            redirectInfo = JSON.parse(successContextStr);\n                            return [3 /*break*/, 10];\n                        case 8:\n                            return [\n                                4 /*yield*/,\n                                utils.removeFromLocalStorage(\"supertokens-success-redirection-context\"),\n                            ];\n                        case 9:\n                            _a.sent();\n                            return [7 /*endfinally*/];\n                        case 10:\n                            return [3 /*break*/, 12];\n                        case 11:\n                            // If there was nothing in localstorage we set a default\n                            // this can happen if the user visited email verification screen without an auth recipe redirecting them there\n                            // but already had the email verified and an active session\n                            redirectInfo = {\n                                rid: Session.RECIPE_ID,\n                                successRedirectContext: {\n                                    action: \"SUCCESS\",\n                                    isNewUser: false,\n                                },\n                            };\n                            _a.label = 12;\n                        case 12:\n                            authRecipeRedirectHandler = this.redirectionHandlersFromAuthRecipes.get(redirectInfo.rid);\n                            if (authRecipeRedirectHandler !== undefined) {\n                                // and call it with the saved info\n                                return [\n                                    2 /*return*/,\n                                    authRecipeRedirectHandler(redirectInfo.successRedirectContext, history),\n                                ];\n                            }\n                            // This should only happen if the configuration changed between saving the context and finishing the sign in process\n                            // or if the user navigated to a page where they were expected to have a stored redirectInfo but didn't\n                            // (e.g.: pressed back after email verification)\n                            return [2 /*return*/, this.redirect(redirectInfo.successRedirectContext, history)];\n                    }\n                });\n            });\n        };\n        /**\n         * This should only get called if validateGlobalClaimsAndHandleSuccessRedirection couldn't get a redirectInfo\n         * @returns \"/\"\n         */\n        _this.getDefaultRedirectionURL = function () {\n            return utils.__awaiter(_this, void 0, void 0, function () {\n                return utils.__generator(this, function (_a) {\n                    return [2 /*return*/, \"/\"];\n                });\n            });\n        };\n        _this.notifyListeners = function (event) {\n            return utils.__awaiter(_this, void 0, void 0, function () {\n                var sessionContext;\n                return utils.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            return [4 /*yield*/, this.getSessionContext(event)];\n                        case 1:\n                            sessionContext = _a.sent();\n                            // We copy this.eventListeners into a new array to \"freeze\" it for the loop\n                            // We do this to avoid an infinite loop in case one of the listeners causes a new listener to be added (e.g.: through re-rendering)\n                            Array.from(this.eventListeners).forEach(function (listener) {\n                                return listener(utils.__assign({ sessionContext: sessionContext }, event));\n                            });\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        return _this;\n    }\n    Session.prototype.getSessionContext = function (_a) {\n        var action = _a.action,\n            userContext = _a.userContext;\n        return utils.__awaiter(this, void 0, void 0, function () {\n            var _b, userId, accessTokenPayload;\n            return utils.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (\n                            !(\n                                action === \"SESSION_CREATED\" ||\n                                action === \"REFRESH_SESSION\" ||\n                                action === \"API_INVALID_CLAIM\" ||\n                                action === \"ACCESS_TOKEN_PAYLOAD_UPDATED\"\n                            )\n                        )\n                            return [3 /*break*/, 2];\n                        return [\n                            4 /*yield*/,\n                            Promise.all([\n                                this.getUserId({\n                                    userContext: userContext,\n                                }),\n                                this.getAccessTokenPayloadSecurely({\n                                    userContext: userContext,\n                                }),\n                            ]),\n                        ];\n                    case 1:\n                        (_b = _c.sent()), (userId = _b[0]), (accessTokenPayload = _b[1]);\n                        return [\n                            2 /*return*/,\n                            {\n                                doesSessionExist: true,\n                                accessTokenPayload: accessTokenPayload,\n                                userId: userId,\n                            },\n                        ];\n                    case 2:\n                        if (action === \"SIGN_OUT\" || action === \"UNAUTHORISED\") {\n                            return [\n                                2 /*return*/,\n                                {\n                                    doesSessionExist: false,\n                                    accessTokenPayload: {},\n                                    userId: \"\",\n                                },\n                            ];\n                        }\n                        throw new Error(\"Unhandled recipe event: \".concat(action));\n                }\n            });\n        });\n    };\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    Session.addAxiosInterceptors = function (axiosInstance, userContext) {\n        return WebJSSessionRecipe__default.default.addAxiosInterceptors(axiosInstance, userContext);\n    };\n    Session.init = function (config) {\n        var _this = this;\n        var normalisedConfig = utils$1.normaliseRecipeModuleConfig(config);\n        return {\n            authReact: function (appInfo, enableDebugLogs) {\n                Session.instance = new Session(\n                    utils.__assign(utils.__assign({}, normalisedConfig), {\n                        appInfo: appInfo,\n                        recipeId: Session.RECIPE_ID,\n                        enableDebugLogs: enableDebugLogs,\n                    })\n                );\n                return Session.instance;\n            },\n            webJS: WebJSSessionRecipe__default.default.init(\n                utils.__assign(utils.__assign({}, normalisedConfig), {\n                    onHandleEvent: function (event) {\n                        if (normalisedConfig.onHandleEvent !== undefined) {\n                            normalisedConfig.onHandleEvent(event);\n                        }\n                        void Session.getInstanceOrThrow().notifyListeners(event);\n                    },\n                    preAPIHook: function (context) {\n                        return utils.__awaiter(_this, void 0, void 0, function () {\n                            var response;\n                            return utils.__generator(this, function (_a) {\n                                response = utils.__assign(utils.__assign({}, context), {\n                                    requestInit: utils.__assign(utils.__assign({}, context.requestInit), {\n                                        headers: utils.__assign(utils.__assign({}, context.requestInit.headers), {\n                                            rid: Session.RECIPE_ID,\n                                        }),\n                                    }),\n                                });\n                                if (normalisedConfig.preAPIHook === undefined) {\n                                    return [2 /*return*/, response];\n                                } else {\n                                    return [2 /*return*/, normalisedConfig.preAPIHook(context)];\n                                }\n                            });\n                        });\n                    },\n                })\n            ),\n        };\n    };\n    Session.getInstanceOrThrow = function () {\n        if (Session.instance === undefined) {\n            throw Error(\n                \"No instance of Session found. Make sure to call the Session.init method. See https://supertokens.io/docs/emailpassword/quick-setup/frontend\"\n            );\n        }\n        return Session.instance;\n    };\n    Session.getInstance = function () {\n        return Session.instance;\n    };\n    Session.reset = function () {\n        if (!utils.isTest()) {\n            return;\n        }\n        Session.instance = undefined;\n        return;\n    };\n    Session.RECIPE_ID = \"session\";\n    return Session;\n})(utils$1.RecipeModule);\n\nexports.Session = Session;\n//# sourceMappingURL=session-shared2.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-auth-react/lib/build/session-shared2.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-auth-react/lib/build/session-shared3.js":
/*!**************************************************************************!*\
  !*** ./node_modules/supertokens-auth-react/lib/build/session-shared3.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ./utils.js */ \"./node_modules/supertokens-auth-react/lib/build/utils.js\");\n__webpack_require__(/*! supertokens-web-js/recipe/session */ \"./node_modules/supertokens-web-js/recipe/session/index.js\");\nvar recipe = __webpack_require__(/*! ./session-shared2.js */ \"./node_modules/supertokens-auth-react/lib/build/session-shared2.js\");\nvar sessionAuth = __webpack_require__(/*! ./session-shared.js */ \"./node_modules/supertokens-auth-react/lib/build/session-shared.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nfunction _interopDefault(e) {\n    return e && e.__esModule ? e : { default: e };\n}\n\nvar React__default = /*#__PURE__*/ _interopDefault(React);\n\nvar useSessionContext$1 = function () {\n    var ctx = React__default.default.useContext(sessionAuth.SessionContext);\n    if (ctx.isDefault === true) {\n        throw new Error(\"Cannot use useSessionContext outside auth wrapper components.\");\n    }\n    return ctx;\n};\n\nvar useClaimValue$1 = function (claim) {\n    var ctx = useSessionContext$1();\n    if (ctx.loading) {\n        return {\n            loading: true,\n        };\n    }\n    if (ctx.doesSessionExist === false) {\n        return {\n            loading: false,\n            doesSessionExist: false,\n            value: undefined,\n        };\n    }\n    return {\n        loading: false,\n        doesSessionExist: true,\n        value: claim.getValueFromPayload(ctx.accessTokenPayload),\n    };\n};\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar SessionAPIWrapper = /** @class */ (function () {\n    function SessionAPIWrapper() {}\n    SessionAPIWrapper.init = function (config) {\n        return recipe.Session.init(config);\n    };\n    SessionAPIWrapper.getUserId = function (input) {\n        return utils.__awaiter(this, void 0, void 0, function () {\n            return utils.__generator(this, function (_a) {\n                return [\n                    2 /*return*/,\n                    recipe.Session.getInstanceOrThrow().getUserId({\n                        userContext: utils.getNormalisedUserContext(\n                            input === null || input === void 0 ? void 0 : input.userContext\n                        ),\n                    }),\n                ];\n            });\n        });\n    };\n    SessionAPIWrapper.getAccessToken = function (input) {\n        return utils.__awaiter(this, void 0, void 0, function () {\n            return utils.__generator(this, function (_a) {\n                return [\n                    2 /*return*/,\n                    recipe.Session.getInstanceOrThrow().getAccessToken({\n                        userContext: utils.getNormalisedUserContext(\n                            input === null || input === void 0 ? void 0 : input.userContext\n                        ),\n                    }),\n                ];\n            });\n        });\n    };\n    SessionAPIWrapper.getAccessTokenPayloadSecurely = function (input) {\n        return utils.__awaiter(this, void 0, void 0, function () {\n            return utils.__generator(this, function (_a) {\n                return [\n                    2 /*return*/,\n                    recipe.Session.getInstanceOrThrow().getAccessTokenPayloadSecurely({\n                        userContext: utils.getNormalisedUserContext(\n                            input === null || input === void 0 ? void 0 : input.userContext\n                        ),\n                    }),\n                ];\n            });\n        });\n    };\n    SessionAPIWrapper.attemptRefreshingSession = function () {\n        return utils.__awaiter(this, void 0, void 0, function () {\n            return utils.__generator(this, function (_a) {\n                return [2 /*return*/, recipe.Session.getInstanceOrThrow().attemptRefreshingSession()];\n            });\n        });\n    };\n    SessionAPIWrapper.doesSessionExist = function (input) {\n        return utils.__awaiter(this, void 0, void 0, function () {\n            return utils.__generator(this, function (_a) {\n                return [\n                    2 /*return*/,\n                    recipe.Session.getInstanceOrThrow().doesSessionExist({\n                        userContext: utils.getNormalisedUserContext(\n                            input === null || input === void 0 ? void 0 : input.userContext\n                        ),\n                    }),\n                ];\n            });\n        });\n    };\n    /**\n     * @deprecated\n     */\n    SessionAPIWrapper.addAxiosInterceptors = function (axiosInstance, userContext) {\n        return recipe.Session.addAxiosInterceptors(axiosInstance, utils.getNormalisedUserContext(userContext));\n    };\n    SessionAPIWrapper.signOut = function (input) {\n        return utils.__awaiter(this, void 0, void 0, function () {\n            return utils.__generator(this, function (_a) {\n                return [\n                    2 /*return*/,\n                    recipe.Session.getInstanceOrThrow().signOut({\n                        userContext: utils.getNormalisedUserContext(\n                            input === null || input === void 0 ? void 0 : input.userContext\n                        ),\n                    }),\n                ];\n            });\n        });\n    };\n    SessionAPIWrapper.validateClaims = function (input) {\n        return recipe.Session.getInstanceOrThrow().validateClaims({\n            overrideGlobalClaimValidators:\n                input === null || input === void 0 ? void 0 : input.overrideGlobalClaimValidators,\n            userContext: utils.getNormalisedUserContext(\n                input === null || input === void 0 ? void 0 : input.userContext\n            ),\n        });\n    };\n    SessionAPIWrapper.getInvalidClaimsFromResponse = function (input) {\n        return recipe.Session.getInstanceOrThrow().getInvalidClaimsFromResponse(input);\n    };\n    SessionAPIWrapper.getClaimValue = function (input) {\n        return recipe.Session.getInstanceOrThrow().getClaimValue({\n            claim: input.claim,\n            userContext: utils.getNormalisedUserContext(\n                input === null || input === void 0 ? void 0 : input.userContext\n            ),\n        });\n    };\n    SessionAPIWrapper.useSessionContext = useSessionContext$1;\n    SessionAPIWrapper.useClaimValue = useClaimValue$1;\n    SessionAPIWrapper.SessionAuth = sessionAuth.SessionAuthWrapper;\n    return SessionAPIWrapper;\n})();\nvar useSessionContext = SessionAPIWrapper.useSessionContext;\nvar useClaimValue = SessionAPIWrapper.useClaimValue;\nvar SessionAuth = SessionAPIWrapper.SessionAuth;\nvar init = SessionAPIWrapper.init;\nvar getUserId = SessionAPIWrapper.getUserId;\nvar getAccessToken = SessionAPIWrapper.getAccessToken;\nvar getAccessTokenPayloadSecurely = SessionAPIWrapper.getAccessTokenPayloadSecurely;\nvar attemptRefreshingSession = SessionAPIWrapper.attemptRefreshingSession;\nvar doesSessionExist = SessionAPIWrapper.doesSessionExist;\n/**\n * @deprecated\n */\nvar addAxiosInterceptors = SessionAPIWrapper.addAxiosInterceptors;\nvar signOut = SessionAPIWrapper.signOut;\nvar validateClaims = SessionAPIWrapper.validateClaims;\nvar getInvalidClaimsFromResponse = SessionAPIWrapper.getInvalidClaimsFromResponse;\nvar getClaimValue = SessionAPIWrapper.getClaimValue;\n\nexports.SessionAPIWrapper = SessionAPIWrapper;\nexports.SessionAuth = SessionAuth;\nexports.addAxiosInterceptors = addAxiosInterceptors;\nexports.attemptRefreshingSession = attemptRefreshingSession;\nexports.doesSessionExist = doesSessionExist;\nexports.getAccessToken = getAccessToken;\nexports.getAccessTokenPayloadSecurely = getAccessTokenPayloadSecurely;\nexports.getClaimValue = getClaimValue;\nexports.getInvalidClaimsFromResponse = getInvalidClaimsFromResponse;\nexports.getUserId = getUserId;\nexports.init = init;\nexports.signOut = signOut;\nexports.useClaimValue = useClaimValue;\nexports.useSessionContext = useSessionContext$1;\nexports.useSessionContext$1 = useSessionContext;\nexports.validateClaims = validateClaims;\n//# sourceMappingURL=session-shared3.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-auth-react/lib/build/session-shared3.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-auth-react/lib/build/session.js":
/*!******************************************************************!*\
  !*** ./node_modules/supertokens-auth-react/lib/build/session.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n__webpack_require__(/*! ./utils.js */ \"./node_modules/supertokens-auth-react/lib/build/utils.js\");\nvar WebJSSessionRecipe = __webpack_require__(/*! supertokens-web-js/recipe/session */ \"./node_modules/supertokens-web-js/recipe/session/index.js\");\n__webpack_require__(/*! ./session-shared2.js */ \"./node_modules/supertokens-auth-react/lib/build/session-shared2.js\");\nvar sessionAuth = __webpack_require__(/*! ./session-shared.js */ \"./node_modules/supertokens-auth-react/lib/build/session-shared.js\");\nvar session = __webpack_require__(/*! ./session-shared3.js */ \"./node_modules/supertokens-auth-react/lib/build/session-shared3.js\");\n__webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n__webpack_require__(/*! supertokens-web-js/utils/cookieHandler */ \"./node_modules/supertokens-web-js/utils/cookieHandler/index.js\");\n__webpack_require__(/*! supertokens-web-js/utils/normalisedURLDomain */ \"./node_modules/supertokens-web-js/utils/normalisedURLDomain.js\");\n__webpack_require__(/*! supertokens-web-js/utils/normalisedURLPath */ \"./node_modules/supertokens-web-js/utils/normalisedURLPath.js\");\n__webpack_require__(/*! supertokens-web-js/utils/windowHandler */ \"./node_modules/supertokens-web-js/utils/windowHandler/index.js\");\n__webpack_require__(/*! ./recipeModule-shared.js */ \"./node_modules/supertokens-auth-react/lib/build/recipeModule-shared.js\");\n__webpack_require__(/*! supertokens-web-js */ \"./node_modules/supertokens-web-js/index.js\");\n__webpack_require__(/*! supertokens-web-js/utils/postSuperTokensInitCallbacks */ \"./node_modules/supertokens-web-js/utils/postSuperTokensInitCallbacks.js\");\n__webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n__webpack_require__(/*! ./index2.js */ \"./node_modules/supertokens-auth-react/lib/build/index2.js\");\n\nObject.defineProperty(exports, \"BooleanClaim\", ({\n    enumerable: true,\n    get: function () {\n        return WebJSSessionRecipe.BooleanClaim;\n    },\n}));\nObject.defineProperty(exports, \"PrimitiveArrayClaim\", ({\n    enumerable: true,\n    get: function () {\n        return WebJSSessionRecipe.PrimitiveArrayClaim;\n    },\n}));\nObject.defineProperty(exports, \"PrimitiveClaim\", ({\n    enumerable: true,\n    get: function () {\n        return WebJSSessionRecipe.PrimitiveClaim;\n    },\n}));\nObject.defineProperty(exports, \"SessionClaimValidator\", ({\n    enumerable: true,\n    get: function () {\n        return WebJSSessionRecipe.SessionClaimValidator;\n    },\n}));\nexports.SessionContext = sessionAuth.SessionContext;\nexports.SessionAuth = session.SessionAuth;\nexports.addAxiosInterceptors = session.addAxiosInterceptors;\nexports.attemptRefreshingSession = session.attemptRefreshingSession;\nexports[\"default\"] = session.SessionAPIWrapper;\nexports.doesSessionExist = session.doesSessionExist;\nexports.getAccessToken = session.getAccessToken;\nexports.getAccessTokenPayloadSecurely = session.getAccessTokenPayloadSecurely;\nexports.getClaimValue = session.getClaimValue;\nexports.getInvalidClaimsFromResponse = session.getInvalidClaimsFromResponse;\nexports.getUserId = session.getUserId;\nexports.init = session.init;\nexports.signOut = session.signOut;\nexports.useClaimValue = session.useClaimValue;\nexports.useSessionContext = session.useSessionContext$1;\nexports.validateClaims = session.validateClaims;\n//# sourceMappingURL=session.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtYXV0aC1yZWFjdC9saWIvYnVpbGQvc2Vzc2lvbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELG1CQUFPLENBQUMsNEVBQVk7QUFDcEIseUJBQXlCLG1CQUFPLENBQUMsb0dBQW1DO0FBQ3BFLG1CQUFPLENBQUMsZ0dBQXNCO0FBQzlCLGtCQUFrQixtQkFBTyxDQUFDLDhGQUFxQjtBQUMvQyxjQUFjLG1CQUFPLENBQUMsZ0dBQXNCO0FBQzVDLG1CQUFPLENBQUMsNENBQU87QUFDZixtQkFBTyxDQUFDLDhHQUF3QztBQUNoRCxtQkFBTyxDQUFDLG9IQUE4QztBQUN0RCxtQkFBTyxDQUFDLGdIQUE0QztBQUNwRCxtQkFBTyxDQUFDLDhHQUF3QztBQUNoRCxtQkFBTyxDQUFDLHdHQUEwQjtBQUNsQyxtQkFBTyxDQUFDLHNFQUFvQjtBQUM1QixtQkFBTyxDQUFDLHNJQUF1RDtBQUMvRCxtQkFBTyxDQUFDLDhEQUFtQjtBQUMzQixtQkFBTyxDQUFDLDhFQUFhOztBQUVyQixnREFBK0M7QUFDL0M7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLENBQUMsRUFBQztBQUNGLHVEQUFzRDtBQUN0RDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsQ0FBQyxFQUFDO0FBQ0Ysa0RBQWlEO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxDQUFDLEVBQUM7QUFDRix5REFBd0Q7QUFDeEQ7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLENBQUMsRUFBQztBQUNGLHNCQUFzQjtBQUN0QixtQkFBbUI7QUFDbkIsNEJBQTRCO0FBQzVCLGdDQUFnQztBQUNoQyxrQkFBZTtBQUNmLHdCQUF3QjtBQUN4QixzQkFBc0I7QUFDdEIscUNBQXFDO0FBQ3JDLHFCQUFxQjtBQUNyQixvQ0FBb0M7QUFDcEMsaUJBQWlCO0FBQ2pCLFlBQVk7QUFDWixlQUFlO0FBQ2YscUJBQXFCO0FBQ3JCLHlCQUF5QjtBQUN6QixzQkFBc0I7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1cGVydG9rZW5zLWF1dGgtcmVhY3QvbGliL2J1aWxkL3Nlc3Npb24uanM/NDZiZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5yZXF1aXJlKFwiLi91dGlscy5qc1wiKTtcbnZhciBXZWJKU1Nlc3Npb25SZWNpcGUgPSByZXF1aXJlKFwic3VwZXJ0b2tlbnMtd2ViLWpzL3JlY2lwZS9zZXNzaW9uXCIpO1xucmVxdWlyZShcIi4vc2Vzc2lvbi1zaGFyZWQyLmpzXCIpO1xudmFyIHNlc3Npb25BdXRoID0gcmVxdWlyZShcIi4vc2Vzc2lvbi1zaGFyZWQuanNcIik7XG52YXIgc2Vzc2lvbiA9IHJlcXVpcmUoXCIuL3Nlc3Npb24tc2hhcmVkMy5qc1wiKTtcbnJlcXVpcmUoXCJyZWFjdFwiKTtcbnJlcXVpcmUoXCJzdXBlcnRva2Vucy13ZWItanMvdXRpbHMvY29va2llSGFuZGxlclwiKTtcbnJlcXVpcmUoXCJzdXBlcnRva2Vucy13ZWItanMvdXRpbHMvbm9ybWFsaXNlZFVSTERvbWFpblwiKTtcbnJlcXVpcmUoXCJzdXBlcnRva2Vucy13ZWItanMvdXRpbHMvbm9ybWFsaXNlZFVSTFBhdGhcIik7XG5yZXF1aXJlKFwic3VwZXJ0b2tlbnMtd2ViLWpzL3V0aWxzL3dpbmRvd0hhbmRsZXJcIik7XG5yZXF1aXJlKFwiLi9yZWNpcGVNb2R1bGUtc2hhcmVkLmpzXCIpO1xucmVxdWlyZShcInN1cGVydG9rZW5zLXdlYi1qc1wiKTtcbnJlcXVpcmUoXCJzdXBlcnRva2Vucy13ZWItanMvdXRpbHMvcG9zdFN1cGVyVG9rZW5zSW5pdENhbGxiYWNrc1wiKTtcbnJlcXVpcmUoXCJyZWFjdC9qc3gtcnVudGltZVwiKTtcbnJlcXVpcmUoXCIuL2luZGV4Mi5qc1wiKTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQm9vbGVhbkNsYWltXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gV2ViSlNTZXNzaW9uUmVjaXBlLkJvb2xlYW5DbGFpbTtcbiAgICB9LFxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQcmltaXRpdmVBcnJheUNsYWltXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gV2ViSlNTZXNzaW9uUmVjaXBlLlByaW1pdGl2ZUFycmF5Q2xhaW07XG4gICAgfSxcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUHJpbWl0aXZlQ2xhaW1cIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBXZWJKU1Nlc3Npb25SZWNpcGUuUHJpbWl0aXZlQ2xhaW07XG4gICAgfSxcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2Vzc2lvbkNsYWltVmFsaWRhdG9yXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gV2ViSlNTZXNzaW9uUmVjaXBlLlNlc3Npb25DbGFpbVZhbGlkYXRvcjtcbiAgICB9LFxufSk7XG5leHBvcnRzLlNlc3Npb25Db250ZXh0ID0gc2Vzc2lvbkF1dGguU2Vzc2lvbkNvbnRleHQ7XG5leHBvcnRzLlNlc3Npb25BdXRoID0gc2Vzc2lvbi5TZXNzaW9uQXV0aDtcbmV4cG9ydHMuYWRkQXhpb3NJbnRlcmNlcHRvcnMgPSBzZXNzaW9uLmFkZEF4aW9zSW50ZXJjZXB0b3JzO1xuZXhwb3J0cy5hdHRlbXB0UmVmcmVzaGluZ1Nlc3Npb24gPSBzZXNzaW9uLmF0dGVtcHRSZWZyZXNoaW5nU2Vzc2lvbjtcbmV4cG9ydHMuZGVmYXVsdCA9IHNlc3Npb24uU2Vzc2lvbkFQSVdyYXBwZXI7XG5leHBvcnRzLmRvZXNTZXNzaW9uRXhpc3QgPSBzZXNzaW9uLmRvZXNTZXNzaW9uRXhpc3Q7XG5leHBvcnRzLmdldEFjY2Vzc1Rva2VuID0gc2Vzc2lvbi5nZXRBY2Nlc3NUb2tlbjtcbmV4cG9ydHMuZ2V0QWNjZXNzVG9rZW5QYXlsb2FkU2VjdXJlbHkgPSBzZXNzaW9uLmdldEFjY2Vzc1Rva2VuUGF5bG9hZFNlY3VyZWx5O1xuZXhwb3J0cy5nZXRDbGFpbVZhbHVlID0gc2Vzc2lvbi5nZXRDbGFpbVZhbHVlO1xuZXhwb3J0cy5nZXRJbnZhbGlkQ2xhaW1zRnJvbVJlc3BvbnNlID0gc2Vzc2lvbi5nZXRJbnZhbGlkQ2xhaW1zRnJvbVJlc3BvbnNlO1xuZXhwb3J0cy5nZXRVc2VySWQgPSBzZXNzaW9uLmdldFVzZXJJZDtcbmV4cG9ydHMuaW5pdCA9IHNlc3Npb24uaW5pdDtcbmV4cG9ydHMuc2lnbk91dCA9IHNlc3Npb24uc2lnbk91dDtcbmV4cG9ydHMudXNlQ2xhaW1WYWx1ZSA9IHNlc3Npb24udXNlQ2xhaW1WYWx1ZTtcbmV4cG9ydHMudXNlU2Vzc2lvbkNvbnRleHQgPSBzZXNzaW9uLnVzZVNlc3Npb25Db250ZXh0JDE7XG5leHBvcnRzLnZhbGlkYXRlQ2xhaW1zID0gc2Vzc2lvbi52YWxpZGF0ZUNsYWltcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlc3Npb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/supertokens-auth-react/lib/build/session.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-auth-react/lib/build/translationContext.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/supertokens-auth-react/lib/build/translationContext.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar utils = __webpack_require__(/*! ./utils.js */ \"./node_modules/supertokens-auth-react/lib/build/utils.js\");\nvar jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar utils$1 = __webpack_require__(/*! ./recipeModule-shared.js */ \"./node_modules/supertokens-auth-react/lib/build/recipeModule-shared.js\");\n\nfunction _interopDefault(e) {\n    return e && e.__esModule ? e : { default: e };\n}\n\nvar React__default = /*#__PURE__*/ _interopDefault(React);\n\nvar errCB = function () {\n    throw new Error(\"Cannot use translation func outside TranslationContext provider.\");\n};\nvar TranslationContext = React__default.default.createContext({\n    translate: errCB,\n});\nvar useTranslation = function () {\n    return React.useContext(TranslationContext).translate;\n};\nvar TranslationContextProvider = function (_a) {\n    var children = _a.children,\n        defaultLanguage = _a.defaultLanguage,\n        userTranslationFunc = _a.userTranslationFunc,\n        defaultStore = _a.defaultStore,\n        translationControlEventSource = _a.translationControlEventSource;\n    var _b = React.useState(defaultStore),\n        translationStore = _b[0],\n        setTranslationStore = _b[1];\n    var _c = React.useState(undefined),\n        currentLanguage = _c[0],\n        setCurrentLanguage = _c[1];\n    React.useEffect(\n        function () {\n            function loadLanguageFromCookies() {\n                return utils.__awaiter(this, void 0, void 0, function () {\n                    var cookieLang, cookieLangTemp;\n                    return utils.__generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                return [4 /*yield*/, utils$1.getCurrentLanguageFromCookie()];\n                            case 1:\n                                cookieLang = _a.sent();\n                                cookieLangTemp = cookieLang === null ? defaultLanguage : cookieLang;\n                                /**\n                                 * If current is not undefined, it means that something else has set the language.\n                                 * For example if the user calls SuperTokens.changeLanguage before this\n                                 *\n                                 * We want to use the language preference from cookies only if something else has\n                                 * not set language before this\n                                 */\n                                setCurrentLanguage(function (current) {\n                                    return current !== undefined ? current : cookieLangTemp;\n                                });\n                                return [2 /*return*/];\n                        }\n                    });\n                });\n            }\n            void loadLanguageFromCookies();\n        },\n        [defaultLanguage, setCurrentLanguage]\n    );\n    React.useEffect(function () {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        var changeHandler = function (_eventName, detail) {\n            setCurrentLanguage(detail);\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        var loadHandler = function (_eventName, detail) {\n            setTranslationStore(function (os) {\n                return utils.mergeObjects(os, detail);\n            });\n        };\n        translationControlEventSource.on(\"LanguageChange\", changeHandler);\n        translationControlEventSource.on(\"TranslationLoaded\", loadHandler);\n        return function () {\n            translationControlEventSource.off(\"LanguageChange\", changeHandler);\n            translationControlEventSource.off(\"TranslationLoaded\", loadHandler);\n        };\n    });\n    var translateFunc = React.useCallback(\n        function (key) {\n            if (userTranslationFunc !== undefined) {\n                return userTranslationFunc(key);\n            }\n            if (currentLanguage !== undefined) {\n                var res = translationStore[currentLanguage] && translationStore[currentLanguage][key];\n                var fallback = translationStore[defaultLanguage] && translationStore[defaultLanguage][key];\n                if (res === undefined) {\n                    if (fallback !== undefined) {\n                        return fallback;\n                    }\n                    return key;\n                }\n                return res;\n            }\n            throw new Error(\"Should never come here\");\n        },\n        [translationStore, currentLanguage, defaultLanguage, userTranslationFunc]\n    );\n    if (currentLanguage === undefined) {\n        return null;\n    }\n    return jsxRuntime.jsx(\n        TranslationContext.Provider,\n        utils.__assign({ value: { translate: translateFunc } }, { children: children })\n    );\n};\n\nexports.TranslationContextProvider = TranslationContextProvider;\nexports.useTranslation = useTranslation;\n//# sourceMappingURL=translationContext.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtYXV0aC1yZWFjdC9saWIvYnVpbGQvdHJhbnNsYXRpb25Db250ZXh0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyw0RUFBWTtBQUNoQyxpQkFBaUIsbUJBQU8sQ0FBQyw4REFBbUI7QUFDNUMsWUFBWSxtQkFBTyxDQUFDLDRDQUFPO0FBQzNCLGNBQWMsbUJBQU8sQ0FBQyx3R0FBMEI7O0FBRWhEO0FBQ0EscUNBQXFDO0FBQ3JDOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFNBQVMsNEJBQTRCLElBQUksb0JBQW9CO0FBQ3RGO0FBQ0E7O0FBRUEsa0NBQWtDO0FBQ2xDLHNCQUFzQjtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtYXV0aC1yZWFjdC9saWIvYnVpbGQvdHJhbnNsYXRpb25Db250ZXh0LmpzPzA2NDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xudmFyIGpzeFJ1bnRpbWUgPSByZXF1aXJlKFwicmVhY3QvanN4LXJ1bnRpbWVcIik7XG52YXIgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG52YXIgdXRpbHMkMSA9IHJlcXVpcmUoXCIuL3JlY2lwZU1vZHVsZS1zaGFyZWQuanNcIik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wRGVmYXVsdChlKSB7XG4gICAgcmV0dXJuIGUgJiYgZS5fX2VzTW9kdWxlID8gZSA6IHsgZGVmYXVsdDogZSB9O1xufVxuXG52YXIgUmVhY3RfX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovIF9pbnRlcm9wRGVmYXVsdChSZWFjdCk7XG5cbnZhciBlcnJDQiA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgdXNlIHRyYW5zbGF0aW9uIGZ1bmMgb3V0c2lkZSBUcmFuc2xhdGlvbkNvbnRleHQgcHJvdmlkZXIuXCIpO1xufTtcbnZhciBUcmFuc2xhdGlvbkNvbnRleHQgPSBSZWFjdF9fZGVmYXVsdC5kZWZhdWx0LmNyZWF0ZUNvbnRleHQoe1xuICAgIHRyYW5zbGF0ZTogZXJyQ0IsXG59KTtcbnZhciB1c2VUcmFuc2xhdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gUmVhY3QudXNlQ29udGV4dChUcmFuc2xhdGlvbkNvbnRleHQpLnRyYW5zbGF0ZTtcbn07XG52YXIgVHJhbnNsYXRpb25Db250ZXh0UHJvdmlkZXIgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSBfYS5jaGlsZHJlbixcbiAgICAgICAgZGVmYXVsdExhbmd1YWdlID0gX2EuZGVmYXVsdExhbmd1YWdlLFxuICAgICAgICB1c2VyVHJhbnNsYXRpb25GdW5jID0gX2EudXNlclRyYW5zbGF0aW9uRnVuYyxcbiAgICAgICAgZGVmYXVsdFN0b3JlID0gX2EuZGVmYXVsdFN0b3JlLFxuICAgICAgICB0cmFuc2xhdGlvbkNvbnRyb2xFdmVudFNvdXJjZSA9IF9hLnRyYW5zbGF0aW9uQ29udHJvbEV2ZW50U291cmNlO1xuICAgIHZhciBfYiA9IFJlYWN0LnVzZVN0YXRlKGRlZmF1bHRTdG9yZSksXG4gICAgICAgIHRyYW5zbGF0aW9uU3RvcmUgPSBfYlswXSxcbiAgICAgICAgc2V0VHJhbnNsYXRpb25TdG9yZSA9IF9iWzFdO1xuICAgIHZhciBfYyA9IFJlYWN0LnVzZVN0YXRlKHVuZGVmaW5lZCksXG4gICAgICAgIGN1cnJlbnRMYW5ndWFnZSA9IF9jWzBdLFxuICAgICAgICBzZXRDdXJyZW50TGFuZ3VhZ2UgPSBfY1sxXTtcbiAgICBSZWFjdC51c2VFZmZlY3QoXG4gICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGZ1bmN0aW9uIGxvYWRMYW5ndWFnZUZyb21Db29raWVzKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB1dGlscy5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNvb2tpZUxhbmcsIGNvb2tpZUxhbmdUZW1wO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdXRpbHMuX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCB1dGlscyQxLmdldEN1cnJlbnRMYW5ndWFnZUZyb21Db29raWUoKV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb29raWVMYW5nID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb29raWVMYW5nVGVtcCA9IGNvb2tpZUxhbmcgPT09IG51bGwgPyBkZWZhdWx0TGFuZ3VhZ2UgOiBjb29raWVMYW5nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICogSWYgY3VycmVudCBpcyBub3QgdW5kZWZpbmVkLCBpdCBtZWFucyB0aGF0IHNvbWV0aGluZyBlbHNlIGhhcyBzZXQgdGhlIGxhbmd1YWdlLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKiBGb3IgZXhhbXBsZSBpZiB0aGUgdXNlciBjYWxscyBTdXBlclRva2Vucy5jaGFuZ2VMYW5ndWFnZSBiZWZvcmUgdGhpc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKiBXZSB3YW50IHRvIHVzZSB0aGUgbGFuZ3VhZ2UgcHJlZmVyZW5jZSBmcm9tIGNvb2tpZXMgb25seSBpZiBzb21ldGhpbmcgZWxzZSBoYXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICogbm90IHNldCBsYW5ndWFnZSBiZWZvcmUgdGhpc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0Q3VycmVudExhbmd1YWdlKGZ1bmN0aW9uIChjdXJyZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3VycmVudCAhPT0gdW5kZWZpbmVkID8gY3VycmVudCA6IGNvb2tpZUxhbmdUZW1wO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZvaWQgbG9hZExhbmd1YWdlRnJvbUNvb2tpZXMoKTtcbiAgICAgICAgfSxcbiAgICAgICAgW2RlZmF1bHRMYW5ndWFnZSwgc2V0Q3VycmVudExhbmd1YWdlXVxuICAgICk7XG4gICAgUmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuICAgICAgICB2YXIgY2hhbmdlSGFuZGxlciA9IGZ1bmN0aW9uIChfZXZlbnROYW1lLCBkZXRhaWwpIHtcbiAgICAgICAgICAgIHNldEN1cnJlbnRMYW5ndWFnZShkZXRhaWwpO1xuICAgICAgICB9O1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXG4gICAgICAgIHZhciBsb2FkSGFuZGxlciA9IGZ1bmN0aW9uIChfZXZlbnROYW1lLCBkZXRhaWwpIHtcbiAgICAgICAgICAgIHNldFRyYW5zbGF0aW9uU3RvcmUoZnVuY3Rpb24gKG9zKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHV0aWxzLm1lcmdlT2JqZWN0cyhvcywgZGV0YWlsKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICB0cmFuc2xhdGlvbkNvbnRyb2xFdmVudFNvdXJjZS5vbihcIkxhbmd1YWdlQ2hhbmdlXCIsIGNoYW5nZUhhbmRsZXIpO1xuICAgICAgICB0cmFuc2xhdGlvbkNvbnRyb2xFdmVudFNvdXJjZS5vbihcIlRyYW5zbGF0aW9uTG9hZGVkXCIsIGxvYWRIYW5kbGVyKTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRyYW5zbGF0aW9uQ29udHJvbEV2ZW50U291cmNlLm9mZihcIkxhbmd1YWdlQ2hhbmdlXCIsIGNoYW5nZUhhbmRsZXIpO1xuICAgICAgICAgICAgdHJhbnNsYXRpb25Db250cm9sRXZlbnRTb3VyY2Uub2ZmKFwiVHJhbnNsYXRpb25Mb2FkZWRcIiwgbG9hZEhhbmRsZXIpO1xuICAgICAgICB9O1xuICAgIH0pO1xuICAgIHZhciB0cmFuc2xhdGVGdW5jID0gUmVhY3QudXNlQ2FsbGJhY2soXG4gICAgICAgIGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICAgIGlmICh1c2VyVHJhbnNsYXRpb25GdW5jICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdXNlclRyYW5zbGF0aW9uRnVuYyhrZXkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGN1cnJlbnRMYW5ndWFnZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlcyA9IHRyYW5zbGF0aW9uU3RvcmVbY3VycmVudExhbmd1YWdlXSAmJiB0cmFuc2xhdGlvblN0b3JlW2N1cnJlbnRMYW5ndWFnZV1ba2V5XTtcbiAgICAgICAgICAgICAgICB2YXIgZmFsbGJhY2sgPSB0cmFuc2xhdGlvblN0b3JlW2RlZmF1bHRMYW5ndWFnZV0gJiYgdHJhbnNsYXRpb25TdG9yZVtkZWZhdWx0TGFuZ3VhZ2VdW2tleV07XG4gICAgICAgICAgICAgICAgaWYgKHJlcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChmYWxsYmFjayAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsbGJhY2s7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGtleTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlNob3VsZCBuZXZlciBjb21lIGhlcmVcIik7XG4gICAgICAgIH0sXG4gICAgICAgIFt0cmFuc2xhdGlvblN0b3JlLCBjdXJyZW50TGFuZ3VhZ2UsIGRlZmF1bHRMYW5ndWFnZSwgdXNlclRyYW5zbGF0aW9uRnVuY11cbiAgICApO1xuICAgIGlmIChjdXJyZW50TGFuZ3VhZ2UgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGpzeFJ1bnRpbWUuanN4KFxuICAgICAgICBUcmFuc2xhdGlvbkNvbnRleHQuUHJvdmlkZXIsXG4gICAgICAgIHV0aWxzLl9fYXNzaWduKHsgdmFsdWU6IHsgdHJhbnNsYXRlOiB0cmFuc2xhdGVGdW5jIH0gfSwgeyBjaGlsZHJlbjogY2hpbGRyZW4gfSlcbiAgICApO1xufTtcblxuZXhwb3J0cy5UcmFuc2xhdGlvbkNvbnRleHRQcm92aWRlciA9IFRyYW5zbGF0aW9uQ29udGV4dFByb3ZpZGVyO1xuZXhwb3J0cy51c2VUcmFuc2xhdGlvbiA9IHVzZVRyYW5zbGF0aW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhbnNsYXRpb25Db250ZXh0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/supertokens-auth-react/lib/build/translationContext.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-auth-react/lib/build/utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/supertokens-auth-react/lib/build/utils.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar cookieHandler = __webpack_require__(/*! supertokens-web-js/utils/cookieHandler */ \"./node_modules/supertokens-web-js/utils/cookieHandler/index.js\");\nvar NormalisedURLDomain = __webpack_require__(/*! supertokens-web-js/utils/normalisedURLDomain */ \"./node_modules/supertokens-web-js/utils/normalisedURLDomain.js\");\nvar NormalisedURLPath = __webpack_require__(/*! supertokens-web-js/utils/normalisedURLPath */ \"./node_modules/supertokens-web-js/utils/normalisedURLPath.js\");\nvar windowHandler = __webpack_require__(/*! supertokens-web-js/utils/windowHandler */ \"./node_modules/supertokens-web-js/utils/windowHandler/index.js\");\n\nfunction _interopDefault(e) {\n    return e && e.__esModule ? e : { default: e };\n}\n\nvar NormalisedURLDomain__default = /*#__PURE__*/ _interopDefault(NormalisedURLDomain);\nvar NormalisedURLPath__default = /*#__PURE__*/ _interopDefault(NormalisedURLPath);\n\n/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n    extendStatics =\n        Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array &&\n            function (d, b) {\n                d.__proto__ = b;\n            }) ||\n        function (d, b) {\n            for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n    return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n    if (typeof b !== \"function\" && b !== null)\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());\n}\n\nexports.__assign = function () {\n    exports.__assign =\n        Object.assign ||\n        function __assign(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n            }\n            return t;\n        };\n    return exports.__assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n        }\n    return t;\n}\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P\n            ? value\n            : new P(function (resolve) {\n                  resolve(value);\n              });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\n\nfunction __generator(thisArg, body) {\n    var _ = {\n            label: 0,\n            sent: function () {\n                if (t[0] & 1) throw t[1];\n                return t[1];\n            },\n            trys: [],\n            ops: [],\n        },\n        f,\n        y,\n        t,\n        g;\n    return (\n        (g = { next: verb(0), throw: verb(1), return: verb(2) }),\n        typeof Symbol === \"function\" &&\n            (g[Symbol.iterator] = function () {\n                return this;\n            }),\n        g\n    );\n    function verb(n) {\n        return function (v) {\n            return step([n, v]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while ((g && ((g = 0), op[0] && (_ = 0)), _))\n            try {\n                if (\n                    ((f = 1),\n                    y &&\n                        (t =\n                            op[0] & 2\n                                ? y[\"return\"]\n                                : op[0]\n                                ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0)\n                                : y.next) &&\n                        !(t = t.call(y, op[1])).done)\n                )\n                    return t;\n                if (((y = 0), t)) op = [op[0] & 2, t.value];\n                switch (op[0]) {\n                    case 0:\n                    case 1:\n                        t = op;\n                        break;\n                    case 4:\n                        _.label++;\n                        return { value: op[1], done: false };\n                    case 5:\n                        _.label++;\n                        y = op[1];\n                        op = [0];\n                        continue;\n                    case 7:\n                        op = _.ops.pop();\n                        _.trys.pop();\n                        continue;\n                    default:\n                        if (!((t = _.trys), (t = t.length > 0 && t[t.length - 1])) && (op[0] === 6 || op[0] === 2)) {\n                            _ = 0;\n                            continue;\n                        }\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                            _.label = op[1];\n                            break;\n                        }\n                        if (op[0] === 6 && _.label < t[1]) {\n                            _.label = t[1];\n                            t = op;\n                            break;\n                        }\n                        if (t && _.label < t[2]) {\n                            _.label = t[2];\n                            _.ops.push(op);\n                            break;\n                        }\n                        if (t[2]) _.ops.pop();\n                        _.trys.pop();\n                        continue;\n                }\n                op = body.call(thisArg, _);\n            } catch (e) {\n                op = [6, e];\n                y = 0;\n            } finally {\n                f = t = 0;\n            }\n        if (op[0] & 5) throw op[1];\n        return { value: op[0] ? op[1] : void 0, done: true };\n    }\n}\n\nfunction __spreadArray(to, from, pack) {\n    if (pack || arguments.length === 2)\n        for (var i = 0, l = from.length, ar; i < l; i++) {\n            if (ar || !(i in from)) {\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n                ar[i] = from[i];\n            }\n        }\n    return to.concat(ar || Array.prototype.slice.call(from));\n}\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n/*\n * Consts.\n */\nvar RECIPE_ID_QUERY_PARAM = \"rid\";\nvar DEFAULT_API_BASE_PATH = \"/auth\";\nvar DEFAULT_WEBSITE_BASE_PATH = \"/auth\";\nvar ST_ROOT_ID = \"supertokens-root\";\nvar SSR_ERROR =\n    \"\\nIf you are trying to use this method doing server-side-rendering, please make sure you move this method inside a componentDidMount method or useEffect hook.\";\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n/*\n * getRecipeIdFromPath\n * Input:\n * Output: The \"rid\" query param if present, null otherwise.\n */\nfunction getRecipeIdFromSearch(search) {\n    var urlParams = new URLSearchParams(search);\n    return urlParams.get(RECIPE_ID_QUERY_PARAM);\n}\nfunction clearQueryParams(paramNames) {\n    var newURL = new URL(windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getHref());\n    for (var _i = 0, paramNames_1 = paramNames; _i < paramNames_1.length; _i++) {\n        var param = paramNames_1[_i];\n        newURL.searchParams.delete(param);\n    }\n    windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.history.replaceState(\n        windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.history.getState(),\n        \"\",\n        windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getHref()\n    );\n}\nfunction clearErrorQueryParam() {\n    clearQueryParams([\"error\", \"message\"]);\n}\nfunction getQueryParams(param) {\n    var urlParams = new URLSearchParams(\n        windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getSearch()\n    );\n    return urlParams.get(param);\n}\nfunction getURLHash() {\n    // By default it is returined with the \"#\" at the beginning, we cut that off here.\n    return windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getHash().substr(1);\n}\nfunction getRedirectToPathFromURL() {\n    var param = getQueryParams(\"redirectToPath\");\n    if (param === null) {\n        return undefined;\n    } else {\n        // Prevent Open redirects by normalising path.\n        try {\n            var normalisedURLPath = new NormalisedURLPath__default.default(param).getAsStringDangerous();\n            var pathQueryParams = param.split(\"?\")[1] !== undefined ? \"?\".concat(param.split(\"?\")[1]) : \"\";\n            return normalisedURLPath + pathQueryParams;\n        } catch (_a) {\n            return undefined;\n        }\n    }\n}\n/*\n * isTest\n */\nfunction isTest() {\n    try {\n        return process.env.TEST_MODE === \"testing\";\n    } catch (err) {\n        // can get Uncaught ReferenceError: process is not defined error\n        return false;\n    }\n}\nfunction normaliseInputAppInfoOrThrowError(appInfo) {\n    if (appInfo === undefined) {\n        throw new Error(\"Please provide the appInfo object when calling supertokens.init\");\n    }\n    if (appInfo.apiDomain === undefined) {\n        throw new Error(\"Please provide your apiDomain inside the appInfo object when calling supertokens.init\");\n    }\n    if (appInfo.appName === undefined) {\n        throw new Error(\"Please provide your appName inside the appInfo object when calling supertokens.init\");\n    }\n    if (appInfo.websiteDomain === undefined) {\n        throw new Error(\"Please provide your websiteDomain inside the appInfo object when calling supertokens.init\");\n    }\n    var apiGatewayPath = new NormalisedURLPath__default.default(\"\");\n    if (appInfo.apiGatewayPath !== undefined) {\n        apiGatewayPath = new NormalisedURLPath__default.default(appInfo.apiGatewayPath);\n    }\n    return {\n        appName: appInfo.appName,\n        apiDomain: new NormalisedURLDomain__default.default(appInfo.apiDomain),\n        websiteDomain: new NormalisedURLDomain__default.default(appInfo.websiteDomain),\n        apiBasePath: apiGatewayPath.appendPath(\n            getNormalisedURLPathOrDefault(DEFAULT_API_BASE_PATH, appInfo.apiBasePath)\n        ),\n        websiteBasePath: getNormalisedURLPathOrDefault(DEFAULT_WEBSITE_BASE_PATH, appInfo.websiteBasePath),\n    };\n}\nfunction getNormalisedURLPathOrDefault(defaultPath, path) {\n    if (path !== undefined) {\n        return new NormalisedURLPath__default.default(path);\n    } else {\n        return new NormalisedURLPath__default.default(defaultPath);\n    }\n}\n/*\n * validateForm\n */\n// We check that the number of fields in input and config form field is the same.\n// We check that each item in the config form field is also present in the input form field\nfunction validateForm(inputs, configFormFields) {\n    return __awaiter(this, void 0, void 0, function () {\n        var validationErrors, _loop_1, i;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    validationErrors = [];\n                    if (configFormFields.length !== inputs.length) {\n                        throw Error(\"Are you sending too many / too few formFields?\");\n                    }\n                    _loop_1 = function (i) {\n                        var field, input, value, error;\n                        return __generator(this, function (_b) {\n                            switch (_b.label) {\n                                case 0:\n                                    field = configFormFields[i];\n                                    input = inputs.find(function (i) {\n                                        return i.id === field.id;\n                                    });\n                                    value = input.value;\n                                    if (input.id === \"email\") {\n                                        value = value.trim();\n                                    }\n                                    return [4 /*yield*/, field.validate(value)];\n                                case 1:\n                                    error = _b.sent();\n                                    // If error, add it.\n                                    if (error !== undefined) {\n                                        validationErrors.push({\n                                            error: error,\n                                            id: field.id,\n                                        });\n                                    }\n                                    return [2 /*return*/];\n                            }\n                        });\n                    };\n                    i = 0;\n                    _a.label = 1;\n                case 1:\n                    if (!(i < configFormFields.length)) return [3 /*break*/, 4];\n                    return [5 /*yield**/, _loop_1(i)];\n                case 2:\n                    _a.sent();\n                    _a.label = 3;\n                case 3:\n                    i++;\n                    return [3 /*break*/, 1];\n                case 4:\n                    return [2 /*return*/, validationErrors];\n            }\n        });\n    });\n}\n/*\n * getCurrentNormalisedUrlPath\n */\nfunction getCurrentNormalisedUrlPath() {\n    return new NormalisedURLPath__default.default(\n        windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getPathName()\n    );\n}\nfunction appendQueryParamsToURL(stringUrl, queryParams) {\n    if (queryParams === undefined) {\n        return stringUrl;\n    }\n    try {\n        var url_1 = new URL(stringUrl);\n        Object.entries(queryParams).forEach(function (_a) {\n            var key = _a[0],\n                value = _a[1];\n            url_1.searchParams.set(key, value);\n        });\n        return url_1.href;\n    } catch (e) {\n        var fakeDomain = stringUrl.startsWith(\"/\") ? \"http:localhost\" : \"http://localhost/\";\n        var url_2 = new URL(\"\".concat(fakeDomain).concat(stringUrl));\n        Object.entries(queryParams).forEach(function (_a) {\n            var key = _a[0],\n                value = _a[1];\n            url_2.searchParams.set(key, value);\n        });\n        return \"\".concat(url_2.pathname).concat(url_2.search);\n    }\n}\nfunction appendTrailingSlashToURL(stringUrl) {\n    return stringUrl.endsWith(\"/\") ? stringUrl : stringUrl + \"/\";\n}\n/*\n * Default method for matching recipe route based on query params.\n */\nfunction matchRecipeIdUsingQueryParams(recipeId) {\n    return function () {\n        var recipeIdFromSearch = getRecipeIdFromSearch(\n            windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getSearch()\n        );\n        return recipeIdFromSearch === recipeId;\n    };\n}\nfunction redirectWithFullPageReload(to) {\n    if (to.trim() === \"\") {\n        to = \"/\";\n    }\n    windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.setHref(to);\n}\nfunction redirectWithHistory(to, history) {\n    if (to.trim() === \"\") {\n        to = \"/\";\n    }\n    if (history.push !== undefined) {\n        // we are using react-router-dom that is before v6\n        history.push(to);\n    } else {\n        // in react-router-dom v6, it is just navigate(to), and we are renaming\n        // naviagte to history, so it becomes history(to).\n        history(to);\n    }\n}\nfunction getOriginOfPage() {\n    return new NormalisedURLDomain__default.default(\n        windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getOrigin()\n    );\n}\nfunction getLocalStorage(key) {\n    return __awaiter(this, void 0, void 0, function () {\n        var res;\n        return __generator(this, function (_a) {\n            res = windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.localStorage.getItem(key);\n            if (res === null || res === undefined) {\n                return [2 /*return*/, null];\n            }\n            return [2 /*return*/, res];\n        });\n    });\n}\nfunction setLocalStorage(key, value) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    return [\n                        4 /*yield*/,\n                        windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.localStorage.setItem(\n                            key,\n                            value\n                        ),\n                    ];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction removeFromLocalStorage(key) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    return [\n                        4 /*yield*/,\n                        windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.localStorage.removeItem(\n                            key\n                        ),\n                    ];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction mergeObjects(obj1, obj2) {\n    var res = exports.__assign({}, obj1);\n    for (var key in obj2) {\n        if (typeof res[key] === \"object\" && typeof obj2[key] === \"object\") {\n            res[key] = mergeObjects(res[key], obj2[key]);\n        } else {\n            res[key] = obj2[key];\n        }\n    }\n    return res;\n}\nfunction normaliseCookieScopeOrThrowError(cookieScope) {\n    function helper(cookieScope) {\n        cookieScope = cookieScope.trim().toLowerCase();\n        // first we convert it to a URL so that we can use the URL class\n        if (cookieScope.startsWith(\".\")) {\n            cookieScope = cookieScope.substr(1);\n        }\n        if (!cookieScope.startsWith(\"http://\") && !cookieScope.startsWith(\"https://\")) {\n            cookieScope = \"http://\" + cookieScope;\n        }\n        try {\n            var urlObj = new URL(cookieScope);\n            cookieScope = urlObj.hostname;\n            // remove leading dot\n            if (cookieScope.startsWith(\".\")) {\n                cookieScope = cookieScope.substr(1);\n            }\n            return cookieScope;\n        } catch (err) {\n            throw new Error(\"Please provide a valid cookie scope\");\n        }\n    }\n    function isAnIpAddress(ipaddress) {\n        return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\n            ipaddress\n        );\n    }\n    var noDotNormalised = helper(cookieScope);\n    if (noDotNormalised === \"localhost\" || isAnIpAddress(noDotNormalised)) {\n        return noDotNormalised;\n    }\n    if (cookieScope.startsWith(\".\")) {\n        return \".\" + noDotNormalised;\n    }\n    return noDotNormalised;\n}\nfunction getDefaultCookieScope() {\n    try {\n        return normaliseCookieScopeOrThrowError(\n            windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getHostName()\n        );\n    } catch (_a) {\n        return undefined;\n    }\n}\nfunction getCookieValue(name) {\n    return __awaiter(this, void 0, void 0, function () {\n        var value, _a, parts, last, temp;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _a = \"; \";\n                    return [\n                        4 /*yield*/,\n                        cookieHandler.CookieHandlerReference.getReferenceOrThrow().cookieHandler.getCookie(),\n                    ];\n                case 1:\n                    value = _a + _b.sent();\n                    parts = value.split(\"; \" + name + \"=\");\n                    if (parts.length >= 2) {\n                        last = parts.pop();\n                        if (last !== undefined) {\n                            temp = last.split(\";\").shift();\n                            if (temp === undefined) {\n                                return [2 /*return*/, null];\n                            }\n                            return [2 /*return*/, temp];\n                        }\n                    }\n                    return [2 /*return*/, null];\n            }\n        });\n    });\n}\n// undefined value will remove the cookie\nfunction setFrontendCookie(name, value, scope) {\n    return __awaiter(this, void 0, void 0, function () {\n        var expires, cookieVal;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    expires = \"Thu, 01 Jan 1970 00:00:01 GMT\";\n                    cookieVal = \"\";\n                    if (value !== undefined) {\n                        cookieVal = value;\n                        expires = undefined; // set cookie without expiry\n                    }\n                    if (\n                        !(\n                            scope === \"localhost\" ||\n                            scope ===\n                                windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getHostName() ||\n                            scope === undefined\n                        )\n                    )\n                        return [3 /*break*/, 5];\n                    if (!(expires !== undefined)) return [3 /*break*/, 2];\n                    return [\n                        4 /*yield*/,\n                        cookieHandler.CookieHandlerReference.getReferenceOrThrow().cookieHandler.setCookie(\n                            \"\".concat(name, \"=\").concat(cookieVal, \";expires=\").concat(expires, \";path=/;samesite=lax\")\n                        ),\n                    ];\n                case 1:\n                    _a.sent();\n                    return [3 /*break*/, 4];\n                case 2:\n                    return [\n                        4 /*yield*/,\n                        cookieHandler.CookieHandlerReference.getReferenceOrThrow().cookieHandler.setCookie(\n                            \"\"\n                                .concat(name, \"=\")\n                                .concat(cookieVal, \";expires=Fri, 31 Dec 9999 23:59:59 GMT;path=/;samesite=lax\")\n                        ),\n                    ];\n                case 3:\n                    _a.sent();\n                    _a.label = 4;\n                case 4:\n                    return [3 /*break*/, 9];\n                case 5:\n                    if (!(expires !== undefined)) return [3 /*break*/, 7];\n                    return [\n                        4 /*yield*/,\n                        cookieHandler.CookieHandlerReference.getReferenceOrThrow().cookieHandler.setCookie(\n                            \"\"\n                                .concat(name, \"=\")\n                                .concat(cookieVal, \";expires=\")\n                                .concat(expires, \";domain=\")\n                                .concat(scope, \";path=/;samesite=lax\")\n                        ),\n                    ];\n                case 6:\n                    _a.sent();\n                    return [3 /*break*/, 9];\n                case 7:\n                    return [\n                        4 /*yield*/,\n                        cookieHandler.CookieHandlerReference.getReferenceOrThrow().cookieHandler.setCookie(\n                            \"\"\n                                .concat(name, \"=\")\n                                .concat(cookieVal, \";domain=\")\n                                .concat(scope, \";expires=Fri, 31 Dec 9999 23:59:59 GMT;path=/;samesite=lax\")\n                        ),\n                    ];\n                case 8:\n                    _a.sent();\n                    _a.label = 9;\n                case 9:\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getNormalisedUserContext(userContext) {\n    return userContext === undefined ? {} : userContext;\n}\n/**\n * This function handles calling APIs that should only be called once during mount (mostly on mount of a route/feature component).\n * It's split into multiple callbacks (fetch + handleResponse/handleError) because we expect fetch to take longer and\n * and the component may be unmounted during the first fetch, in which case we want to avoid updating state/redirecting.\n * This is especially relevant for development in strict mode with React 18 (and in the future for concurrent rendering).\n *\n * @param fetch This is a callback that is only called once on mount. Mostly it's for consuming tokens/doing one time only API calls\n * @param handleResponse This is called with the result of the first (fetch) call if it succeeds.\n * @param handleError This is called with the error of the first (fetch) call if it rejects.\n * @param startLoading Will start the whole process if this is set to true (or omitted). Mostly used to wait for session loading.\n */\nvar useOnMountAPICall = function (fetch, handleResponse, handleError, startLoading) {\n    if (startLoading === void 0) {\n        startLoading = true;\n    }\n    var consumeReq = React.useRef();\n    var _a = React.useState(undefined),\n        error = _a[0],\n        setError = _a[1];\n    React.useEffect(\n        function () {\n            var effect = function (signal) {\n                return __awaiter(void 0, void 0, void 0, function () {\n                    var resp, err_1;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                _a.trys.push([0, 2, , 3]);\n                                if (consumeReq.current === undefined) {\n                                    consumeReq.current = fetch();\n                                }\n                                return [4 /*yield*/, consumeReq.current];\n                            case 1:\n                                resp = _a.sent();\n                                if (!signal.aborted) {\n                                    void handleResponse(resp);\n                                }\n                                return [3 /*break*/, 3];\n                            case 2:\n                                err_1 = _a.sent();\n                                if (!signal.aborted) {\n                                    if (handleError !== undefined) {\n                                        handleError(err_1, resp);\n                                    } else {\n                                        setError(err_1);\n                                    }\n                                }\n                                return [3 /*break*/, 3];\n                            case 3:\n                                return [2 /*return*/];\n                        }\n                    });\n                });\n            };\n            if (startLoading) {\n                var ctrl_1 = new AbortController();\n                void effect(ctrl_1.signal);\n                return function () {\n                    ctrl_1.abort();\n                };\n            }\n            return;\n        },\n        [setError, consumeReq, fetch, handleResponse, handleError, startLoading]\n    );\n    if (error) {\n        throw error;\n    }\n};\nfunction saveInvalidClaimRedirectPathInContext(userContext, invalidClaimRedirectPath) {\n    if (userContext[\"_default\"] === undefined) {\n        userContext[\"_default\"] = {};\n    }\n    if (userContext[\"_default\"].redirectPath === undefined) {\n        userContext[\"_default\"] = exports.__assign(exports.__assign({}, userContext[\"_default\"]), {\n            invalidClaimRedirectPath: invalidClaimRedirectPath,\n        });\n    }\n}\nfunction popInvalidClaimRedirectPathFromContext(userContext) {\n    var _a;\n    var res = (_a = userContext[\"_default\"]) === null || _a === void 0 ? void 0 : _a.invalidClaimRedirectPath;\n    if (res !== undefined) {\n        delete userContext[\"_default\"].invalidClaimRedirectPath;\n    }\n    return res;\n}\n\nexports.SSR_ERROR = SSR_ERROR;\nexports.ST_ROOT_ID = ST_ROOT_ID;\nexports.__awaiter = __awaiter;\nexports.__extends = __extends;\nexports.__generator = __generator;\nexports.__rest = __rest;\nexports.__spreadArray = __spreadArray;\nexports.appendQueryParamsToURL = appendQueryParamsToURL;\nexports.appendTrailingSlashToURL = appendTrailingSlashToURL;\nexports.clearErrorQueryParam = clearErrorQueryParam;\nexports.clearQueryParams = clearQueryParams;\nexports.getCookieValue = getCookieValue;\nexports.getCurrentNormalisedUrlPath = getCurrentNormalisedUrlPath;\nexports.getDefaultCookieScope = getDefaultCookieScope;\nexports.getLocalStorage = getLocalStorage;\nexports.getNormalisedUserContext = getNormalisedUserContext;\nexports.getOriginOfPage = getOriginOfPage;\nexports.getQueryParams = getQueryParams;\nexports.getRedirectToPathFromURL = getRedirectToPathFromURL;\nexports.getURLHash = getURLHash;\nexports.isTest = isTest;\nexports.matchRecipeIdUsingQueryParams = matchRecipeIdUsingQueryParams;\nexports.mergeObjects = mergeObjects;\nexports.normaliseCookieScopeOrThrowError = normaliseCookieScopeOrThrowError;\nexports.normaliseInputAppInfoOrThrowError = normaliseInputAppInfoOrThrowError;\nexports.popInvalidClaimRedirectPathFromContext = popInvalidClaimRedirectPathFromContext;\nexports.redirectWithFullPageReload = redirectWithFullPageReload;\nexports.redirectWithHistory = redirectWithHistory;\nexports.removeFromLocalStorage = removeFromLocalStorage;\nexports.saveInvalidClaimRedirectPathInContext = saveInvalidClaimRedirectPathInContext;\nexports.setFrontendCookie = setFrontendCookie;\nexports.setLocalStorage = setLocalStorage;\nexports.useOnMountAPICall = useOnMountAPICall;\nexports.validateForm = validateForm;\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-auth-react/lib/build/utils.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-auth-react/recipe/emailpassword/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/supertokens-auth-react/recipe/emailpassword/index.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n__export(__webpack_require__(/*! ../../lib/build/emailpassword */ \"./node_modules/supertokens-auth-react/lib/build/emailpassword.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtYXV0aC1yZWFjdC9yZWNpcGUvZW1haWxwYXNzd29yZC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIsU0FBUyxtQkFBTyxDQUFDLHVHQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtYXV0aC1yZWFjdC9yZWNpcGUvZW1haWxwYXNzd29yZC9pbmRleC5qcz8xZTRiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIENvcHlyaWdodCAoYykgMjAyMSwgVlJBSSBMYWJzIGFuZC9vciBpdHMgYWZmaWxpYXRlcy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvZnR3YXJlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpIGFzIHB1Ymxpc2hlZCBieSB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24uXG4gKlxuICogWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5XG4gKiBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVFxuICogV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlXG4gKiBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblwidXNlIHN0cmljdFwiO1xuZnVuY3Rpb24gX19leHBvcnQobSkge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKCFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBleHBvcnRzW3BdID0gbVtwXTtcbn1cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5fX2V4cG9ydChyZXF1aXJlKFwiLi4vLi4vbGliL2J1aWxkL2VtYWlscGFzc3dvcmRcIikpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/supertokens-auth-react/recipe/emailpassword/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-auth-react/recipe/session/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/supertokens-auth-react/recipe/session/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n__export(__webpack_require__(/*! ../../lib/build/session */ \"./node_modules/supertokens-auth-react/lib/build/session.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtYXV0aC1yZWFjdC9yZWNpcGUvc2Vzc2lvbi9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIsU0FBUyxtQkFBTyxDQUFDLDJGQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtYXV0aC1yZWFjdC9yZWNpcGUvc2Vzc2lvbi9pbmRleC5qcz9mZjM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIENvcHlyaWdodCAoYykgMjAyMSwgVlJBSSBMYWJzIGFuZC9vciBpdHMgYWZmaWxpYXRlcy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvZnR3YXJlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpIGFzIHB1Ymxpc2hlZCBieSB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24uXG4gKlxuICogWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5XG4gKiBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVFxuICogV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlXG4gKiBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblwidXNlIHN0cmljdFwiO1xuZnVuY3Rpb24gX19leHBvcnQobSkge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKCFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBleHBvcnRzW3BdID0gbVtwXTtcbn1cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5fX2V4cG9ydChyZXF1aXJlKFwiLi4vLi4vbGliL2J1aWxkL3Nlc3Npb25cIikpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/supertokens-auth-react/recipe/session/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-js-override/lib/build/getProxyObject.js":
/*!**************************************************************************!*\
  !*** ./node_modules/supertokens-js-override/lib/build/getProxyObject.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getProxyObject = void 0;\nfunction getProxyObject(orig) {\n    var ret = __assign(__assign({}, orig), { _call: function (_, __) {\n            throw new Error(\"This function should only be called through the recipe object\");\n        } });\n    var keys = Object.keys(ret);\n    var _loop_1 = function (k) {\n        if (k !== \"_call\") {\n            ret[k] = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return this._call(k, args);\n            };\n        }\n    };\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var k = keys_1[_i];\n        _loop_1(k);\n    }\n    return ret;\n}\nexports.getProxyObject = getProxyObject;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtanMtb3ZlcnJpZGUvbGliL2J1aWxkL2dldFByb3h5T2JqZWN0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLGlEQUFpRCxPQUFPO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCO0FBQ0Esa0NBQWtDLFdBQVc7QUFDN0M7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyx1QkFBdUI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLG9CQUFvQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdXBlcnRva2Vucy1qcy1vdmVycmlkZS9saWIvYnVpbGQvZ2V0UHJveHlPYmplY3QuanM/YTYxMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldFByb3h5T2JqZWN0ID0gdm9pZCAwO1xuZnVuY3Rpb24gZ2V0UHJveHlPYmplY3Qob3JpZykge1xuICAgIHZhciByZXQgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgb3JpZyksIHsgX2NhbGw6IGZ1bmN0aW9uIChfLCBfXykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhpcyBmdW5jdGlvbiBzaG91bGQgb25seSBiZSBjYWxsZWQgdGhyb3VnaCB0aGUgcmVjaXBlIG9iamVjdFwiKTtcbiAgICAgICAgfSB9KTtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHJldCk7XG4gICAgdmFyIF9sb29wXzEgPSBmdW5jdGlvbiAoaykge1xuICAgICAgICBpZiAoayAhPT0gXCJfY2FsbFwiKSB7XG4gICAgICAgICAgICByZXRba10gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGFyZ3MgPSBbXTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgICAgICAgICBhcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9jYWxsKGssIGFyZ3MpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgZm9yICh2YXIgX2kgPSAwLCBrZXlzXzEgPSBrZXlzOyBfaSA8IGtleXNfMS5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgdmFyIGsgPSBrZXlzXzFbX2ldO1xuICAgICAgICBfbG9vcF8xKGspO1xuICAgIH1cbiAgICByZXR1cm4gcmV0O1xufVxuZXhwb3J0cy5nZXRQcm94eU9iamVjdCA9IGdldFByb3h5T2JqZWN0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/supertokens-js-override/lib/build/getProxyObject.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-js-override/lib/build/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/supertokens-js-override/lib/build/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.OverrideableBuilder = void 0;\nvar getProxyObject_1 = __webpack_require__(/*! ./getProxyObject */ \"./node_modules/supertokens-js-override/lib/build/getProxyObject.js\");\nvar OverrideableBuilder = /** @class */ (function () {\n    function OverrideableBuilder(originalImplementation) {\n        this.layers = [originalImplementation];\n        this.proxies = [];\n    }\n    OverrideableBuilder.prototype.override = function (overrideFunc) {\n        var proxy = (0, getProxyObject_1.getProxyObject)(this.layers[0]);\n        var layer = overrideFunc(proxy, this);\n        for (var _i = 0, _a = Object.keys(this.layers[0]); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (layer[key] === proxy[key] || key === \"_call\") {\n                delete layer[key];\n            }\n            else if (layer[key] === undefined) {\n                layer[key] = null;\n            }\n        }\n        this.layers.push(layer);\n        this.proxies.push(proxy);\n        return this;\n    };\n    OverrideableBuilder.prototype.build = function () {\n        var _this = this;\n        if (this.result) {\n            return this.result;\n        }\n        this.result = {};\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            for (var _b = 0, _c = Object.keys(layer); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var override = layer[key];\n                if (override !== undefined) {\n                    if (override === null) {\n                        this.result[key] = undefined;\n                    }\n                    else if (typeof override === \"function\") {\n                        this.result[key] = override.bind(this.result);\n                    }\n                    else {\n                        this.result[key] = override;\n                    }\n                }\n            }\n        }\n        var _loop_1 = function (proxyInd) {\n            var proxy = this_1.proxies[proxyInd];\n            proxy._call = function (fname, args) {\n                for (var i = proxyInd; i >= 0; --i) {\n                    var func = _this.layers[i][fname];\n                    if (func !== undefined && func !== null) {\n                        return func.bind(_this.result).apply(void 0, args);\n                    }\n                }\n            };\n        };\n        var this_1 = this;\n        for (var proxyInd = 0; proxyInd < this.proxies.length; ++proxyInd) {\n            _loop_1(proxyInd);\n        }\n        return this.result;\n    };\n    return OverrideableBuilder;\n}());\nexports.OverrideableBuilder = OverrideableBuilder;\nexports[\"default\"] = OverrideableBuilder;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtanMtb3ZlcnJpZGUvbGliL2J1aWxkL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQjtBQUMzQix1QkFBdUIsbUJBQU8sQ0FBQyw0RkFBa0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxnQkFBZ0I7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLGdCQUFnQjtBQUMzRDtBQUNBLHNEQUFzRCxnQkFBZ0I7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLFFBQVE7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixnQ0FBZ0M7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCwyQkFBMkI7QUFDM0Isa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1cGVydG9rZW5zLWpzLW92ZXJyaWRlL2xpYi9idWlsZC9pbmRleC5qcz82MTI5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5PdmVycmlkZWFibGVCdWlsZGVyID0gdm9pZCAwO1xudmFyIGdldFByb3h5T2JqZWN0XzEgPSByZXF1aXJlKFwiLi9nZXRQcm94eU9iamVjdFwiKTtcbnZhciBPdmVycmlkZWFibGVCdWlsZGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE92ZXJyaWRlYWJsZUJ1aWxkZXIob3JpZ2luYWxJbXBsZW1lbnRhdGlvbikge1xuICAgICAgICB0aGlzLmxheWVycyA9IFtvcmlnaW5hbEltcGxlbWVudGF0aW9uXTtcbiAgICAgICAgdGhpcy5wcm94aWVzID0gW107XG4gICAgfVxuICAgIE92ZXJyaWRlYWJsZUJ1aWxkZXIucHJvdG90eXBlLm92ZXJyaWRlID0gZnVuY3Rpb24gKG92ZXJyaWRlRnVuYykge1xuICAgICAgICB2YXIgcHJveHkgPSAoMCwgZ2V0UHJveHlPYmplY3RfMS5nZXRQcm94eU9iamVjdCkodGhpcy5sYXllcnNbMF0pO1xuICAgICAgICB2YXIgbGF5ZXIgPSBvdmVycmlkZUZ1bmMocHJveHksIHRoaXMpO1xuICAgICAgICBmb3IgKHZhciBfaSA9IDAsIF9hID0gT2JqZWN0LmtleXModGhpcy5sYXllcnNbMF0pOyBfaSA8IF9hLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgdmFyIGtleSA9IF9hW19pXTtcbiAgICAgICAgICAgIGlmIChsYXllcltrZXldID09PSBwcm94eVtrZXldIHx8IGtleSA9PT0gXCJfY2FsbFwiKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIGxheWVyW2tleV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChsYXllcltrZXldID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBsYXllcltrZXldID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLmxheWVycy5wdXNoKGxheWVyKTtcbiAgICAgICAgdGhpcy5wcm94aWVzLnB1c2gocHJveHkpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuICAgIE92ZXJyaWRlYWJsZUJ1aWxkZXIucHJvdG90eXBlLmJ1aWxkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAodGhpcy5yZXN1bHQpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnJlc3VsdCA9IHt9O1xuICAgICAgICBmb3IgKHZhciBfaSA9IDAsIF9hID0gdGhpcy5sYXllcnM7IF9pIDwgX2EubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICB2YXIgbGF5ZXIgPSBfYVtfaV07XG4gICAgICAgICAgICBmb3IgKHZhciBfYiA9IDAsIF9jID0gT2JqZWN0LmtleXMobGF5ZXIpOyBfYiA8IF9jLmxlbmd0aDsgX2IrKykge1xuICAgICAgICAgICAgICAgIHZhciBrZXkgPSBfY1tfYl07XG4gICAgICAgICAgICAgICAgdmFyIG92ZXJyaWRlID0gbGF5ZXJba2V5XTtcbiAgICAgICAgICAgICAgICBpZiAob3ZlcnJpZGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAob3ZlcnJpZGUgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVzdWx0W2tleV0gPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIG92ZXJyaWRlID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVzdWx0W2tleV0gPSBvdmVycmlkZS5iaW5kKHRoaXMucmVzdWx0KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVzdWx0W2tleV0gPSBvdmVycmlkZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2YXIgX2xvb3BfMSA9IGZ1bmN0aW9uIChwcm94eUluZCkge1xuICAgICAgICAgICAgdmFyIHByb3h5ID0gdGhpc18xLnByb3hpZXNbcHJveHlJbmRdO1xuICAgICAgICAgICAgcHJveHkuX2NhbGwgPSBmdW5jdGlvbiAoZm5hbWUsIGFyZ3MpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gcHJveHlJbmQ7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBmdW5jID0gX3RoaXMubGF5ZXJzW2ldW2ZuYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZ1bmMgIT09IHVuZGVmaW5lZCAmJiBmdW5jICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZnVuYy5iaW5kKF90aGlzLnJlc3VsdCkuYXBwbHkodm9pZCAwLCBhcmdzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgICAgIHZhciB0aGlzXzEgPSB0aGlzO1xuICAgICAgICBmb3IgKHZhciBwcm94eUluZCA9IDA7IHByb3h5SW5kIDwgdGhpcy5wcm94aWVzLmxlbmd0aDsgKytwcm94eUluZCkge1xuICAgICAgICAgICAgX2xvb3BfMShwcm94eUluZCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMucmVzdWx0O1xuICAgIH07XG4gICAgcmV0dXJuIE92ZXJyaWRlYWJsZUJ1aWxkZXI7XG59KCkpO1xuZXhwb3J0cy5PdmVycmlkZWFibGVCdWlsZGVyID0gT3ZlcnJpZGVhYmxlQnVpbGRlcjtcbmV4cG9ydHMuZGVmYXVsdCA9IE92ZXJyaWRlYWJsZUJ1aWxkZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/supertokens-js-override/lib/build/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/index.js":
/*!**************************************************!*\
  !*** ./node_modules/supertokens-web-js/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n__export(__webpack_require__(/*! ./lib/build/ */ \"./node_modules/supertokens-web-js/lib/build/index.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIsU0FBUyxtQkFBTyxDQUFDLDBFQUFjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdXBlcnRva2Vucy13ZWItanMvaW5kZXguanM/YTE3YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDb3B5cmlnaHQgKGMpIDIwMjIsIFZSQUkgTGFicyBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb2Z0d2FyZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLlxuICpcbiAqIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heVxuICogb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdCBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVRcbiAqIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZVxuICogTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cblwidXNlIHN0cmljdFwiO1xuZnVuY3Rpb24gX19leHBvcnQobSkge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKCFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBleHBvcnRzW3BdID0gbVtwXTtcbn1cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5fX2V4cG9ydChyZXF1aXJlKFwiLi9saWIvYnVpbGQvXCIpKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/constants.js":
/*!****************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/constants.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SSR_ERROR = exports.DEFAULT_API_BASE_PATH = void 0;\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nexports.DEFAULT_API_BASE_PATH = \"/auth\";\nexports.SSR_ERROR =\n    \"\\nIf you are trying to use this method doing server-side-rendering, please make sure you move this method inside a componentDidMount method or useEffect hook.\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL2xpYi9idWlsZC9jb25zdGFudHMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLEdBQUcsNkJBQTZCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0IsaUJBQWlCO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdXBlcnRva2Vucy13ZWItanMvbGliL2J1aWxkL2NvbnN0YW50cy5qcz84Yzc0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TU1JfRVJST1IgPSBleHBvcnRzLkRFRkFVTFRfQVBJX0JBU0VfUEFUSCA9IHZvaWQgMDtcbi8qIENvcHlyaWdodCAoYykgMjAyMiwgVlJBSSBMYWJzIGFuZC9vciBpdHMgYWZmaWxpYXRlcy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvZnR3YXJlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpIGFzIHB1Ymxpc2hlZCBieSB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24uXG4gKlxuICogWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5XG4gKiBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVFxuICogV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlXG4gKiBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmV4cG9ydHMuREVGQVVMVF9BUElfQkFTRV9QQVRIID0gXCIvYXV0aFwiO1xuZXhwb3J0cy5TU1JfRVJST1IgPVxuICAgIFwiXFxuSWYgeW91IGFyZSB0cnlpbmcgdG8gdXNlIHRoaXMgbWV0aG9kIGRvaW5nIHNlcnZlci1zaWRlLXJlbmRlcmluZywgcGxlYXNlIG1ha2Ugc3VyZSB5b3UgbW92ZSB0aGlzIG1ldGhvZCBpbnNpZGUgYSBjb21wb25lbnREaWRNb3VudCBtZXRob2Qgb3IgdXNlRWZmZWN0IGhvb2suXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/constants.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/cookieHandler/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/cookieHandler/index.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CookieHandlerReference = void 0;\nvar cookieHandler_1 = __webpack_require__(/*! supertokens-website/utils/cookieHandler */ \"./node_modules/supertokens-website/utils/cookieHandler/index.js\");\nObject.defineProperty(exports, \"CookieHandlerReference\", ({\n    enumerable: true,\n    get: function () {\n        return cookieHandler_1.CookieHandlerReference;\n    },\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL2xpYi9idWlsZC9jb29raWVIYW5kbGVyL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEI7QUFDOUIsc0JBQXNCLG1CQUFPLENBQUMsZ0hBQXlDO0FBQ3ZFLDBEQUF5RDtBQUN6RDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsQ0FBQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdXBlcnRva2Vucy13ZWItanMvbGliL2J1aWxkL2Nvb2tpZUhhbmRsZXIvaW5kZXguanM/M2Q4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIENvcHlyaWdodCAoYykgMjAyMiwgVlJBSSBMYWJzIGFuZC9vciBpdHMgYWZmaWxpYXRlcy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvZnR3YXJlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpIGFzIHB1Ymxpc2hlZCBieSB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24uXG4gKlxuICogWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5XG4gKiBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVFxuICogV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlXG4gKiBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29va2llSGFuZGxlclJlZmVyZW5jZSA9IHZvaWQgMDtcbnZhciBjb29raWVIYW5kbGVyXzEgPSByZXF1aXJlKFwic3VwZXJ0b2tlbnMtd2Vic2l0ZS91dGlscy9jb29raWVIYW5kbGVyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ29va2llSGFuZGxlclJlZmVyZW5jZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGNvb2tpZUhhbmRsZXJfMS5Db29raWVIYW5kbGVyUmVmZXJlbmNlO1xuICAgIH0sXG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/cookieHandler/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/error.js":
/*!************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/error.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * This error usually indicates that the API exposed by the backend SDKs responded\n * with `{status: \"GENERAL_ERROR\"}`. This should be used to show errors to the user\n * in your frontend application.\n */\nvar error_1 = __webpack_require__(/*! supertokens-website/utils/error */ \"./node_modules/supertokens-website/utils/error/index.js\");\nexports[\"default\"] = error_1.STGeneralError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL2xpYi9idWlsZC9lcnJvci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBLFVBQVUsd0JBQXdCO0FBQ2xDO0FBQ0E7QUFDQSxjQUFjLG1CQUFPLENBQUMsZ0dBQWlDO0FBQ3ZELGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdXBlcnRva2Vucy13ZWItanMvbGliL2J1aWxkL2Vycm9yLmpzPzY3NTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiBDb3B5cmlnaHQgKGMpIDIwMjIsIFZSQUkgTGFicyBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb2Z0d2FyZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLlxuICpcbiAqIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heVxuICogb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdCBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVRcbiAqIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZVxuICogTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKipcbiAqIFRoaXMgZXJyb3IgdXN1YWxseSBpbmRpY2F0ZXMgdGhhdCB0aGUgQVBJIGV4cG9zZWQgYnkgdGhlIGJhY2tlbmQgU0RLcyByZXNwb25kZWRcbiAqIHdpdGggYHtzdGF0dXM6IFwiR0VORVJBTF9FUlJPUlwifWAuIFRoaXMgc2hvdWxkIGJlIHVzZWQgdG8gc2hvdyBlcnJvcnMgdG8gdGhlIHVzZXJcbiAqIGluIHlvdXIgZnJvbnRlbmQgYXBwbGljYXRpb24uXG4gKi9cbnZhciBlcnJvcl8xID0gcmVxdWlyZShcInN1cGVydG9rZW5zLXdlYnNpdGUvdXRpbHMvZXJyb3JcIik7XG5leHBvcnRzLmRlZmF1bHQgPSBlcnJvcl8xLlNUR2VuZXJhbEVycm9yO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/error.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/index.js":
/*!************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.init = void 0;\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar supertokens_1 = __webpack_require__(/*! ./supertokens */ \"./node_modules/supertokens-web-js/lib/build/supertokens.js\");\nvar SuperTokensAPIWrapper = /** @class */ (function () {\n    function SuperTokensAPIWrapper() {}\n    SuperTokensAPIWrapper.init = function (config) {\n        supertokens_1.default.init(config);\n    };\n    return SuperTokensAPIWrapper;\n})();\nexports[\"default\"] = SuperTokensAPIWrapper;\nexports.init = SuperTokensAPIWrapper.init;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL2xpYi9idWlsZC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixtQkFBTyxDQUFDLGlGQUFlO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxrQkFBZTtBQUNmLFlBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1cGVydG9rZW5zLXdlYi1qcy9saWIvYnVpbGQvaW5kZXguanM/YmE4NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaW5pdCA9IHZvaWQgMDtcbi8qIENvcHlyaWdodCAoYykgMjAyMiwgVlJBSSBMYWJzIGFuZC9vciBpdHMgYWZmaWxpYXRlcy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvZnR3YXJlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpIGFzIHB1Ymxpc2hlZCBieSB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24uXG4gKlxuICogWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5XG4gKiBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVFxuICogV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlXG4gKiBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBzdXBlcnRva2Vuc18xID0gcmVxdWlyZShcIi4vc3VwZXJ0b2tlbnNcIik7XG52YXIgU3VwZXJUb2tlbnNBUElXcmFwcGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFN1cGVyVG9rZW5zQVBJV3JhcHBlcigpIHt9XG4gICAgU3VwZXJUb2tlbnNBUElXcmFwcGVyLmluaXQgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gICAgICAgIHN1cGVydG9rZW5zXzEuZGVmYXVsdC5pbml0KGNvbmZpZyk7XG4gICAgfTtcbiAgICByZXR1cm4gU3VwZXJUb2tlbnNBUElXcmFwcGVyO1xufSkoKTtcbmV4cG9ydHMuZGVmYXVsdCA9IFN1cGVyVG9rZW5zQVBJV3JhcHBlcjtcbmV4cG9ydHMuaW5pdCA9IFN1cGVyVG9rZW5zQVBJV3JhcHBlci5pbml0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/normalisedURLDomain.js":
/*!**************************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/normalisedURLDomain.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar NormalisedURLDomain = /** @class */ (function () {\n    function NormalisedURLDomain(url) {\n        var _this = this;\n        this.getAsStringDangerous = function () {\n            return _this.value;\n        };\n        this.value = normaliseURLDomainOrThrowError(url);\n    }\n    return NormalisedURLDomain;\n})();\nexports[\"default\"] = NormalisedURLDomain;\nfunction normaliseURLDomainOrThrowError(input, ignoreProtocol) {\n    if (ignoreProtocol === void 0) {\n        ignoreProtocol = false;\n    }\n    function isAnIpAddress(ipaddress) {\n        return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\n            ipaddress\n        );\n    }\n    input = input.trim();\n    try {\n        if (!input.startsWith(\"http://\") && !input.startsWith(\"https://\")) {\n            throw new Error(\"Error converting to proper URL\");\n        }\n        var urlObj = new URL(input);\n        if (ignoreProtocol) {\n            if (urlObj.hostname.startsWith(\"localhost\") || isAnIpAddress(urlObj.hostname)) {\n                input = \"http://\" + urlObj.host;\n            } else {\n                input = \"https://\" + urlObj.host;\n            }\n        } else {\n            input = urlObj.protocol + \"//\" + urlObj.host;\n        }\n        return input;\n        // eslint-disable-next-line no-empty\n    } catch (err) {}\n    if (input.startsWith(\"/\")) {\n        throw new Error(\"Please provide a valid domain name\");\n    }\n    // not a valid URL\n    if (input.indexOf(\".\") === 0) {\n        input = input.substr(1);\n    }\n    // If the input contains a . it means they have given a domain name.\n    // So we try assuming that they have given a domain name\n    if (\n        (input.indexOf(\".\") !== -1 || input.startsWith(\"localhost\")) &&\n        !input.startsWith(\"http://\") &&\n        !input.startsWith(\"https://\")\n    ) {\n        input = \"https://\" + input;\n        // at this point, it should be a valid URL. So we test that before doing a recursive call\n        try {\n            new URL(input);\n            return normaliseURLDomainOrThrowError(input, true);\n            // eslint-disable-next-line no-empty\n        } catch (err) {}\n    }\n    throw new Error(\"Please provide a valid domain name\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL2xpYi9idWlsZC9ub3JtYWxpc2VkVVJMRG9tYWluLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL2xpYi9idWlsZC9ub3JtYWxpc2VkVVJMRG9tYWluLmpzP2I1ZGYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiBDb3B5cmlnaHQgKGMpIDIwMjIsIFZSQUkgTGFicyBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb2Z0d2FyZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLlxuICpcbiAqIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heVxuICogb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdCBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVRcbiAqIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZVxuICogTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgTm9ybWFsaXNlZFVSTERvbWFpbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOb3JtYWxpc2VkVVJMRG9tYWluKHVybCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB0aGlzLmdldEFzU3RyaW5nRGFuZ2Vyb3VzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzLnZhbHVlO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLnZhbHVlID0gbm9ybWFsaXNlVVJMRG9tYWluT3JUaHJvd0Vycm9yKHVybCk7XG4gICAgfVxuICAgIHJldHVybiBOb3JtYWxpc2VkVVJMRG9tYWluO1xufSkoKTtcbmV4cG9ydHMuZGVmYXVsdCA9IE5vcm1hbGlzZWRVUkxEb21haW47XG5mdW5jdGlvbiBub3JtYWxpc2VVUkxEb21haW5PclRocm93RXJyb3IoaW5wdXQsIGlnbm9yZVByb3RvY29sKSB7XG4gICAgaWYgKGlnbm9yZVByb3RvY29sID09PSB2b2lkIDApIHtcbiAgICAgICAgaWdub3JlUHJvdG9jb2wgPSBmYWxzZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaXNBbklwQWRkcmVzcyhpcGFkZHJlc3MpIHtcbiAgICAgICAgcmV0dXJuIC9eKDI1WzAtNV18MlswLTRdWzAtOV18WzAxXT9bMC05XVswLTldPylcXC4oMjVbMC01XXwyWzAtNF1bMC05XXxbMDFdP1swLTldWzAtOV0/KVxcLigyNVswLTVdfDJbMC00XVswLTldfFswMV0/WzAtOV1bMC05XT8pXFwuKDI1WzAtNV18MlswLTRdWzAtOV18WzAxXT9bMC05XVswLTldPykkLy50ZXN0KFxuICAgICAgICAgICAgaXBhZGRyZXNzXG4gICAgICAgICk7XG4gICAgfVxuICAgIGlucHV0ID0gaW5wdXQudHJpbSgpO1xuICAgIHRyeSB7XG4gICAgICAgIGlmICghaW5wdXQuc3RhcnRzV2l0aChcImh0dHA6Ly9cIikgJiYgIWlucHV0LnN0YXJ0c1dpdGgoXCJodHRwczovL1wiKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXJyb3IgY29udmVydGluZyB0byBwcm9wZXIgVVJMXCIpO1xuICAgICAgICB9XG4gICAgICAgIHZhciB1cmxPYmogPSBuZXcgVVJMKGlucHV0KTtcbiAgICAgICAgaWYgKGlnbm9yZVByb3RvY29sKSB7XG4gICAgICAgICAgICBpZiAodXJsT2JqLmhvc3RuYW1lLnN0YXJ0c1dpdGgoXCJsb2NhbGhvc3RcIikgfHwgaXNBbklwQWRkcmVzcyh1cmxPYmouaG9zdG5hbWUpKSB7XG4gICAgICAgICAgICAgICAgaW5wdXQgPSBcImh0dHA6Ly9cIiArIHVybE9iai5ob3N0O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpbnB1dCA9IFwiaHR0cHM6Ly9cIiArIHVybE9iai5ob3N0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaW5wdXQgPSB1cmxPYmoucHJvdG9jb2wgKyBcIi8vXCIgKyB1cmxPYmouaG9zdDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaW5wdXQ7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1lbXB0eVxuICAgIH0gY2F0Y2ggKGVycikge31cbiAgICBpZiAoaW5wdXQuc3RhcnRzV2l0aChcIi9cIikpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUGxlYXNlIHByb3ZpZGUgYSB2YWxpZCBkb21haW4gbmFtZVwiKTtcbiAgICB9XG4gICAgLy8gbm90IGEgdmFsaWQgVVJMXG4gICAgaWYgKGlucHV0LmluZGV4T2YoXCIuXCIpID09PSAwKSB7XG4gICAgICAgIGlucHV0ID0gaW5wdXQuc3Vic3RyKDEpO1xuICAgIH1cbiAgICAvLyBJZiB0aGUgaW5wdXQgY29udGFpbnMgYSAuIGl0IG1lYW5zIHRoZXkgaGF2ZSBnaXZlbiBhIGRvbWFpbiBuYW1lLlxuICAgIC8vIFNvIHdlIHRyeSBhc3N1bWluZyB0aGF0IHRoZXkgaGF2ZSBnaXZlbiBhIGRvbWFpbiBuYW1lXG4gICAgaWYgKFxuICAgICAgICAoaW5wdXQuaW5kZXhPZihcIi5cIikgIT09IC0xIHx8IGlucHV0LnN0YXJ0c1dpdGgoXCJsb2NhbGhvc3RcIikpICYmXG4gICAgICAgICFpbnB1dC5zdGFydHNXaXRoKFwiaHR0cDovL1wiKSAmJlxuICAgICAgICAhaW5wdXQuc3RhcnRzV2l0aChcImh0dHBzOi8vXCIpXG4gICAgKSB7XG4gICAgICAgIGlucHV0ID0gXCJodHRwczovL1wiICsgaW5wdXQ7XG4gICAgICAgIC8vIGF0IHRoaXMgcG9pbnQsIGl0IHNob3VsZCBiZSBhIHZhbGlkIFVSTC4gU28gd2UgdGVzdCB0aGF0IGJlZm9yZSBkb2luZyBhIHJlY3Vyc2l2ZSBjYWxsXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBuZXcgVVJMKGlucHV0KTtcbiAgICAgICAgICAgIHJldHVybiBub3JtYWxpc2VVUkxEb21haW5PclRocm93RXJyb3IoaW5wdXQsIHRydWUpO1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWVtcHR5XG4gICAgICAgIH0gY2F0Y2ggKGVycikge31cbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiUGxlYXNlIHByb3ZpZGUgYSB2YWxpZCBkb21haW4gbmFtZVwiKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/normalisedURLDomain.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/normalisedURLPath.js":
/*!************************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/normalisedURLPath.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar NormalisedURLPath = /** @class */ (function () {\n    function NormalisedURLPath(url) {\n        var _this = this;\n        this.startsWith = function (other) {\n            return _this.value.startsWith(other.value);\n        };\n        this.appendPath = function (other) {\n            return new NormalisedURLPath(_this.value + other.value);\n        };\n        this.getAsStringDangerous = function () {\n            // Otherwise, return value.\n            return _this.value;\n        };\n        this.value = normaliseURLPathOrThrowError(url);\n    }\n    return NormalisedURLPath;\n})();\nexports[\"default\"] = NormalisedURLPath;\nfunction normaliseURLPathOrThrowError(input) {\n    input = input.trim();\n    try {\n        if (!input.startsWith(\"http://\") && !input.startsWith(\"https://\")) {\n            throw new Error(\"Error converting to proper URL\");\n        }\n        var urlObj = new URL(input);\n        input = urlObj.pathname;\n        if (input.charAt(input.length - 1) === \"/\") {\n            return input.substr(0, input.length - 1);\n        }\n        return input;\n        // eslint-disable-next-line no-empty\n    } catch (err) {}\n    // not a valid URL\n    // If the input contains a . it means they have given a domain name.\n    // So we try assuming that they have given a domain name + path\n    if (\n        (domainGiven(input) || input.startsWith(\"localhost\")) &&\n        !input.startsWith(\"http://\") &&\n        !input.startsWith(\"https://\")\n    ) {\n        input = \"http://\" + input;\n        return normaliseURLPathOrThrowError(input);\n    }\n    if (input.charAt(0) !== \"/\") {\n        input = \"/\" + input;\n    }\n    // at this point, we should be able to convert it into a fake URL and recursively call this function.\n    try {\n        // test that we can convert this to prevent an infinite loop\n        new URL(\"http://example.com\" + input);\n        return normaliseURLPathOrThrowError(\"http://example.com\" + input);\n    } catch (err) {\n        throw new Error(\"Please provide a valid URL path\");\n    }\n}\nfunction domainGiven(input) {\n    // If no dot, return false.\n    if (input.indexOf(\".\") === -1 || input.startsWith(\"/\")) {\n        return false;\n    }\n    try {\n        var url = new URL(input);\n        return url.hostname.indexOf(\".\") !== -1;\n    } catch (e) {}\n    try {\n        var url = new URL(\"http://\" + input);\n        return url.hostname.indexOf(\".\") !== -1;\n    } catch (e) {}\n    return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL2xpYi9idWlsZC9ub3JtYWxpc2VkVVJMUGF0aC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdXBlcnRva2Vucy13ZWItanMvbGliL2J1aWxkL25vcm1hbGlzZWRVUkxQYXRoLmpzPzNiY2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiBDb3B5cmlnaHQgKGMpIDIwMjIsIFZSQUkgTGFicyBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb2Z0d2FyZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLlxuICpcbiAqIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heVxuICogb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdCBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVRcbiAqIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZVxuICogTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgTm9ybWFsaXNlZFVSTFBhdGggPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTm9ybWFsaXNlZFVSTFBhdGgodXJsKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMuc3RhcnRzV2l0aCA9IGZ1bmN0aW9uIChvdGhlcikge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzLnZhbHVlLnN0YXJ0c1dpdGgob3RoZXIudmFsdWUpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLmFwcGVuZFBhdGggPSBmdW5jdGlvbiAob3RoZXIpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgTm9ybWFsaXNlZFVSTFBhdGgoX3RoaXMudmFsdWUgKyBvdGhlci52YWx1ZSk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuZ2V0QXNTdHJpbmdEYW5nZXJvdXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAvLyBPdGhlcndpc2UsIHJldHVybiB2YWx1ZS5cbiAgICAgICAgICAgIHJldHVybiBfdGhpcy52YWx1ZTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy52YWx1ZSA9IG5vcm1hbGlzZVVSTFBhdGhPclRocm93RXJyb3IodXJsKTtcbiAgICB9XG4gICAgcmV0dXJuIE5vcm1hbGlzZWRVUkxQYXRoO1xufSkoKTtcbmV4cG9ydHMuZGVmYXVsdCA9IE5vcm1hbGlzZWRVUkxQYXRoO1xuZnVuY3Rpb24gbm9ybWFsaXNlVVJMUGF0aE9yVGhyb3dFcnJvcihpbnB1dCkge1xuICAgIGlucHV0ID0gaW5wdXQudHJpbSgpO1xuICAgIHRyeSB7XG4gICAgICAgIGlmICghaW5wdXQuc3RhcnRzV2l0aChcImh0dHA6Ly9cIikgJiYgIWlucHV0LnN0YXJ0c1dpdGgoXCJodHRwczovL1wiKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXJyb3IgY29udmVydGluZyB0byBwcm9wZXIgVVJMXCIpO1xuICAgICAgICB9XG4gICAgICAgIHZhciB1cmxPYmogPSBuZXcgVVJMKGlucHV0KTtcbiAgICAgICAgaW5wdXQgPSB1cmxPYmoucGF0aG5hbWU7XG4gICAgICAgIGlmIChpbnB1dC5jaGFyQXQoaW5wdXQubGVuZ3RoIC0gMSkgPT09IFwiL1wiKSB7XG4gICAgICAgICAgICByZXR1cm4gaW5wdXQuc3Vic3RyKDAsIGlucHV0Lmxlbmd0aCAtIDEpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpbnB1dDtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWVtcHR5XG4gICAgfSBjYXRjaCAoZXJyKSB7fVxuICAgIC8vIG5vdCBhIHZhbGlkIFVSTFxuICAgIC8vIElmIHRoZSBpbnB1dCBjb250YWlucyBhIC4gaXQgbWVhbnMgdGhleSBoYXZlIGdpdmVuIGEgZG9tYWluIG5hbWUuXG4gICAgLy8gU28gd2UgdHJ5IGFzc3VtaW5nIHRoYXQgdGhleSBoYXZlIGdpdmVuIGEgZG9tYWluIG5hbWUgKyBwYXRoXG4gICAgaWYgKFxuICAgICAgICAoZG9tYWluR2l2ZW4oaW5wdXQpIHx8IGlucHV0LnN0YXJ0c1dpdGgoXCJsb2NhbGhvc3RcIikpICYmXG4gICAgICAgICFpbnB1dC5zdGFydHNXaXRoKFwiaHR0cDovL1wiKSAmJlxuICAgICAgICAhaW5wdXQuc3RhcnRzV2l0aChcImh0dHBzOi8vXCIpXG4gICAgKSB7XG4gICAgICAgIGlucHV0ID0gXCJodHRwOi8vXCIgKyBpbnB1dDtcbiAgICAgICAgcmV0dXJuIG5vcm1hbGlzZVVSTFBhdGhPclRocm93RXJyb3IoaW5wdXQpO1xuICAgIH1cbiAgICBpZiAoaW5wdXQuY2hhckF0KDApICE9PSBcIi9cIikge1xuICAgICAgICBpbnB1dCA9IFwiL1wiICsgaW5wdXQ7XG4gICAgfVxuICAgIC8vIGF0IHRoaXMgcG9pbnQsIHdlIHNob3VsZCBiZSBhYmxlIHRvIGNvbnZlcnQgaXQgaW50byBhIGZha2UgVVJMIGFuZCByZWN1cnNpdmVseSBjYWxsIHRoaXMgZnVuY3Rpb24uXG4gICAgdHJ5IHtcbiAgICAgICAgLy8gdGVzdCB0aGF0IHdlIGNhbiBjb252ZXJ0IHRoaXMgdG8gcHJldmVudCBhbiBpbmZpbml0ZSBsb29wXG4gICAgICAgIG5ldyBVUkwoXCJodHRwOi8vZXhhbXBsZS5jb21cIiArIGlucHV0KTtcbiAgICAgICAgcmV0dXJuIG5vcm1hbGlzZVVSTFBhdGhPclRocm93RXJyb3IoXCJodHRwOi8vZXhhbXBsZS5jb21cIiArIGlucHV0KTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUGxlYXNlIHByb3ZpZGUgYSB2YWxpZCBVUkwgcGF0aFwiKTtcbiAgICB9XG59XG5mdW5jdGlvbiBkb21haW5HaXZlbihpbnB1dCkge1xuICAgIC8vIElmIG5vIGRvdCwgcmV0dXJuIGZhbHNlLlxuICAgIGlmIChpbnB1dC5pbmRleE9mKFwiLlwiKSA9PT0gLTEgfHwgaW5wdXQuc3RhcnRzV2l0aChcIi9cIikpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICB2YXIgdXJsID0gbmV3IFVSTChpbnB1dCk7XG4gICAgICAgIHJldHVybiB1cmwuaG9zdG5hbWUuaW5kZXhPZihcIi5cIikgIT09IC0xO1xuICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgdHJ5IHtcbiAgICAgICAgdmFyIHVybCA9IG5ldyBVUkwoXCJodHRwOi8vXCIgKyBpbnB1dCk7XG4gICAgICAgIHJldHVybiB1cmwuaG9zdG5hbWUuaW5kZXhPZihcIi5cIikgIT09IC0xO1xuICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/normalisedURLPath.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/postSuperTokensInitCallbacks.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/postSuperTokensInitCallbacks.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PostSuperTokensInitCallbacks = void 0;\nvar PostSuperTokensInitCallbacks = /** @class */ (function () {\n    function PostSuperTokensInitCallbacks() {}\n    PostSuperTokensInitCallbacks.addPostInitCallback = function (cb) {\n        PostSuperTokensInitCallbacks.postInitCallbacks.push(cb);\n    };\n    PostSuperTokensInitCallbacks.runPostInitCallbacks = function () {\n        for (var _i = 0, _a = PostSuperTokensInitCallbacks.postInitCallbacks; _i < _a.length; _i++) {\n            var cb = _a[_i];\n            cb();\n        }\n    };\n    PostSuperTokensInitCallbacks.postInitCallbacks = [];\n    return PostSuperTokensInitCallbacks;\n})();\nexports.PostSuperTokensInitCallbacks = PostSuperTokensInitCallbacks;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL2xpYi9idWlsZC9wb3N0U3VwZXJUb2tlbnNJbml0Q2FsbGJhY2tzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEVBQThFLGdCQUFnQjtBQUM5RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdXBlcnRva2Vucy13ZWItanMvbGliL2J1aWxkL3Bvc3RTdXBlclRva2Vuc0luaXRDYWxsYmFja3MuanM/Njk2NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIENvcHlyaWdodCAoYykgMjAyMiwgVlJBSSBMYWJzIGFuZC9vciBpdHMgYWZmaWxpYXRlcy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvZnR3YXJlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpIGFzIHB1Ymxpc2hlZCBieSB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24uXG4gKlxuICogWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5XG4gKiBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVFxuICogV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlXG4gKiBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9zdFN1cGVyVG9rZW5zSW5pdENhbGxiYWNrcyA9IHZvaWQgMDtcbnZhciBQb3N0U3VwZXJUb2tlbnNJbml0Q2FsbGJhY2tzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFBvc3RTdXBlclRva2Vuc0luaXRDYWxsYmFja3MoKSB7fVxuICAgIFBvc3RTdXBlclRva2Vuc0luaXRDYWxsYmFja3MuYWRkUG9zdEluaXRDYWxsYmFjayA9IGZ1bmN0aW9uIChjYikge1xuICAgICAgICBQb3N0U3VwZXJUb2tlbnNJbml0Q2FsbGJhY2tzLnBvc3RJbml0Q2FsbGJhY2tzLnB1c2goY2IpO1xuICAgIH07XG4gICAgUG9zdFN1cGVyVG9rZW5zSW5pdENhbGxiYWNrcy5ydW5Qb3N0SW5pdENhbGxiYWNrcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBfYSA9IFBvc3RTdXBlclRva2Vuc0luaXRDYWxsYmFja3MucG9zdEluaXRDYWxsYmFja3M7IF9pIDwgX2EubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICB2YXIgY2IgPSBfYVtfaV07XG4gICAgICAgICAgICBjYigpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBQb3N0U3VwZXJUb2tlbnNJbml0Q2FsbGJhY2tzLnBvc3RJbml0Q2FsbGJhY2tzID0gW107XG4gICAgcmV0dXJuIFBvc3RTdXBlclRva2Vuc0luaXRDYWxsYmFja3M7XG59KSgpO1xuZXhwb3J0cy5Qb3N0U3VwZXJUb2tlbnNJbml0Q2FsbGJhY2tzID0gUG9zdFN1cGVyVG9rZW5zSW5pdENhbGxiYWNrcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/postSuperTokensInitCallbacks.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/querier.js":
/*!**************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/querier.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __assign =\n    (this && this.__assign) ||\n    function () {\n        __assign =\n            Object.assign ||\n            function (t) {\n                for (var s, i = 1, n = arguments.length; i < n; i++) {\n                    s = arguments[i];\n                    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n                }\n                return t;\n            };\n        return __assign.apply(this, arguments);\n    };\nvar __awaiter =\n    (this && this.__awaiter) ||\n    function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n            return value instanceof P\n                ? value\n                : new P(function (resolve) {\n                      resolve(value);\n                  });\n        }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n                try {\n                    step(generator.next(value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function rejected(value) {\n                try {\n                    step(generator[\"throw\"](value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function step(result) {\n                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\nvar __generator =\n    (this && this.__generator) ||\n    function (thisArg, body) {\n        var _ = {\n                label: 0,\n                sent: function () {\n                    if (t[0] & 1) throw t[1];\n                    return t[1];\n                },\n                trys: [],\n                ops: [],\n            },\n            f,\n            y,\n            t,\n            g;\n        return (\n            (g = { next: verb(0), throw: verb(1), return: verb(2) }),\n            typeof Symbol === \"function\" &&\n                (g[Symbol.iterator] = function () {\n                    return this;\n                }),\n            g\n        );\n        function verb(n) {\n            return function (v) {\n                return step([n, v]);\n            };\n        }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (\n                        ((f = 1),\n                        y &&\n                            (t =\n                                op[0] & 2\n                                    ? y[\"return\"]\n                                    : op[0]\n                                    ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0)\n                                    : y.next) &&\n                            !(t = t.call(y, op[1])).done)\n                    )\n                        return t;\n                    if (((y = 0), t)) op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (\n                                !((t = _.trys), (t = t.length > 0 && t[t.length - 1])) &&\n                                (op[0] === 6 || op[0] === 2)\n                            ) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2]) _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                } catch (e) {\n                    op = [6, e];\n                    y = 0;\n                } finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5) throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar normalisedURLPath_1 = __webpack_require__(/*! ./normalisedURLPath */ \"./node_modules/supertokens-web-js/lib/build/normalisedURLPath.js\");\nvar version_1 = __webpack_require__(/*! ./version */ \"./node_modules/supertokens-web-js/lib/build/version.js\");\nvar error_1 = __webpack_require__(/*! ./error */ \"./node_modules/supertokens-web-js/lib/build/error.js\");\n/**\n * When network calls are made the Querier calls .clone() on the response before:\n * 1. Calling the post API hook\n * 2. Calling .json() when trying to read the body\n *\n * This is because the SDK needs to read the json body but we also want to allow users to read\n * the json body themselves (either in the post api hook or from the result of recipe functions)\n * for custom response handling. Since the body can only be read once we use .clone() to allow\n * for multiple reads.\n */\nvar Querier = /** @class */ (function () {\n    function Querier(recipeId, appInfo) {\n        var _this = this;\n        this.get = function (path, config, queryParams, preAPIHook, postAPIHook) {\n            return __awaiter(_this, void 0, void 0, function () {\n                var result, jsonBody;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            return [\n                                4 /*yield*/,\n                                this.fetch(\n                                    this.getFullUrl(path, queryParams),\n                                    __assign({ method: \"GET\" }, config),\n                                    preAPIHook,\n                                    postAPIHook\n                                ),\n                            ];\n                        case 1:\n                            result = _b.sent();\n                            return [4 /*yield*/, this.getResponseJsonOrThrowGeneralError(result)];\n                        case 2:\n                            jsonBody = _b.sent();\n                            return [\n                                2 /*return*/,\n                                {\n                                    jsonBody: jsonBody,\n                                    fetchResponse: result,\n                                },\n                            ];\n                    }\n                });\n            });\n        };\n        this.post = function (path, config, preAPIHook, postAPIHook) {\n            return __awaiter(_this, void 0, void 0, function () {\n                var result, jsonBody;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            if (config.body === undefined) {\n                                throw new Error(\"Post request must have a body\");\n                            }\n                            return [\n                                4 /*yield*/,\n                                this.fetch(\n                                    this.getFullUrl(path),\n                                    __assign({ method: \"POST\" }, config),\n                                    preAPIHook,\n                                    postAPIHook\n                                ),\n                            ];\n                        case 1:\n                            result = _b.sent();\n                            return [4 /*yield*/, this.getResponseJsonOrThrowGeneralError(result)];\n                        case 2:\n                            jsonBody = _b.sent();\n                            return [\n                                2 /*return*/,\n                                {\n                                    jsonBody: jsonBody,\n                                    fetchResponse: result,\n                                },\n                            ];\n                    }\n                });\n            });\n        };\n        this.delete = function (path, config, preAPIHook, postAPIHook) {\n            return __awaiter(_this, void 0, void 0, function () {\n                var result, jsonBody;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            return [\n                                4 /*yield*/,\n                                this.fetch(\n                                    this.getFullUrl(path),\n                                    __assign({ method: \"DELETE\" }, config),\n                                    preAPIHook,\n                                    postAPIHook\n                                ),\n                            ];\n                        case 1:\n                            result = _b.sent();\n                            return [4 /*yield*/, this.getResponseJsonOrThrowGeneralError(result)];\n                        case 2:\n                            jsonBody = _b.sent();\n                            return [\n                                2 /*return*/,\n                                {\n                                    jsonBody: jsonBody,\n                                    fetchResponse: result,\n                                },\n                            ];\n                    }\n                });\n            });\n        };\n        this.put = function (path, config, preAPIHook, postAPIHook) {\n            return __awaiter(_this, void 0, void 0, function () {\n                var result, jsonBody;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            return [\n                                4 /*yield*/,\n                                this.fetch(\n                                    this.getFullUrl(path),\n                                    __assign({ method: \"PUT\" }, config),\n                                    preAPIHook,\n                                    postAPIHook\n                                ),\n                            ];\n                        case 1:\n                            result = _b.sent();\n                            return [4 /*yield*/, this.getResponseJsonOrThrowGeneralError(result)];\n                        case 2:\n                            jsonBody = _b.sent();\n                            return [\n                                2 /*return*/,\n                                {\n                                    jsonBody: jsonBody,\n                                    fetchResponse: result,\n                                },\n                            ];\n                    }\n                });\n            });\n        };\n        this.fetch = function (url, config, preAPIHook, postAPIHook) {\n            return __awaiter(_this, void 0, void 0, function () {\n                var headers, _b, requestInit, modifiedUrl, result, reponseForPostAPI;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            if (config === undefined) {\n                                headers = {};\n                            } else {\n                                headers = config.headers;\n                            }\n                            return [\n                                4 /*yield*/,\n                                this.callPreAPIHook({\n                                    preAPIHook: preAPIHook,\n                                    url: url,\n                                    requestInit: __assign(__assign({}, config), {\n                                        headers: __assign(__assign({}, headers), {\n                                            \"fdi-version\": version_1.supported_fdi.join(\",\"),\n                                            \"Content-Type\": \"application/json\",\n                                            rid: this.recipeId,\n                                        }),\n                                    }),\n                                }),\n                            ];\n                        case 1:\n                            (_b = _c.sent()), (requestInit = _b.requestInit), (modifiedUrl = _b.url);\n                            return [4 /*yield*/, fetch(modifiedUrl, requestInit)];\n                        case 2:\n                            result = _c.sent();\n                            if (result.status >= 300) {\n                                throw result;\n                            }\n                            if (!(postAPIHook !== undefined)) return [3 /*break*/, 4];\n                            reponseForPostAPI = result.clone();\n                            return [\n                                4 /*yield*/,\n                                postAPIHook({\n                                    requestInit: requestInit,\n                                    url: url,\n                                    fetchResponse: reponseForPostAPI,\n                                }),\n                            ];\n                        case 3:\n                            _c.sent();\n                            _c.label = 4;\n                        case 4:\n                            return [2 /*return*/, result];\n                    }\n                });\n            });\n        };\n        /*\n         * For backward compatibility\n         */\n        this.callPreAPIHook = function (context) {\n            return __awaiter(_this, void 0, void 0, function () {\n                var result;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            if (context.preAPIHook === undefined) {\n                                return [\n                                    2 /*return*/,\n                                    {\n                                        url: context.url,\n                                        requestInit: context.requestInit,\n                                    },\n                                ];\n                            }\n                            return [\n                                4 /*yield*/,\n                                context.preAPIHook({\n                                    url: context.url,\n                                    requestInit: context.requestInit,\n                                }),\n                            ];\n                        case 1:\n                            result = _b.sent();\n                            return [2 /*return*/, result];\n                    }\n                });\n            });\n        };\n        this.getFullUrl = function (pathStr, queryParams) {\n            var path = new normalisedURLPath_1.default(pathStr);\n            var fullUrl = \"\"\n                .concat(_this.appInfo.apiDomain.getAsStringDangerous())\n                .concat(_this.appInfo.apiBasePath.getAsStringDangerous())\n                .concat(path.getAsStringDangerous());\n            if (queryParams === undefined) {\n                return fullUrl;\n            }\n            // If query params, add.\n            return fullUrl + \"?\" + new URLSearchParams(queryParams);\n        };\n        this.getResponseJsonOrThrowGeneralError = function (response) {\n            return __awaiter(_this, void 0, void 0, function () {\n                var json, message;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            return [4 /*yield*/, response.clone().json()];\n                        case 1:\n                            json = _b.sent();\n                            if (json.status === \"GENERAL_ERROR\") {\n                                message = json.message === undefined ? \"No Error Message Provided\" : json.message;\n                                throw new error_1.default(message);\n                            }\n                            return [2 /*return*/, json];\n                    }\n                });\n            });\n        };\n        this.recipeId = recipeId;\n        this.appInfo = appInfo;\n    }\n    var _a;\n    _a = Querier;\n    Querier.preparePreAPIHook = function (_b) {\n        var recipePreAPIHook = _b.recipePreAPIHook,\n            action = _b.action,\n            options = _b.options,\n            userContext = _b.userContext;\n        return function (context) {\n            return __awaiter(void 0, void 0, void 0, function () {\n                var postRecipeHookContext;\n                return __generator(_a, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            return [\n                                4 /*yield*/,\n                                recipePreAPIHook(\n                                    __assign(__assign({}, context), { action: action, userContext: userContext })\n                                ),\n                            ];\n                        case 1:\n                            postRecipeHookContext = _b.sent();\n                            if (options === undefined || options.preAPIHook === undefined) {\n                                return [2 /*return*/, postRecipeHookContext];\n                            }\n                            return [\n                                2 /*return*/,\n                                options.preAPIHook({\n                                    url: postRecipeHookContext.url,\n                                    requestInit: postRecipeHookContext.requestInit,\n                                    userContext: userContext,\n                                }),\n                            ];\n                    }\n                });\n            });\n        };\n    };\n    Querier.preparePostAPIHook = function (_b) {\n        var recipePostAPIHook = _b.recipePostAPIHook,\n            action = _b.action,\n            userContext = _b.userContext;\n        return function (context) {\n            return __awaiter(void 0, void 0, void 0, function () {\n                return __generator(_a, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            return [\n                                4 /*yield*/,\n                                recipePostAPIHook(\n                                    __assign(__assign({}, context), { userContext: userContext, action: action })\n                                ),\n                            ];\n                        case 1:\n                            _b.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n    };\n    return Querier;\n})();\nexports[\"default\"] = Querier;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/querier.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/recipe/authRecipe/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/recipe/authRecipe/index.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar __extends =\n    (this && this.__extends) ||\n    (function () {\n        var extendStatics = function (d, b) {\n            extendStatics =\n                Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array &&\n                    function (d, b) {\n                        d.__proto__ = b;\n                    }) ||\n                function (d, b) {\n                    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n                };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());\n        };\n    })();\nvar __awaiter =\n    (this && this.__awaiter) ||\n    function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n            return value instanceof P\n                ? value\n                : new P(function (resolve) {\n                      resolve(value);\n                  });\n        }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n                try {\n                    step(generator.next(value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function rejected(value) {\n                try {\n                    step(generator[\"throw\"](value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function step(result) {\n                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\nvar __generator =\n    (this && this.__generator) ||\n    function (thisArg, body) {\n        var _ = {\n                label: 0,\n                sent: function () {\n                    if (t[0] & 1) throw t[1];\n                    return t[1];\n                },\n                trys: [],\n                ops: [],\n            },\n            f,\n            y,\n            t,\n            g;\n        return (\n            (g = { next: verb(0), throw: verb(1), return: verb(2) }),\n            typeof Symbol === \"function\" &&\n                (g[Symbol.iterator] = function () {\n                    return this;\n                }),\n            g\n        );\n        function verb(n) {\n            return function (v) {\n                return step([n, v]);\n            };\n        }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (\n                        ((f = 1),\n                        y &&\n                            (t =\n                                op[0] & 2\n                                    ? y[\"return\"]\n                                    : op[0]\n                                    ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0)\n                                    : y.next) &&\n                            !(t = t.call(y, op[1])).done)\n                    )\n                        return t;\n                    if (((y = 0), t)) op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (\n                                !((t = _.trys), (t = t.length > 0 && t[t.length - 1])) &&\n                                (op[0] === 6 || op[0] === 2)\n                            ) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2]) _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                } catch (e) {\n                    op = [6, e];\n                    y = 0;\n                } finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5) throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar recipeModule_1 = __webpack_require__(/*! ../recipeModule */ \"./node_modules/supertokens-web-js/lib/build/recipe/recipeModule/index.js\");\nvar recipe_1 = __webpack_require__(/*! ../session/recipe */ \"./node_modules/supertokens-web-js/lib/build/recipe/session/recipe.js\");\nvar AuthRecipe = /** @class */ (function (_super) {\n    __extends(AuthRecipe, _super);\n    function AuthRecipe(config) {\n        var _this = _super.call(this, config) || this;\n        _this.signOut = function (input) {\n            return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            return [\n                                4 /*yield*/,\n                                recipe_1.default.getInstanceOrThrow().signOut({\n                                    userContext: input.userContext,\n                                }),\n                            ];\n                        case 1:\n                            return [2 /*return*/, _a.sent()];\n                    }\n                });\n            });\n        };\n        return _this;\n    }\n    return AuthRecipe;\n})(recipeModule_1.default);\nexports[\"default\"] = AuthRecipe;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/recipe/authRecipe/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/recipe/authRecipe/utils.js":
/*!******************************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/recipe/authRecipe/utils.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.normaliseAuthRecipe = void 0;\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar utils_1 = __webpack_require__(/*! ../recipeModule/utils */ \"./node_modules/supertokens-web-js/lib/build/recipe/recipeModule/utils.js\");\nfunction normaliseAuthRecipe(config) {\n    return (0, utils_1.normaliseRecipeModuleConfig)(config);\n}\nexports.normaliseAuthRecipe = normaliseAuthRecipe;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL2xpYi9idWlsZC9yZWNpcGUvYXV0aFJlY2lwZS91dGlscy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsbUJBQU8sQ0FBQyx1R0FBdUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdXBlcnRva2Vucy13ZWItanMvbGliL2J1aWxkL3JlY2lwZS9hdXRoUmVjaXBlL3V0aWxzLmpzPzUxMjEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm5vcm1hbGlzZUF1dGhSZWNpcGUgPSB2b2lkIDA7XG4vKiBDb3B5cmlnaHQgKGMpIDIwMjIsIFZSQUkgTGFicyBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb2Z0d2FyZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLlxuICpcbiAqIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heVxuICogb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdCBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVRcbiAqIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZVxuICogTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgdXRpbHNfMSA9IHJlcXVpcmUoXCIuLi9yZWNpcGVNb2R1bGUvdXRpbHNcIik7XG5mdW5jdGlvbiBub3JtYWxpc2VBdXRoUmVjaXBlKGNvbmZpZykge1xuICAgIHJldHVybiAoMCwgdXRpbHNfMS5ub3JtYWxpc2VSZWNpcGVNb2R1bGVDb25maWcpKGNvbmZpZyk7XG59XG5leHBvcnRzLm5vcm1hbGlzZUF1dGhSZWNpcGUgPSBub3JtYWxpc2VBdXRoUmVjaXBlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/recipe/authRecipe/utils.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/recipe/emailpassword/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/recipe/emailpassword/index.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __assign =\n    (this && this.__assign) ||\n    function () {\n        __assign =\n            Object.assign ||\n            function (t) {\n                for (var s, i = 1, n = arguments.length; i < n; i++) {\n                    s = arguments[i];\n                    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n                }\n                return t;\n            };\n        return __assign.apply(this, arguments);\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.signOut =\n    exports.getResetPasswordTokenFromURL =\n    exports.doesEmailExist =\n    exports.signIn =\n    exports.signUp =\n    exports.sendPasswordResetEmail =\n    exports.submitNewPassword =\n    exports.init =\n        void 0;\nvar recipe_1 = __webpack_require__(/*! ./recipe */ \"./node_modules/supertokens-web-js/lib/build/recipe/emailpassword/recipe.js\");\nvar utils_1 = __webpack_require__(/*! ../../utils */ \"./node_modules/supertokens-web-js/lib/build/utils.js\");\nvar RecipeWrapper = /** @class */ (function () {\n    function RecipeWrapper() {}\n    RecipeWrapper.init = function (config) {\n        return recipe_1.default.init(config);\n    };\n    RecipeWrapper.signOut = function (input) {\n        return recipe_1.default.getInstanceOrThrow().signOut({\n            userContext: (0, utils_1.getNormalisedUserContext)(\n                input === null || input === void 0 ? void 0 : input.userContext\n            ),\n        });\n    };\n    /**\n     * Submit a new password for the user\n     *\n     * @param formFields List of fields to send to the API exposed by the backend SDK (Refer to the {@link https://supertokens.com/docs/fdi API spec} to know more)\n     *\n     * @param userContext (OPTIONAL) Refer to {@link https://supertokens.com/docs/emailpassword/advanced-customizations/user-context the documentation}\n     *\n     * @param options (OPTIONAL) Use this to configure additional properties (for example pre api hooks)\n     *\n     * @returns `{status: \"OK\"}` if successfull\n     *\n     * @returns `{status: \"RESET_PASSWORD_INVALID_TOKEN_ERROR\"}` if the token in the URL is invalid\n     *\n     * @returns `{status: \"FIELD_ERROR\", formFields}` if the form field values are incorrect\n     *\n     * @throws STGeneralError if the API exposed by the backend SDKs returns `status: \"GENERAL_ERROR\"`\n     */\n    RecipeWrapper.submitNewPassword = function (input) {\n        return recipe_1.default\n            .getInstanceOrThrow()\n            .recipeImplementation.submitNewPassword(\n                __assign(__assign({}, input), { userContext: (0, utils_1.getNormalisedUserContext)(input.userContext) })\n            );\n    };\n    /**\n     * Send an email to the user for password reset\n     *\n     * @param formFields List of fields to send to the API exposed by the backend SDK (Refer to the {@link https://supertokens.com/docs/fdi API spec} to know more)\n     *\n     * @param userContext (OPTIONAL) Refer to {@link https://supertokens.com/docs/emailpassword/advanced-customizations/user-context the documentation}\n     *\n     * @param options (OPTIONAL) Use this to configure additional properties (for example pre api hooks)\n     *\n     * @returns `{status: \"OK\"}` if successfull\n     *\n     * @returns `{status: \"FIELD_ERROR\", formFields}` if the formFields dont match the ones in the configured in the backend SDKs\n     *\n     * @throws STGeneralError if the API exposed by the backend SDKs returns `status: \"GENERAL_ERROR\"`\n     */\n    RecipeWrapper.sendPasswordResetEmail = function (input) {\n        return recipe_1.default\n            .getInstanceOrThrow()\n            .recipeImplementation.sendPasswordResetEmail(\n                __assign(__assign({}, input), { userContext: (0, utils_1.getNormalisedUserContext)(input.userContext) })\n            );\n    };\n    /**\n     * Sign up a user with email and password\n     *\n     * @param formFields List of fields to send to the API exposed by the backend SDK (Refer to the {@link https://supertokens.com/docs/fdi API spec} to know more). Note that the form fields must match the ones configured in the backend SDKs\n     *\n     * @param userContext (OPTIONAL) Refer to {@link https://supertokens.com/docs/emailpassword/advanced-customizations/user-context the documentation}\n     *\n     * @param options (OPTIONAL) Use this to configure additional properties (for example pre api hooks)\n     *\n     * @returns `{status: \"OK\"}` if successfull\n     *\n     * @returns `{status: \"FIELD_ERROR\", formFields}` if the formFields dont match the ones in the configured in the backend SDKs\n     *\n     * @throws STGeneralError if the API exposed by the backend SDKs returns `status: \"GENERAL_ERROR\"`\n     */\n    RecipeWrapper.signUp = function (input) {\n        return recipe_1.default\n            .getInstanceOrThrow()\n            .recipeImplementation.signUp(\n                __assign(__assign({}, input), { userContext: (0, utils_1.getNormalisedUserContext)(input.userContext) })\n            );\n    };\n    /**\n     * Sign in a user with email and password\n     *\n     * @param formFields List of fields to send to the API exposed by the backend SDK (Refer to the {@link https://supertokens.com/docs/fdi API spec} to know more). Note that the form fields must match the ones configured in the backend SDKs\n     *\n     * @param userContext (OPTIONAL) Refer to {@link https://supertokens.com/docs/emailpassword/advanced-customizations/user-context the documentation}\n     *\n     * @param options (OPTIONAL) Use this to configure additional properties (for example pre api hooks)\n     *\n     * @returns `{status: \"OK\"}` if successfull\n     *\n     * @returns `{status: \"FIELD_ERROR\", formFields}` if the formFields dont match the ones in the configured in the backend SDKs\n     *\n     * @returns `{status: \"WRONG_CREDENTIALS_ERROR\"}` if the credentials are invalid\n     *\n     * @throws STGeneralError if the API exposed by the backend SDKs returns `status: \"GENERAL_ERROR\"`\n     */\n    RecipeWrapper.signIn = function (input) {\n        return recipe_1.default\n            .getInstanceOrThrow()\n            .recipeImplementation.signIn(\n                __assign(__assign({}, input), { userContext: (0, utils_1.getNormalisedUserContext)(input.userContext) })\n            );\n    };\n    /**\n     * Check if an email exists\n     *\n     * @param email The email to check\n     *\n     * @param userContext (OPTIONAL) Refer to {@link https://supertokens.com/docs/emailpassword/advanced-customizations/user-context the documentation}\n     *\n     * @param options (OPTIONAL) Use this to configure additional properties (for example pre api hooks)\n     *\n     * @returns `{status: \"OK\", doesExist: boolean}`\n     *\n     * @throws STGeneralError if the API exposed by the backend SDKs returns `status: \"GENERAL_ERROR\"`\n     */\n    RecipeWrapper.doesEmailExist = function (input) {\n        return recipe_1.default\n            .getInstanceOrThrow()\n            .recipeImplementation.doesEmailExist(\n                __assign(__assign({}, input), { userContext: (0, utils_1.getNormalisedUserContext)(input.userContext) })\n            );\n    };\n    /**\n     * Reads and returns the reset password token from the current URL\n     *\n     * @param userContext Refer to {@link https://supertokens.com/docs/emailpassword/advanced-customizations/user-context the documentation}\n     *\n     * @returns The \"token\" query parameter from the current location\n     */\n    RecipeWrapper.getResetPasswordTokenFromURL = function (input) {\n        return recipe_1.default.getInstanceOrThrow().recipeImplementation.getResetPasswordTokenFromURL(\n            __assign(__assign({}, input), {\n                userContext: (0, utils_1.getNormalisedUserContext)(\n                    input === null || input === void 0 ? void 0 : input.userContext\n                ),\n            })\n        );\n    };\n    return RecipeWrapper;\n})();\nexports[\"default\"] = RecipeWrapper;\nvar init = RecipeWrapper.init;\nexports.init = init;\nvar submitNewPassword = RecipeWrapper.submitNewPassword;\nexports.submitNewPassword = submitNewPassword;\nvar sendPasswordResetEmail = RecipeWrapper.sendPasswordResetEmail;\nexports.sendPasswordResetEmail = sendPasswordResetEmail;\nvar signUp = RecipeWrapper.signUp;\nexports.signUp = signUp;\nvar signIn = RecipeWrapper.signIn;\nexports.signIn = signIn;\nvar doesEmailExist = RecipeWrapper.doesEmailExist;\nexports.doesEmailExist = doesEmailExist;\nvar signOut = RecipeWrapper.signOut;\nexports.signOut = signOut;\nvar getResetPasswordTokenFromURL = RecipeWrapper.getResetPasswordTokenFromURL;\nexports.getResetPasswordTokenFromURL = getResetPasswordTokenFromURL;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/recipe/emailpassword/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/recipe/emailpassword/recipe.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/recipe/emailpassword/recipe.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar __extends =\n    (this && this.__extends) ||\n    (function () {\n        var extendStatics = function (d, b) {\n            extendStatics =\n                Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array &&\n                    function (d, b) {\n                        d.__proto__ = b;\n                    }) ||\n                function (d, b) {\n                    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n                };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());\n        };\n    })();\nvar __assign =\n    (this && this.__assign) ||\n    function () {\n        __assign =\n            Object.assign ||\n            function (t) {\n                for (var s, i = 1, n = arguments.length; i < n; i++) {\n                    s = arguments[i];\n                    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n                }\n                return t;\n            };\n        return __assign.apply(this, arguments);\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Recipe = void 0;\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/supertokens-web-js/lib/build/recipe/emailpassword/utils.js\");\nvar recipeImplementation_1 = __webpack_require__(/*! ./recipeImplementation */ \"./node_modules/supertokens-web-js/lib/build/recipe/emailpassword/recipeImplementation.js\");\nvar supertokens_js_override_1 = __webpack_require__(/*! supertokens-js-override */ \"./node_modules/supertokens-js-override/lib/build/index.js\");\nvar utils_2 = __webpack_require__(/*! ../../utils */ \"./node_modules/supertokens-web-js/lib/build/utils.js\");\nvar authRecipe_1 = __webpack_require__(/*! ../authRecipe */ \"./node_modules/supertokens-web-js/lib/build/recipe/authRecipe/index.js\");\nvar Recipe = /** @class */ (function (_super) {\n    __extends(Recipe, _super);\n    function Recipe(config) {\n        var _this = _super.call(this, (0, utils_1.normaliseUserInput)(config)) || this;\n        var builder = new supertokens_js_override_1.default(\n            (0, recipeImplementation_1.default)({\n                recipeId: _this.config.recipeId,\n                appInfo: _this.config.appInfo,\n                preAPIHook: _this.config.preAPIHook,\n                postAPIHook: _this.config.postAPIHook,\n            })\n        );\n        _this.recipeImplementation = builder.override(_this.config.override.functions).build();\n        return _this;\n    }\n    Recipe.init = function (config) {\n        return function (appInfo) {\n            Recipe.instance = new Recipe(\n                __assign(__assign({}, config), { recipeId: Recipe.RECIPE_ID, appInfo: appInfo })\n            );\n            return Recipe.instance;\n        };\n    };\n    Recipe.getInstanceOrThrow = function () {\n        if (Recipe.instance === undefined) {\n            var error = \"No instance of EmailPassword found. Make sure to call the EmailPassword.init method.\";\n            error = (0, utils_2.checkForSSRErrorAndAppendIfNeeded)(error);\n            throw Error(error);\n        }\n        return Recipe.instance;\n    };\n    Recipe.reset = function () {\n        if (!(0, utils_2.isTest)()) {\n            return;\n        }\n        Recipe.instance = undefined;\n        return;\n    };\n    Recipe.RECIPE_ID = \"emailpassword\";\n    return Recipe;\n})(authRecipe_1.default);\nexports.Recipe = Recipe;\nexports[\"default\"] = Recipe;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL2xpYi9idWlsZC9yZWNpcGUvZW1haWxwYXNzd29yZC9yZWNpcGUuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGdCQUFnQjtBQUNuQztBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELE9BQU87QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLGNBQWMsbUJBQU8sQ0FBQywwRkFBUztBQUMvQiw2QkFBNkIsbUJBQU8sQ0FBQyx3SEFBd0I7QUFDN0QsZ0NBQWdDLG1CQUFPLENBQUMsMEZBQXlCO0FBQ2pFLGNBQWMsbUJBQU8sQ0FBQyx5RUFBYTtBQUNuQyxtQkFBbUIsbUJBQU8sQ0FBQyw2RkFBZTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxhQUFhLDhDQUE4QztBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsY0FBYztBQUNkLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdXBlcnRva2Vucy13ZWItanMvbGliL2J1aWxkL3JlY2lwZS9lbWFpbHBhc3N3b3JkL3JlY2lwZS5qcz83NDQ3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogQ29weXJpZ2h0IChjKSAyMDIyLCBWUkFJIExhYnMgYW5kL29yIGl0cyBhZmZpbGlhdGVzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc29mdHdhcmUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIikgYXMgcHVibGlzaGVkIGJ5IHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbi5cbiAqXG4gKiBZb3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXlcbiAqIG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUXG4gKiBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGVcbiAqIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fZXh0ZW5kcyA9XG4gICAgKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8XG4gICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICAgICAgZXh0ZW5kU3RhdGljcyA9XG4gICAgICAgICAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiZcbiAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGQuX19wcm90b19fID0gYjtcbiAgICAgICAgICAgICAgICAgICAgfSkgfHxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgICAgICBmdW5jdGlvbiBfXygpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnN0cnVjdG9yID0gZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlKSwgbmV3IF9fKCkpO1xuICAgICAgICB9O1xuICAgIH0pKCk7XG52YXIgX19hc3NpZ24gPVxuICAgICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8XG4gICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBfX2Fzc2lnbiA9XG4gICAgICAgICAgICBPYmplY3QuYXNzaWduIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpIHRbcF0gPSBzW3BdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdDtcbiAgICAgICAgICAgIH07XG4gICAgICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJlY2lwZSA9IHZvaWQgMDtcbnZhciB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG52YXIgcmVjaXBlSW1wbGVtZW50YXRpb25fMSA9IHJlcXVpcmUoXCIuL3JlY2lwZUltcGxlbWVudGF0aW9uXCIpO1xudmFyIHN1cGVydG9rZW5zX2pzX292ZXJyaWRlXzEgPSByZXF1aXJlKFwic3VwZXJ0b2tlbnMtanMtb3ZlcnJpZGVcIik7XG52YXIgdXRpbHNfMiA9IHJlcXVpcmUoXCIuLi8uLi91dGlsc1wiKTtcbnZhciBhdXRoUmVjaXBlXzEgPSByZXF1aXJlKFwiLi4vYXV0aFJlY2lwZVwiKTtcbnZhciBSZWNpcGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFJlY2lwZSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBSZWNpcGUoY29uZmlnKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsICgwLCB1dGlsc18xLm5vcm1hbGlzZVVzZXJJbnB1dCkoY29uZmlnKSkgfHwgdGhpcztcbiAgICAgICAgdmFyIGJ1aWxkZXIgPSBuZXcgc3VwZXJ0b2tlbnNfanNfb3ZlcnJpZGVfMS5kZWZhdWx0KFxuICAgICAgICAgICAgKDAsIHJlY2lwZUltcGxlbWVudGF0aW9uXzEuZGVmYXVsdCkoe1xuICAgICAgICAgICAgICAgIHJlY2lwZUlkOiBfdGhpcy5jb25maWcucmVjaXBlSWQsXG4gICAgICAgICAgICAgICAgYXBwSW5mbzogX3RoaXMuY29uZmlnLmFwcEluZm8sXG4gICAgICAgICAgICAgICAgcHJlQVBJSG9vazogX3RoaXMuY29uZmlnLnByZUFQSUhvb2ssXG4gICAgICAgICAgICAgICAgcG9zdEFQSUhvb2s6IF90aGlzLmNvbmZpZy5wb3N0QVBJSG9vayxcbiAgICAgICAgICAgIH0pXG4gICAgICAgICk7XG4gICAgICAgIF90aGlzLnJlY2lwZUltcGxlbWVudGF0aW9uID0gYnVpbGRlci5vdmVycmlkZShfdGhpcy5jb25maWcub3ZlcnJpZGUuZnVuY3Rpb25zKS5idWlsZCgpO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIFJlY2lwZS5pbml0ID0gZnVuY3Rpb24gKGNvbmZpZykge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGFwcEluZm8pIHtcbiAgICAgICAgICAgIFJlY2lwZS5pbnN0YW5jZSA9IG5ldyBSZWNpcGUoXG4gICAgICAgICAgICAgICAgX19hc3NpZ24oX19hc3NpZ24oe30sIGNvbmZpZyksIHsgcmVjaXBlSWQ6IFJlY2lwZS5SRUNJUEVfSUQsIGFwcEluZm86IGFwcEluZm8gfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICByZXR1cm4gUmVjaXBlLmluc3RhbmNlO1xuICAgICAgICB9O1xuICAgIH07XG4gICAgUmVjaXBlLmdldEluc3RhbmNlT3JUaHJvdyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKFJlY2lwZS5pbnN0YW5jZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB2YXIgZXJyb3IgPSBcIk5vIGluc3RhbmNlIG9mIEVtYWlsUGFzc3dvcmQgZm91bmQuIE1ha2Ugc3VyZSB0byBjYWxsIHRoZSBFbWFpbFBhc3N3b3JkLmluaXQgbWV0aG9kLlwiO1xuICAgICAgICAgICAgZXJyb3IgPSAoMCwgdXRpbHNfMi5jaGVja0ZvclNTUkVycm9yQW5kQXBwZW5kSWZOZWVkZWQpKGVycm9yKTtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGVycm9yKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUmVjaXBlLmluc3RhbmNlO1xuICAgIH07XG4gICAgUmVjaXBlLnJlc2V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoISgwLCB1dGlsc18yLmlzVGVzdCkoKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIFJlY2lwZS5pbnN0YW5jZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgcmV0dXJuO1xuICAgIH07XG4gICAgUmVjaXBlLlJFQ0lQRV9JRCA9IFwiZW1haWxwYXNzd29yZFwiO1xuICAgIHJldHVybiBSZWNpcGU7XG59KShhdXRoUmVjaXBlXzEuZGVmYXVsdCk7XG5leHBvcnRzLlJlY2lwZSA9IFJlY2lwZTtcbmV4cG9ydHMuZGVmYXVsdCA9IFJlY2lwZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/recipe/emailpassword/recipe.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/recipe/emailpassword/recipeImplementation.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/recipe/emailpassword/recipeImplementation.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter =\n    (this && this.__awaiter) ||\n    function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n            return value instanceof P\n                ? value\n                : new P(function (resolve) {\n                      resolve(value);\n                  });\n        }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n                try {\n                    step(generator.next(value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function rejected(value) {\n                try {\n                    step(generator[\"throw\"](value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function step(result) {\n                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\nvar __generator =\n    (this && this.__generator) ||\n    function (thisArg, body) {\n        var _ = {\n                label: 0,\n                sent: function () {\n                    if (t[0] & 1) throw t[1];\n                    return t[1];\n                },\n                trys: [],\n                ops: [],\n            },\n            f,\n            y,\n            t,\n            g;\n        return (\n            (g = { next: verb(0), throw: verb(1), return: verb(2) }),\n            typeof Symbol === \"function\" &&\n                (g[Symbol.iterator] = function () {\n                    return this;\n                }),\n            g\n        );\n        function verb(n) {\n            return function (v) {\n                return step([n, v]);\n            };\n        }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (\n                        ((f = 1),\n                        y &&\n                            (t =\n                                op[0] & 2\n                                    ? y[\"return\"]\n                                    : op[0]\n                                    ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0)\n                                    : y.next) &&\n                            !(t = t.call(y, op[1])).done)\n                    )\n                        return t;\n                    if (((y = 0), t)) op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (\n                                !((t = _.trys), (t = t.length > 0 && t[t.length - 1])) &&\n                                (op[0] === 6 || op[0] === 2)\n                            ) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2]) _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                } catch (e) {\n                    op = [6, e];\n                    y = 0;\n                } finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5) throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getRecipeImplementation = void 0;\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar querier_1 = __webpack_require__(/*! ../../querier */ \"./node_modules/supertokens-web-js/lib/build/querier.js\");\nvar utils_1 = __webpack_require__(/*! ../../utils */ \"./node_modules/supertokens-web-js/lib/build/utils.js\");\nfunction getRecipeImplementation(recipeImplInput) {\n    var querier = new querier_1.default(recipeImplInput.recipeId, recipeImplInput.appInfo);\n    return {\n        submitNewPassword: function (_a) {\n            var formFields = _a.formFields,\n                options = _a.options,\n                userContext = _a.userContext;\n            return __awaiter(this, void 0, void 0, function () {\n                var token, _b, jsonBody, fetchResponse;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            token = this.getResetPasswordTokenFromURL({\n                                userContext: userContext,\n                            });\n                            return [\n                                4 /*yield*/,\n                                querier.post(\n                                    \"/user/password/reset\",\n                                    { body: JSON.stringify({ formFields: formFields, token: token, method: \"token\" }) },\n                                    querier_1.default.preparePreAPIHook({\n                                        recipePreAPIHook: recipeImplInput.preAPIHook,\n                                        action: \"SUBMIT_NEW_PASSWORD\",\n                                        options: options,\n                                        userContext: userContext,\n                                    }),\n                                    querier_1.default.preparePostAPIHook({\n                                        recipePostAPIHook: recipeImplInput.postAPIHook,\n                                        action: \"SUBMIT_NEW_PASSWORD\",\n                                        userContext: userContext,\n                                    })\n                                ),\n                            ];\n                        case 1:\n                            (_b = _c.sent()), (jsonBody = _b.jsonBody), (fetchResponse = _b.fetchResponse);\n                            if (jsonBody.status === \"FIELD_ERROR\") {\n                                return [\n                                    2 /*return*/,\n                                    {\n                                        status: \"FIELD_ERROR\",\n                                        formFields: jsonBody.formFields,\n                                        fetchResponse: fetchResponse,\n                                    },\n                                ];\n                            }\n                            return [\n                                2 /*return*/,\n                                {\n                                    status: jsonBody.status,\n                                    fetchResponse: fetchResponse,\n                                },\n                            ];\n                    }\n                });\n            });\n        },\n        sendPasswordResetEmail: function (_a) {\n            var formFields = _a.formFields,\n                options = _a.options,\n                userContext = _a.userContext;\n            return __awaiter(this, void 0, void 0, function () {\n                var _b, jsonBody, fetchResponse;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            return [\n                                4 /*yield*/,\n                                querier.post(\n                                    \"/user/password/reset/token\",\n                                    { body: JSON.stringify({ formFields: formFields }) },\n                                    querier_1.default.preparePreAPIHook({\n                                        recipePreAPIHook: recipeImplInput.preAPIHook,\n                                        action: \"SEND_RESET_PASSWORD_EMAIL\",\n                                        options: options,\n                                        userContext: userContext,\n                                    }),\n                                    querier_1.default.preparePostAPIHook({\n                                        recipePostAPIHook: recipeImplInput.postAPIHook,\n                                        action: \"SEND_RESET_PASSWORD_EMAIL\",\n                                        userContext: userContext,\n                                    })\n                                ),\n                            ];\n                        case 1:\n                            (_b = _c.sent()), (jsonBody = _b.jsonBody), (fetchResponse = _b.fetchResponse);\n                            if (jsonBody.status === \"FIELD_ERROR\") {\n                                return [\n                                    2 /*return*/,\n                                    {\n                                        status: \"FIELD_ERROR\",\n                                        formFields: jsonBody.formFields,\n                                        fetchResponse: fetchResponse,\n                                    },\n                                ];\n                            }\n                            return [\n                                2 /*return*/,\n                                {\n                                    status: jsonBody.status,\n                                    fetchResponse: fetchResponse,\n                                },\n                            ];\n                    }\n                });\n            });\n        },\n        signUp: function (_a) {\n            var formFields = _a.formFields,\n                options = _a.options,\n                userContext = _a.userContext;\n            return __awaiter(this, void 0, void 0, function () {\n                var _b, jsonBody, fetchResponse;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            return [\n                                4 /*yield*/,\n                                querier.post(\n                                    \"/signup\",\n                                    { body: JSON.stringify({ formFields: formFields }) },\n                                    querier_1.default.preparePreAPIHook({\n                                        recipePreAPIHook: recipeImplInput.preAPIHook,\n                                        action: \"EMAIL_PASSWORD_SIGN_UP\",\n                                        options: options,\n                                        userContext: userContext,\n                                    }),\n                                    querier_1.default.preparePostAPIHook({\n                                        recipePostAPIHook: recipeImplInput.postAPIHook,\n                                        action: \"EMAIL_PASSWORD_SIGN_UP\",\n                                        userContext: userContext,\n                                    })\n                                ),\n                            ];\n                        case 1:\n                            (_b = _c.sent()), (jsonBody = _b.jsonBody), (fetchResponse = _b.fetchResponse);\n                            if (jsonBody.status === \"FIELD_ERROR\") {\n                                return [\n                                    2 /*return*/,\n                                    {\n                                        status: \"FIELD_ERROR\",\n                                        formFields: jsonBody.formFields,\n                                        fetchResponse: fetchResponse,\n                                    },\n                                ];\n                            }\n                            return [\n                                2 /*return*/,\n                                {\n                                    status: jsonBody.status,\n                                    user: jsonBody.user,\n                                    fetchResponse: fetchResponse,\n                                },\n                            ];\n                    }\n                });\n            });\n        },\n        signIn: function (_a) {\n            var formFields = _a.formFields,\n                options = _a.options,\n                userContext = _a.userContext;\n            return __awaiter(this, void 0, void 0, function () {\n                var _b, jsonBody, fetchResponse;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            return [\n                                4 /*yield*/,\n                                querier.post(\n                                    \"/signin\",\n                                    { body: JSON.stringify({ formFields: formFields }) },\n                                    querier_1.default.preparePreAPIHook({\n                                        recipePreAPIHook: recipeImplInput.preAPIHook,\n                                        action: \"EMAIL_PASSWORD_SIGN_IN\",\n                                        options: options,\n                                        userContext: userContext,\n                                    }),\n                                    querier_1.default.preparePostAPIHook({\n                                        recipePostAPIHook: recipeImplInput.postAPIHook,\n                                        action: \"EMAIL_PASSWORD_SIGN_IN\",\n                                        userContext: userContext,\n                                    })\n                                ),\n                            ];\n                        case 1:\n                            (_b = _c.sent()), (jsonBody = _b.jsonBody), (fetchResponse = _b.fetchResponse);\n                            if (jsonBody.status === \"FIELD_ERROR\") {\n                                return [\n                                    2 /*return*/,\n                                    {\n                                        status: \"FIELD_ERROR\",\n                                        formFields: jsonBody.formFields,\n                                        fetchResponse: fetchResponse,\n                                    },\n                                ];\n                            }\n                            if (jsonBody.status === \"WRONG_CREDENTIALS_ERROR\") {\n                                return [\n                                    2 /*return*/,\n                                    {\n                                        status: \"WRONG_CREDENTIALS_ERROR\",\n                                        fetchResponse: fetchResponse,\n                                    },\n                                ];\n                            }\n                            return [\n                                2 /*return*/,\n                                {\n                                    status: \"OK\",\n                                    user: jsonBody.user,\n                                    fetchResponse: fetchResponse,\n                                },\n                            ];\n                    }\n                });\n            });\n        },\n        doesEmailExist: function (_a) {\n            var email = _a.email,\n                options = _a.options,\n                userContext = _a.userContext;\n            return __awaiter(this, void 0, void 0, function () {\n                var _b, jsonBody, fetchResponse;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            return [\n                                4 /*yield*/,\n                                querier.get(\n                                    \"/signup/email/exists\",\n                                    {},\n                                    { email: email },\n                                    querier_1.default.preparePreAPIHook({\n                                        recipePreAPIHook: recipeImplInput.preAPIHook,\n                                        action: \"EMAIL_EXISTS\",\n                                        options: options,\n                                        userContext: userContext,\n                                    }),\n                                    querier_1.default.preparePostAPIHook({\n                                        recipePostAPIHook: recipeImplInput.postAPIHook,\n                                        action: \"EMAIL_EXISTS\",\n                                        userContext: userContext,\n                                    })\n                                ),\n                            ];\n                        case 1:\n                            (_b = _c.sent()), (jsonBody = _b.jsonBody), (fetchResponse = _b.fetchResponse);\n                            return [\n                                2 /*return*/,\n                                {\n                                    status: jsonBody.status,\n                                    doesExist: jsonBody.exists,\n                                    fetchResponse: fetchResponse,\n                                },\n                            ];\n                    }\n                });\n            });\n        },\n        getResetPasswordTokenFromURL: function () {\n            var token = (0, utils_1.getQueryParams)(\"token\");\n            if (token === undefined) {\n                return \"\";\n            }\n            return token;\n        },\n    };\n}\nexports[\"default\"] = getRecipeImplementation;\nexports.getRecipeImplementation = getRecipeImplementation;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/recipe/emailpassword/recipeImplementation.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/recipe/emailpassword/utils.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/recipe/emailpassword/utils.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar __assign =\n    (this && this.__assign) ||\n    function () {\n        __assign =\n            Object.assign ||\n            function (t) {\n                for (var s, i = 1, n = arguments.length; i < n; i++) {\n                    s = arguments[i];\n                    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n                }\n                return t;\n            };\n        return __assign.apply(this, arguments);\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.normaliseUserInput = void 0;\nvar utils_1 = __webpack_require__(/*! ../authRecipe/utils */ \"./node_modules/supertokens-web-js/lib/build/recipe/authRecipe/utils.js\");\nfunction normaliseUserInput(config) {\n    var override = __assign(\n        {\n            functions: function (originalImplementation) {\n                return originalImplementation;\n            },\n        },\n        config.override\n    );\n    return __assign(__assign({}, (0, utils_1.normaliseAuthRecipe)(config)), { override: override });\n}\nexports.normaliseUserInput = normaliseUserInput;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL2xpYi9idWlsZC9yZWNpcGUvZW1haWxwYXNzd29yZC91dGlscy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBeUQsT0FBTztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEI7QUFDMUIsY0FBYyxtQkFBTyxDQUFDLG1HQUFxQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EsK0JBQStCLCtDQUErQyxvQkFBb0I7QUFDbEc7QUFDQSwwQkFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1cGVydG9rZW5zLXdlYi1qcy9saWIvYnVpbGQvcmVjaXBlL2VtYWlscGFzc3dvcmQvdXRpbHMuanM/ZDk1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIENvcHlyaWdodCAoYykgMjAyMiwgVlJBSSBMYWJzIGFuZC9vciBpdHMgYWZmaWxpYXRlcy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvZnR3YXJlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpIGFzIHB1Ymxpc2hlZCBieSB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24uXG4gKlxuICogWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5XG4gKiBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVFxuICogV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlXG4gKiBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2Fzc2lnbiA9XG4gICAgKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHxcbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIF9fYXNzaWduID1cbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24gfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSkgdFtwXSA9IHNbcF07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0O1xuICAgICAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubm9ybWFsaXNlVXNlcklucHV0ID0gdm9pZCAwO1xudmFyIHV0aWxzXzEgPSByZXF1aXJlKFwiLi4vYXV0aFJlY2lwZS91dGlsc1wiKTtcbmZ1bmN0aW9uIG5vcm1hbGlzZVVzZXJJbnB1dChjb25maWcpIHtcbiAgICB2YXIgb3ZlcnJpZGUgPSBfX2Fzc2lnbihcbiAgICAgICAge1xuICAgICAgICAgICAgZnVuY3Rpb25zOiBmdW5jdGlvbiAob3JpZ2luYWxJbXBsZW1lbnRhdGlvbikge1xuICAgICAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbEltcGxlbWVudGF0aW9uO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgY29uZmlnLm92ZXJyaWRlXG4gICAgKTtcbiAgICByZXR1cm4gX19hc3NpZ24oX19hc3NpZ24oe30sICgwLCB1dGlsc18xLm5vcm1hbGlzZUF1dGhSZWNpcGUpKGNvbmZpZykpLCB7IG92ZXJyaWRlOiBvdmVycmlkZSB9KTtcbn1cbmV4cG9ydHMubm9ybWFsaXNlVXNlcklucHV0ID0gbm9ybWFsaXNlVXNlcklucHV0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/recipe/emailpassword/utils.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/recipe/recipeModule/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/recipe/recipeModule/index.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar RecipeModule = /** @class */ (function () {\n    function RecipeModule(config) {\n        this.config = config;\n    }\n    return RecipeModule;\n})();\nexports[\"default\"] = RecipeModule;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL2xpYi9idWlsZC9yZWNpcGUvcmVjaXBlTW9kdWxlL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1cGVydG9rZW5zLXdlYi1qcy9saWIvYnVpbGQvcmVjaXBlL3JlY2lwZU1vZHVsZS9pbmRleC5qcz8yMmI0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIFJlY2lwZU1vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBSZWNpcGVNb2R1bGUoY29uZmlnKSB7XG4gICAgICAgIHRoaXMuY29uZmlnID0gY29uZmlnO1xuICAgIH1cbiAgICByZXR1cm4gUmVjaXBlTW9kdWxlO1xufSkoKTtcbmV4cG9ydHMuZGVmYXVsdCA9IFJlY2lwZU1vZHVsZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/recipe/recipeModule/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/recipe/recipeModule/utils.js":
/*!********************************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/recipe/recipeModule/utils.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter =\n    (this && this.__awaiter) ||\n    function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n            return value instanceof P\n                ? value\n                : new P(function (resolve) {\n                      resolve(value);\n                  });\n        }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n                try {\n                    step(generator.next(value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function rejected(value) {\n                try {\n                    step(generator[\"throw\"](value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function step(result) {\n                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\nvar __generator =\n    (this && this.__generator) ||\n    function (thisArg, body) {\n        var _ = {\n                label: 0,\n                sent: function () {\n                    if (t[0] & 1) throw t[1];\n                    return t[1];\n                },\n                trys: [],\n                ops: [],\n            },\n            f,\n            y,\n            t,\n            g;\n        return (\n            (g = { next: verb(0), throw: verb(1), return: verb(2) }),\n            typeof Symbol === \"function\" &&\n                (g[Symbol.iterator] = function () {\n                    return this;\n                }),\n            g\n        );\n        function verb(n) {\n            return function (v) {\n                return step([n, v]);\n            };\n        }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (\n                        ((f = 1),\n                        y &&\n                            (t =\n                                op[0] & 2\n                                    ? y[\"return\"]\n                                    : op[0]\n                                    ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0)\n                                    : y.next) &&\n                            !(t = t.call(y, op[1])).done)\n                    )\n                        return t;\n                    if (((y = 0), t)) op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (\n                                !((t = _.trys), (t = t.length > 0 && t[t.length - 1])) &&\n                                (op[0] === 6 || op[0] === 2)\n                            ) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2]) _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                } catch (e) {\n                    op = [6, e];\n                    y = 0;\n                } finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5) throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.normaliseRecipeModuleConfig = void 0;\nfunction normaliseRecipeModuleConfig(config) {\n    var _this = this;\n    var preAPIHook = config.preAPIHook;\n    if (preAPIHook === undefined) {\n        preAPIHook = function (context) {\n            return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, context];\n                });\n            });\n        };\n    }\n    var postAPIHook = config.postAPIHook;\n    if (postAPIHook === undefined) {\n        postAPIHook = function () {\n            return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/];\n                });\n            });\n        };\n    }\n    return {\n        recipeId: config.recipeId,\n        appInfo: config.appInfo,\n        preAPIHook: preAPIHook,\n        postAPIHook: postAPIHook,\n    };\n}\nexports.normaliseRecipeModuleConfig = normaliseRecipeModuleConfig;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/recipe/recipeModule/utils.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/recipe/session/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/recipe/session/index.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter =\n    (this && this.__awaiter) ||\n    function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n            return value instanceof P\n                ? value\n                : new P(function (resolve) {\n                      resolve(value);\n                  });\n        }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n                try {\n                    step(generator.next(value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function rejected(value) {\n                try {\n                    step(generator[\"throw\"](value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function step(result) {\n                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\nvar __generator =\n    (this && this.__generator) ||\n    function (thisArg, body) {\n        var _ = {\n                label: 0,\n                sent: function () {\n                    if (t[0] & 1) throw t[1];\n                    return t[1];\n                },\n                trys: [],\n                ops: [],\n            },\n            f,\n            y,\n            t,\n            g;\n        return (\n            (g = { next: verb(0), throw: verb(1), return: verb(2) }),\n            typeof Symbol === \"function\" &&\n                (g[Symbol.iterator] = function () {\n                    return this;\n                }),\n            g\n        );\n        function verb(n) {\n            return function (v) {\n                return step([n, v]);\n            };\n        }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (\n                        ((f = 1),\n                        y &&\n                            (t =\n                                op[0] & 2\n                                    ? y[\"return\"]\n                                    : op[0]\n                                    ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0)\n                                    : y.next) &&\n                            !(t = t.call(y, op[1])).done)\n                    )\n                        return t;\n                    if (((y = 0), t)) op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (\n                                !((t = _.trys), (t = t.length > 0 && t[t.length - 1])) &&\n                                (op[0] === 6 || op[0] === 2)\n                            ) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2]) _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                } catch (e) {\n                    op = [6, e];\n                    y = 0;\n                } finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5) throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getInvalidClaimsFromResponse =\n    exports.getClaimValue =\n    exports.validateClaims =\n    exports.signOut =\n    exports.addAxiosInterceptors =\n    exports.doesSessionExist =\n    exports.attemptRefreshingSession =\n    exports.getAccessToken =\n    exports.getAccessTokenPayloadSecurely =\n    exports.getUserId =\n    exports.init =\n    exports.BooleanClaim =\n    exports.PrimitiveArrayClaim =\n    exports.PrimitiveClaim =\n    exports.SessionClaimValidator =\n        void 0;\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar utils_1 = __webpack_require__(/*! ../../utils */ \"./node_modules/supertokens-web-js/lib/build/utils.js\");\nvar recipe_1 = __webpack_require__(/*! ./recipe */ \"./node_modules/supertokens-web-js/lib/build/recipe/session/recipe.js\");\nvar RecipeWrapper = /** @class */ (function () {\n    function RecipeWrapper() {}\n    RecipeWrapper.init = function (config) {\n        return recipe_1.default.init(config);\n    };\n    RecipeWrapper.getUserId = function (input) {\n        return recipe_1.default.getInstanceOrThrow().getUserId({\n            userContext: (0, utils_1.getNormalisedUserContext)(\n                input === null || input === void 0 ? void 0 : input.userContext\n            ),\n        });\n    };\n    RecipeWrapper.getAccessToken = function (input) {\n        return recipe_1.default.getInstanceOrThrow().getAccessToken({\n            userContext: (0, utils_1.getNormalisedUserContext)(\n                input === null || input === void 0 ? void 0 : input.userContext\n            ),\n        });\n    };\n    RecipeWrapper.getAccessTokenPayloadSecurely = function (input) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [\n                    2 /*return*/,\n                    recipe_1.default.getInstanceOrThrow().getAccessTokenPayloadSecurely({\n                        userContext: (0, utils_1.getNormalisedUserContext)(\n                            input === null || input === void 0 ? void 0 : input.userContext\n                        ),\n                    }),\n                ];\n            });\n        });\n    };\n    RecipeWrapper.attemptRefreshingSession = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, recipe_1.default.getInstanceOrThrow().attemptRefreshingSession()];\n            });\n        });\n    };\n    RecipeWrapper.doesSessionExist = function (input) {\n        return recipe_1.default.getInstanceOrThrow().doesSessionExist({\n            userContext: (0, utils_1.getNormalisedUserContext)(\n                input === null || input === void 0 ? void 0 : input.userContext\n            ),\n        });\n    };\n    /**\n     * @deprecated\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    RecipeWrapper.addAxiosInterceptors = function (axiosInstance, userContext) {\n        return recipe_1.default.addAxiosInterceptors(axiosInstance, (0, utils_1.getNormalisedUserContext)(userContext));\n    };\n    RecipeWrapper.signOut = function (input) {\n        return recipe_1.default.getInstanceOrThrow().signOut({\n            userContext: (0, utils_1.getNormalisedUserContext)(\n                input === null || input === void 0 ? void 0 : input.userContext\n            ),\n        });\n    };\n    RecipeWrapper.getClaimValue = function (input) {\n        return recipe_1.default.getInstanceOrThrow().getClaimValue({\n            claim: input.claim,\n            userContext: (0, utils_1.getNormalisedUserContext)(\n                input === null || input === void 0 ? void 0 : input.userContext\n            ),\n        });\n    };\n    RecipeWrapper.validateClaims = function (input) {\n        return recipe_1.default.getInstanceOrThrow().validateClaims({\n            overrideGlobalClaimValidators:\n                input === null || input === void 0 ? void 0 : input.overrideGlobalClaimValidators,\n            userContext: (0, utils_1.getNormalisedUserContext)(\n                input === null || input === void 0 ? void 0 : input.userContext\n            ),\n        });\n    };\n    // The strange typing is to avoid adding a dependency to axios\n    RecipeWrapper.getInvalidClaimsFromResponse = function (input) {\n        return recipe_1.default.getInstanceOrThrow().getInvalidClaimsFromResponse({\n            response: input.response,\n            userContext: (0, utils_1.getNormalisedUserContext)(\n                input === null || input === void 0 ? void 0 : input.userContext\n            ),\n        });\n    };\n    return RecipeWrapper;\n})();\nexports[\"default\"] = RecipeWrapper;\nvar init = RecipeWrapper.init;\nexports.init = init;\nvar getUserId = RecipeWrapper.getUserId;\nexports.getUserId = getUserId;\nvar getAccessTokenPayloadSecurely = RecipeWrapper.getAccessTokenPayloadSecurely;\nexports.getAccessTokenPayloadSecurely = getAccessTokenPayloadSecurely;\nvar getAccessToken = RecipeWrapper.getAccessToken;\nexports.getAccessToken = getAccessToken;\nvar attemptRefreshingSession = RecipeWrapper.attemptRefreshingSession;\nexports.attemptRefreshingSession = attemptRefreshingSession;\nvar doesSessionExist = RecipeWrapper.doesSessionExist;\nexports.doesSessionExist = doesSessionExist;\n/**\n * @deprecated\n */\nvar addAxiosInterceptors = RecipeWrapper.addAxiosInterceptors;\nexports.addAxiosInterceptors = addAxiosInterceptors;\nvar signOut = RecipeWrapper.signOut;\nexports.signOut = signOut;\nvar validateClaims = RecipeWrapper.validateClaims;\nexports.validateClaims = validateClaims;\nvar getClaimValue = RecipeWrapper.getClaimValue;\nexports.getClaimValue = getClaimValue;\nvar getInvalidClaimsFromResponse = RecipeWrapper.getInvalidClaimsFromResponse;\nexports.getInvalidClaimsFromResponse = getInvalidClaimsFromResponse;\nvar supertokens_website_1 = __webpack_require__(/*! supertokens-website */ \"./node_modules/supertokens-website/index.js\");\nObject.defineProperty(exports, \"SessionClaimValidator\", ({\n    enumerable: true,\n    get: function () {\n        return supertokens_website_1.SessionClaimValidator;\n    },\n}));\nObject.defineProperty(exports, \"PrimitiveClaim\", ({\n    enumerable: true,\n    get: function () {\n        return supertokens_website_1.PrimitiveClaim;\n    },\n}));\nObject.defineProperty(exports, \"PrimitiveArrayClaim\", ({\n    enumerable: true,\n    get: function () {\n        return supertokens_website_1.PrimitiveArrayClaim;\n    },\n}));\nObject.defineProperty(exports, \"BooleanClaim\", ({\n    enumerable: true,\n    get: function () {\n        return supertokens_website_1.BooleanClaim;\n    },\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/recipe/session/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/recipe/session/recipe.js":
/*!****************************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/recipe/session/recipe.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __extends =\n    (this && this.__extends) ||\n    (function () {\n        var extendStatics = function (d, b) {\n            extendStatics =\n                Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array &&\n                    function (d, b) {\n                        d.__proto__ = b;\n                    }) ||\n                function (d, b) {\n                    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n                };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());\n        };\n    })();\nvar __assign =\n    (this && this.__assign) ||\n    function () {\n        __assign =\n            Object.assign ||\n            function (t) {\n                for (var s, i = 1, n = arguments.length; i < n; i++) {\n                    s = arguments[i];\n                    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n                }\n                return t;\n            };\n        return __assign.apply(this, arguments);\n    };\nvar __awaiter =\n    (this && this.__awaiter) ||\n    function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n            return value instanceof P\n                ? value\n                : new P(function (resolve) {\n                      resolve(value);\n                  });\n        }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n                try {\n                    step(generator.next(value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function rejected(value) {\n                try {\n                    step(generator[\"throw\"](value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function step(result) {\n                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\nvar __generator =\n    (this && this.__generator) ||\n    function (thisArg, body) {\n        var _ = {\n                label: 0,\n                sent: function () {\n                    if (t[0] & 1) throw t[1];\n                    return t[1];\n                },\n                trys: [],\n                ops: [],\n            },\n            f,\n            y,\n            t,\n            g;\n        return (\n            (g = { next: verb(0), throw: verb(1), return: verb(2) }),\n            typeof Symbol === \"function\" &&\n                (g[Symbol.iterator] = function () {\n                    return this;\n                }),\n            g\n        );\n        function verb(n) {\n            return function (v) {\n                return step([n, v]);\n            };\n        }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (\n                        ((f = 1),\n                        y &&\n                            (t =\n                                op[0] & 2\n                                    ? y[\"return\"]\n                                    : op[0]\n                                    ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0)\n                                    : y.next) &&\n                            !(t = t.call(y, op[1])).done)\n                    )\n                        return t;\n                    if (((y = 0), t)) op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (\n                                !((t = _.trys), (t = t.length > 0 && t[t.length - 1])) &&\n                                (op[0] === 6 || op[0] === 2)\n                            ) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2]) _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                } catch (e) {\n                    op = [6, e];\n                    y = 0;\n                } finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5) throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Recipe = void 0;\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar recipeModule_1 = __webpack_require__(/*! ../recipeModule */ \"./node_modules/supertokens-web-js/lib/build/recipe/recipeModule/index.js\");\nvar supertokens_website_1 = __webpack_require__(/*! supertokens-website */ \"./node_modules/supertokens-website/index.js\");\nvar utils_1 = __webpack_require__(/*! ../../utils */ \"./node_modules/supertokens-web-js/lib/build/utils.js\");\nvar Recipe = /** @class */ (function (_super) {\n    __extends(Recipe, _super);\n    function Recipe(config) {\n        var _this = _super.call(this, config) || this;\n        _this.getUserId = function (input) {\n            return supertokens_website_1.default.getUserId({\n                userContext: input.userContext,\n            });\n        };\n        _this.getAccessToken = function (input) {\n            return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [\n                        2 /*return*/,\n                        supertokens_website_1.default.getAccessToken({\n                            userContext: input.userContext,\n                        }),\n                    ];\n                });\n            });\n        };\n        _this.getAccessTokenPayloadSecurely = function (input) {\n            return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [\n                        2 /*return*/,\n                        supertokens_website_1.default.getAccessTokenPayloadSecurely({\n                            userContext: input.userContext,\n                        }),\n                    ];\n                });\n            });\n        };\n        _this.doesSessionExist = function (input) {\n            return supertokens_website_1.default.doesSessionExist({\n                userContext: input.userContext,\n            });\n        };\n        _this.signOut = function (input) {\n            return supertokens_website_1.default.signOut({\n                userContext: input.userContext,\n            });\n        };\n        _this.attemptRefreshingSession = function () {\n            return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, supertokens_website_1.default.attemptRefreshingSession()];\n                });\n            });\n        };\n        _this.validateClaims = function (input) {\n            return supertokens_website_1.default.validateClaims(input.overrideGlobalClaimValidators, input.userContext);\n        };\n        supertokens_website_1.default.init(\n            __assign(__assign({}, config), {\n                preAPIHook: function (context) {\n                    return __awaiter(_this, void 0, void 0, function () {\n                        var headers, response;\n                        return __generator(this, function (_a) {\n                            headers = new Headers(context.requestInit.headers);\n                            headers.set(\"rid\", config.recipeId);\n                            response = __assign(__assign({}, context), {\n                                requestInit: __assign(__assign({}, context.requestInit), { headers: headers }),\n                            });\n                            if (config.preAPIHook === undefined) {\n                                return [2 /*return*/, response];\n                            } else {\n                                return [2 /*return*/, config.preAPIHook(context)];\n                            }\n                            return [2 /*return*/];\n                        });\n                    });\n                },\n                apiDomain: config.appInfo.apiDomain.getAsStringDangerous(),\n                apiBasePath: config.appInfo.apiBasePath.getAsStringDangerous(),\n            })\n        );\n        return _this;\n    }\n    Recipe.init = function (config) {\n        return function (appInfo, enableDebugLogs) {\n            Recipe.instance = new Recipe(\n                __assign(__assign({}, config), {\n                    appInfo: appInfo,\n                    recipeId: Recipe.RECIPE_ID,\n                    enableDebugLogs: enableDebugLogs,\n                })\n            );\n            return Recipe.instance;\n        };\n    };\n    Recipe.prototype.getClaimValue = function (input) {\n        return supertokens_website_1.default.getClaimValue(input);\n    };\n    // The strange typing is to avoid adding a dependency to axios\n    Recipe.prototype.getInvalidClaimsFromResponse = function (input) {\n        return supertokens_website_1.default.getInvalidClaimsFromResponse(input);\n    };\n    Recipe.addAxiosInterceptors = function (axiosInstance, userContext) {\n        return supertokens_website_1.default.addAxiosInterceptors(axiosInstance, userContext);\n    };\n    Recipe.getInstanceOrThrow = function () {\n        if (Recipe.instance === undefined) {\n            var error = \"No instance of Session found. Make sure to call the Session.init method.\";\n            error = (0, utils_1.checkForSSRErrorAndAppendIfNeeded)(error);\n            throw Error(error);\n        }\n        return Recipe.instance;\n    };\n    Recipe.reset = function () {\n        if (!(0, utils_1.isTest)()) {\n            return;\n        }\n        Recipe.instance = undefined;\n        return;\n    };\n    Recipe.RECIPE_ID = \"session\";\n    return Recipe;\n})(recipeModule_1.default);\nexports.Recipe = Recipe;\nexports[\"default\"] = Recipe;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/recipe/session/recipe.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/supertokens.js":
/*!******************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/supertokens.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/supertokens-web-js/lib/build/utils.js\");\nvar cookieHandler_1 = __webpack_require__(/*! ./cookieHandler */ \"./node_modules/supertokens-web-js/lib/build/cookieHandler/index.js\");\nvar windowHandler_1 = __webpack_require__(/*! ./windowHandler */ \"./node_modules/supertokens-web-js/lib/build/windowHandler/index.js\");\nvar postSuperTokensInitCallbacks_1 = __webpack_require__(/*! ./postSuperTokensInitCallbacks */ \"./node_modules/supertokens-web-js/lib/build/postSuperTokensInitCallbacks.js\");\nvar SuperTokens = /** @class */ (function () {\n    function SuperTokens(config) {\n        var _this = this;\n        this.recipeList = [];\n        this.appInfo = (0, utils_1.normaliseInputAppInfoOrThrowError)(config.appInfo);\n        if (config.recipeList === undefined || config.recipeList.length === 0) {\n            throw new Error(\n                \"Please provide at least one recipe to the supertokens.init function call. See https://supertokens.io/docs/emailpassword/quick-setup/frontend\"\n            );\n        }\n        var enableDebugLogs = false;\n        if (config.enableDebugLogs !== undefined) {\n            enableDebugLogs = config.enableDebugLogs;\n        }\n        this.recipeList = config.recipeList.map(function (recipe) {\n            return recipe(_this.appInfo, enableDebugLogs);\n        });\n    }\n    /**\n     * Initialise the SuperTokens SDK. Calling this function multiple times results\n     * in a warning and has no other effect\n     *\n     * @param config The configuration the SDK should use\n     */\n    SuperTokens.init = function (config) {\n        cookieHandler_1.CookieHandlerReference.init(config.cookieHandler);\n        windowHandler_1.WindowHandlerReference.init(config.windowHandler);\n        if (SuperTokens.instance !== undefined) {\n            console.warn(\"SuperTokens was already initialized\");\n            return;\n        }\n        SuperTokens.instance = new SuperTokens(config);\n        postSuperTokensInitCallbacks_1.PostSuperTokensInitCallbacks.runPostInitCallbacks();\n    };\n    /**\n     * Retrieve an instance of SuperTokens\n     *\n     * @returns An instance of SuperTokens\n     *\n     * @throws If SuperTokens.init has not been called before using this function\n     */\n    SuperTokens.getInstanceOrThrow = function () {\n        if (SuperTokens.instance === undefined) {\n            var error = \"SuperTokens must be initialized before calling this method.\";\n            error = (0, utils_1.checkForSSRErrorAndAppendIfNeeded)(error);\n            throw new Error(error);\n        }\n        return SuperTokens.instance;\n    };\n    SuperTokens.reset = function () {\n        if (!(0, utils_1.isTest)()) {\n            console.warn(\"Calling reset() is only supported during testing\");\n            return;\n        }\n        SuperTokens.instance = undefined;\n        return;\n    };\n    return SuperTokens;\n})();\nexports[\"default\"] = SuperTokens;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL2xpYi9idWlsZC9zdXBlcnRva2Vucy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYyxtQkFBTyxDQUFDLHFFQUFTO0FBQy9CLHNCQUFzQixtQkFBTyxDQUFDLDJGQUFpQjtBQUMvQyxzQkFBc0IsbUJBQU8sQ0FBQywyRkFBaUI7QUFDL0MscUNBQXFDLG1CQUFPLENBQUMsbUhBQWdDO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1cGVydG9rZW5zLXdlYi1qcy9saWIvYnVpbGQvc3VwZXJ0b2tlbnMuanM/MGExNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIENvcHlyaWdodCAoYykgMjAyMiwgVlJBSSBMYWJzIGFuZC9vciBpdHMgYWZmaWxpYXRlcy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvZnR3YXJlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpIGFzIHB1Ymxpc2hlZCBieSB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24uXG4gKlxuICogWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5XG4gKiBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVFxuICogV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlXG4gKiBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG52YXIgY29va2llSGFuZGxlcl8xID0gcmVxdWlyZShcIi4vY29va2llSGFuZGxlclwiKTtcbnZhciB3aW5kb3dIYW5kbGVyXzEgPSByZXF1aXJlKFwiLi93aW5kb3dIYW5kbGVyXCIpO1xudmFyIHBvc3RTdXBlclRva2Vuc0luaXRDYWxsYmFja3NfMSA9IHJlcXVpcmUoXCIuL3Bvc3RTdXBlclRva2Vuc0luaXRDYWxsYmFja3NcIik7XG52YXIgU3VwZXJUb2tlbnMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gU3VwZXJUb2tlbnMoY29uZmlnKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMucmVjaXBlTGlzdCA9IFtdO1xuICAgICAgICB0aGlzLmFwcEluZm8gPSAoMCwgdXRpbHNfMS5ub3JtYWxpc2VJbnB1dEFwcEluZm9PclRocm93RXJyb3IpKGNvbmZpZy5hcHBJbmZvKTtcbiAgICAgICAgaWYgKGNvbmZpZy5yZWNpcGVMaXN0ID09PSB1bmRlZmluZWQgfHwgY29uZmlnLnJlY2lwZUxpc3QubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICAgICAgXCJQbGVhc2UgcHJvdmlkZSBhdCBsZWFzdCBvbmUgcmVjaXBlIHRvIHRoZSBzdXBlcnRva2Vucy5pbml0IGZ1bmN0aW9uIGNhbGwuIFNlZSBodHRwczovL3N1cGVydG9rZW5zLmlvL2RvY3MvZW1haWxwYXNzd29yZC9xdWljay1zZXR1cC9mcm9udGVuZFwiXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIHZhciBlbmFibGVEZWJ1Z0xvZ3MgPSBmYWxzZTtcbiAgICAgICAgaWYgKGNvbmZpZy5lbmFibGVEZWJ1Z0xvZ3MgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZW5hYmxlRGVidWdMb2dzID0gY29uZmlnLmVuYWJsZURlYnVnTG9ncztcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnJlY2lwZUxpc3QgPSBjb25maWcucmVjaXBlTGlzdC5tYXAoZnVuY3Rpb24gKHJlY2lwZSkge1xuICAgICAgICAgICAgcmV0dXJuIHJlY2lwZShfdGhpcy5hcHBJbmZvLCBlbmFibGVEZWJ1Z0xvZ3MpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSW5pdGlhbGlzZSB0aGUgU3VwZXJUb2tlbnMgU0RLLiBDYWxsaW5nIHRoaXMgZnVuY3Rpb24gbXVsdGlwbGUgdGltZXMgcmVzdWx0c1xuICAgICAqIGluIGEgd2FybmluZyBhbmQgaGFzIG5vIG90aGVyIGVmZmVjdFxuICAgICAqXG4gICAgICogQHBhcmFtIGNvbmZpZyBUaGUgY29uZmlndXJhdGlvbiB0aGUgU0RLIHNob3VsZCB1c2VcbiAgICAgKi9cbiAgICBTdXBlclRva2Vucy5pbml0ID0gZnVuY3Rpb24gKGNvbmZpZykge1xuICAgICAgICBjb29raWVIYW5kbGVyXzEuQ29va2llSGFuZGxlclJlZmVyZW5jZS5pbml0KGNvbmZpZy5jb29raWVIYW5kbGVyKTtcbiAgICAgICAgd2luZG93SGFuZGxlcl8xLldpbmRvd0hhbmRsZXJSZWZlcmVuY2UuaW5pdChjb25maWcud2luZG93SGFuZGxlcik7XG4gICAgICAgIGlmIChTdXBlclRva2Vucy5pbnN0YW5jZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJTdXBlclRva2VucyB3YXMgYWxyZWFkeSBpbml0aWFsaXplZFwiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBTdXBlclRva2Vucy5pbnN0YW5jZSA9IG5ldyBTdXBlclRva2Vucyhjb25maWcpO1xuICAgICAgICBwb3N0U3VwZXJUb2tlbnNJbml0Q2FsbGJhY2tzXzEuUG9zdFN1cGVyVG9rZW5zSW5pdENhbGxiYWNrcy5ydW5Qb3N0SW5pdENhbGxiYWNrcygpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0cmlldmUgYW4gaW5zdGFuY2Ugb2YgU3VwZXJUb2tlbnNcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIEFuIGluc3RhbmNlIG9mIFN1cGVyVG9rZW5zXG4gICAgICpcbiAgICAgKiBAdGhyb3dzIElmIFN1cGVyVG9rZW5zLmluaXQgaGFzIG5vdCBiZWVuIGNhbGxlZCBiZWZvcmUgdXNpbmcgdGhpcyBmdW5jdGlvblxuICAgICAqL1xuICAgIFN1cGVyVG9rZW5zLmdldEluc3RhbmNlT3JUaHJvdyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKFN1cGVyVG9rZW5zLmluc3RhbmNlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHZhciBlcnJvciA9IFwiU3VwZXJUb2tlbnMgbXVzdCBiZSBpbml0aWFsaXplZCBiZWZvcmUgY2FsbGluZyB0aGlzIG1ldGhvZC5cIjtcbiAgICAgICAgICAgIGVycm9yID0gKDAsIHV0aWxzXzEuY2hlY2tGb3JTU1JFcnJvckFuZEFwcGVuZElmTmVlZGVkKShlcnJvcik7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3IpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBTdXBlclRva2Vucy5pbnN0YW5jZTtcbiAgICB9O1xuICAgIFN1cGVyVG9rZW5zLnJlc2V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoISgwLCB1dGlsc18xLmlzVGVzdCkoKSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKFwiQ2FsbGluZyByZXNldCgpIGlzIG9ubHkgc3VwcG9ydGVkIGR1cmluZyB0ZXN0aW5nXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIFN1cGVyVG9rZW5zLmluc3RhbmNlID0gdW5kZWZpbmVkO1xuICAgICAgICByZXR1cm47XG4gICAgfTtcbiAgICByZXR1cm4gU3VwZXJUb2tlbnM7XG59KSgpO1xuZXhwb3J0cy5kZWZhdWx0ID0gU3VwZXJUb2tlbnM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/supertokens.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/utils.js":
/*!************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/utils.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getHashFromLocation =\n    exports.getNormalisedUserContext =\n    exports.checkForSSRErrorAndAppendIfNeeded =\n    exports.getQueryParams =\n    exports.isTest =\n    exports.normaliseInputAppInfoOrThrowError =\n    exports.appendQueryParamsToURL =\n        void 0;\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar windowHandler_1 = __webpack_require__(/*! ./windowHandler */ \"./node_modules/supertokens-web-js/lib/build/windowHandler/index.js\");\nvar constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/supertokens-web-js/lib/build/constants.js\");\nvar normalisedURLDomain_1 = __webpack_require__(/*! ./normalisedURLDomain */ \"./node_modules/supertokens-web-js/lib/build/normalisedURLDomain.js\");\nvar normalisedURLPath_1 = __webpack_require__(/*! ./normalisedURLPath */ \"./node_modules/supertokens-web-js/lib/build/normalisedURLPath.js\");\nfunction appendQueryParamsToURL(stringUrl, queryParams) {\n    if (queryParams === undefined) {\n        return stringUrl;\n    }\n    try {\n        var url_1 = new URL(stringUrl);\n        Object.entries(queryParams).forEach(function (_a) {\n            var key = _a[0],\n                value = _a[1];\n            url_1.searchParams.set(key, value);\n        });\n        return url_1.href;\n    } catch (e) {\n        var fakeDomain = stringUrl.startsWith(\"/\") ? \"http:localhost\" : \"http://localhost/\";\n        var url_2 = new URL(\"\".concat(fakeDomain).concat(stringUrl));\n        Object.entries(queryParams).forEach(function (_a) {\n            var key = _a[0],\n                value = _a[1];\n            url_2.searchParams.set(key, value);\n        });\n        return \"\".concat(url_2.pathname).concat(url_2.search);\n    }\n}\nexports.appendQueryParamsToURL = appendQueryParamsToURL;\nfunction getNormalisedURLPathOrDefault(defaultPath, path) {\n    if (path !== undefined) {\n        return new normalisedURLPath_1.default(path);\n    } else {\n        return new normalisedURLPath_1.default(defaultPath);\n    }\n}\nfunction normaliseInputAppInfoOrThrowError(appInfo) {\n    if (appInfo === undefined) {\n        throw new Error(\"Please provide the appInfo object when calling supertokens.init\");\n    }\n    if (appInfo.apiDomain === undefined) {\n        throw new Error(\"Please provide your apiDomain inside the appInfo object when calling supertokens.init\");\n    }\n    if (appInfo.appName === undefined) {\n        throw new Error(\"Please provide your appName inside the appInfo object when calling supertokens.init\");\n    }\n    var apiGatewayPath = new normalisedURLPath_1.default(\"\");\n    if (appInfo.apiGatewayPath !== undefined) {\n        apiGatewayPath = new normalisedURLPath_1.default(appInfo.apiGatewayPath);\n    }\n    return {\n        appName: appInfo.appName,\n        apiDomain: new normalisedURLDomain_1.default(appInfo.apiDomain),\n        apiBasePath: apiGatewayPath.appendPath(\n            getNormalisedURLPathOrDefault(constants_1.DEFAULT_API_BASE_PATH, appInfo.apiBasePath)\n        ),\n    };\n}\nexports.normaliseInputAppInfoOrThrowError = normaliseInputAppInfoOrThrowError;\nfunction isTest() {\n    try {\n        return process.env.TEST_MODE === \"testing\";\n    } catch (err) {\n        // can get Uncaught ReferenceError: process is not defined error\n        return false;\n    }\n}\nexports.isTest = isTest;\nfunction getQueryParams(param) {\n    var urlParams = new URLSearchParams(\n        windowHandler_1.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getSearch()\n    );\n    var queryParam = urlParams.get(param);\n    if (queryParam === null) {\n        return undefined;\n    }\n    return queryParam;\n}\nexports.getQueryParams = getQueryParams;\nfunction checkForSSRErrorAndAppendIfNeeded(error) {\n    // tslint:disable-next-line\n    if (typeof window === \"undefined\") {\n        error = error + constants_1.SSR_ERROR;\n    }\n    return error;\n}\nexports.checkForSSRErrorAndAppendIfNeeded = checkForSSRErrorAndAppendIfNeeded;\nfunction getNormalisedUserContext(userContext) {\n    return userContext === undefined ? {} : userContext;\n}\nexports.getNormalisedUserContext = getNormalisedUserContext;\nfunction getHashFromLocation() {\n    // By default it is returned with the \"#\" at the beginning, we cut that off here.\n    return windowHandler_1.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getHash().substring(1);\n}\nexports.getHashFromLocation = getHashFromLocation;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/utils.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/version.js":
/*!**************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/version.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.supported_fdi = exports.package_version = void 0;\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nexports.package_version = \"0.5.0\";\nexports.supported_fdi = [\"1.16\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL2xpYi9idWlsZC92ZXJzaW9uLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQixHQUFHLHVCQUF1QjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCLHFCQUFxQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL2xpYi9idWlsZC92ZXJzaW9uLmpzPzcxZGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnN1cHBvcnRlZF9mZGkgPSBleHBvcnRzLnBhY2thZ2VfdmVyc2lvbiA9IHZvaWQgMDtcbi8qIENvcHlyaWdodCAoYykgMjAyMiwgVlJBSSBMYWJzIGFuZC9vciBpdHMgYWZmaWxpYXRlcy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvZnR3YXJlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpIGFzIHB1Ymxpc2hlZCBieSB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24uXG4gKlxuICogWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5XG4gKiBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVFxuICogV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlXG4gKiBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmV4cG9ydHMucGFja2FnZV92ZXJzaW9uID0gXCIwLjUuMFwiO1xuZXhwb3J0cy5zdXBwb3J0ZWRfZmRpID0gW1wiMS4xNlwiXTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/version.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/lib/build/windowHandler/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/supertokens-web-js/lib/build/windowHandler/index.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WindowHandlerReference = void 0;\nvar windowHandler_1 = __webpack_require__(/*! supertokens-website/utils/windowHandler */ \"./node_modules/supertokens-website/utils/windowHandler/index.js\");\nObject.defineProperty(exports, \"WindowHandlerReference\", ({\n    enumerable: true,\n    get: function () {\n        return windowHandler_1.WindowHandlerReference;\n    },\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL2xpYi9idWlsZC93aW5kb3dIYW5kbGVyL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEI7QUFDOUIsc0JBQXNCLG1CQUFPLENBQUMsZ0hBQXlDO0FBQ3ZFLDBEQUF5RDtBQUN6RDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsQ0FBQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdXBlcnRva2Vucy13ZWItanMvbGliL2J1aWxkL3dpbmRvd0hhbmRsZXIvaW5kZXguanM/NjRkNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIENvcHlyaWdodCAoYykgMjAyMiwgVlJBSSBMYWJzIGFuZC9vciBpdHMgYWZmaWxpYXRlcy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvZnR3YXJlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpIGFzIHB1Ymxpc2hlZCBieSB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24uXG4gKlxuICogWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5XG4gKiBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVFxuICogV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlXG4gKiBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuV2luZG93SGFuZGxlclJlZmVyZW5jZSA9IHZvaWQgMDtcbnZhciB3aW5kb3dIYW5kbGVyXzEgPSByZXF1aXJlKFwic3VwZXJ0b2tlbnMtd2Vic2l0ZS91dGlscy93aW5kb3dIYW5kbGVyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiV2luZG93SGFuZGxlclJlZmVyZW5jZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHdpbmRvd0hhbmRsZXJfMS5XaW5kb3dIYW5kbGVyUmVmZXJlbmNlO1xuICAgIH0sXG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/lib/build/windowHandler/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/recipe/emailpassword/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/supertokens-web-js/recipe/emailpassword/index.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n__export(__webpack_require__(/*! ../../lib/build/recipe/emailpassword */ \"./node_modules/supertokens-web-js/lib/build/recipe/emailpassword/index.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL3JlY2lwZS9lbWFpbHBhc3N3b3JkL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQixTQUFTLG1CQUFPLENBQUMsdUhBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdXBlcnRva2Vucy13ZWItanMvcmVjaXBlL2VtYWlscGFzc3dvcmQvaW5kZXguanM/Y2IwZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDb3B5cmlnaHQgKGMpIDIwMjIsIFZSQUkgTGFicyBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb2Z0d2FyZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLlxuICpcbiAqIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heVxuICogb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdCBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVRcbiAqIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZVxuICogTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cInVzZSBzdHJpY3RcIjtcbmZ1bmN0aW9uIF9fZXhwb3J0KG0pIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmICghZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgZXhwb3J0c1twXSA9IG1bcF07XG59XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuX19leHBvcnQocmVxdWlyZShcIi4uLy4uL2xpYi9idWlsZC9yZWNpcGUvZW1haWxwYXNzd29yZFwiKSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/recipe/emailpassword/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/recipe/session/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/supertokens-web-js/recipe/session/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n__export(__webpack_require__(/*! ../../lib/build/recipe/session */ \"./node_modules/supertokens-web-js/lib/build/recipe/session/index.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL3JlY2lwZS9zZXNzaW9uL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQixTQUFTLG1CQUFPLENBQUMsMkdBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdXBlcnRva2Vucy13ZWItanMvcmVjaXBlL3Nlc3Npb24vaW5kZXguanM/OTAyZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDb3B5cmlnaHQgKGMpIDIwMjIsIFZSQUkgTGFicyBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb2Z0d2FyZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLlxuICpcbiAqIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heVxuICogb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdCBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVRcbiAqIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZVxuICogTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cInVzZSBzdHJpY3RcIjtcbmZ1bmN0aW9uIF9fZXhwb3J0KG0pIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmICghZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgZXhwb3J0c1twXSA9IG1bcF07XG59XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuX19leHBvcnQocmVxdWlyZShcIi4uLy4uL2xpYi9idWlsZC9yZWNpcGUvc2Vzc2lvblwiKSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/recipe/session/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/utils/cookieHandler/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/supertokens-web-js/utils/cookieHandler/index.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n\nlet d = __webpack_require__(/*! ../../lib/build/cookieHandler */ \"./node_modules/supertokens-web-js/lib/build/cookieHandler/index.js\");\n\nif (d.default !== undefined) {\n    __export(d);\n} else {\n    __export({\n        default: d,\n        ...d,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL3V0aWxzL2Nvb2tpZUhhbmRsZXIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCOztBQUVsQixRQUFRLG1CQUFPLENBQUMseUdBQStCOztBQUUvQztBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL3V0aWxzL2Nvb2tpZUhhbmRsZXIvaW5kZXguanM/YWNjNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDb3B5cmlnaHQgKGMpIDIwMjIsIFZSQUkgTGFicyBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb2Z0d2FyZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLlxuICpcbiAqIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heVxuICogb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdCBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVRcbiAqIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZVxuICogTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cInVzZSBzdHJpY3RcIjtcbmZ1bmN0aW9uIF9fZXhwb3J0KG0pIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmICghZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgZXhwb3J0c1twXSA9IG1bcF07XG59XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG5sZXQgZCA9IHJlcXVpcmUoXCIuLi8uLi9saWIvYnVpbGQvY29va2llSGFuZGxlclwiKTtcblxuaWYgKGQuZGVmYXVsdCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgX19leHBvcnQoZCk7XG59IGVsc2Uge1xuICAgIF9fZXhwb3J0KHtcbiAgICAgICAgZGVmYXVsdDogZCxcbiAgICAgICAgLi4uZCxcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/utils/cookieHandler/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/utils/normalisedURLDomain.js":
/*!**********************************************************************!*\
  !*** ./node_modules/supertokens-web-js/utils/normalisedURLDomain.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n\nlet d = __webpack_require__(/*! ../lib/build/normalisedURLDomain */ \"./node_modules/supertokens-web-js/lib/build/normalisedURLDomain.js\");\n\nif (d.default !== undefined) {\n    __export(d);\n} else {\n    __export({\n        default: d,\n        ...d,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL3V0aWxzL25vcm1hbGlzZWRVUkxEb21haW4uanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCOztBQUVsQixRQUFRLG1CQUFPLENBQUMsNEdBQWtDOztBQUVsRDtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL3V0aWxzL25vcm1hbGlzZWRVUkxEb21haW4uanM/OWNiZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDb3B5cmlnaHQgKGMpIDIwMjIsIFZSQUkgTGFicyBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb2Z0d2FyZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLlxuICpcbiAqIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heVxuICogb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdCBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVRcbiAqIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZVxuICogTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cInVzZSBzdHJpY3RcIjtcbmZ1bmN0aW9uIF9fZXhwb3J0KG0pIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmICghZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgZXhwb3J0c1twXSA9IG1bcF07XG59XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG5sZXQgZCA9IHJlcXVpcmUoXCIuLi9saWIvYnVpbGQvbm9ybWFsaXNlZFVSTERvbWFpblwiKTtcblxuaWYgKGQuZGVmYXVsdCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgX19leHBvcnQoZCk7XG59IGVsc2Uge1xuICAgIF9fZXhwb3J0KHtcbiAgICAgICAgZGVmYXVsdDogZCxcbiAgICAgICAgLi4uZCxcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/utils/normalisedURLDomain.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/utils/normalisedURLPath.js":
/*!********************************************************************!*\
  !*** ./node_modules/supertokens-web-js/utils/normalisedURLPath.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n\nlet d = __webpack_require__(/*! ../lib/build/normalisedURLPath */ \"./node_modules/supertokens-web-js/lib/build/normalisedURLPath.js\");\n\nif (d.default !== undefined) {\n    __export(d);\n} else {\n    __export({\n        default: d,\n        ...d,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL3V0aWxzL25vcm1hbGlzZWRVUkxQYXRoLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjs7QUFFbEIsUUFBUSxtQkFBTyxDQUFDLHdHQUFnQzs7QUFFaEQ7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1cGVydG9rZW5zLXdlYi1qcy91dGlscy9ub3JtYWxpc2VkVVJMUGF0aC5qcz81MWU1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIENvcHlyaWdodCAoYykgMjAyMiwgVlJBSSBMYWJzIGFuZC9vciBpdHMgYWZmaWxpYXRlcy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvZnR3YXJlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpIGFzIHB1Ymxpc2hlZCBieSB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24uXG4gKlxuICogWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5XG4gKiBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVFxuICogV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlXG4gKiBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblwidXNlIHN0cmljdFwiO1xuZnVuY3Rpb24gX19leHBvcnQobSkge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKCFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBleHBvcnRzW3BdID0gbVtwXTtcbn1cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbmxldCBkID0gcmVxdWlyZShcIi4uL2xpYi9idWlsZC9ub3JtYWxpc2VkVVJMUGF0aFwiKTtcblxuaWYgKGQuZGVmYXVsdCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgX19leHBvcnQoZCk7XG59IGVsc2Uge1xuICAgIF9fZXhwb3J0KHtcbiAgICAgICAgZGVmYXVsdDogZCxcbiAgICAgICAgLi4uZCxcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/utils/normalisedURLPath.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/utils/postSuperTokensInitCallbacks.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/supertokens-web-js/utils/postSuperTokensInitCallbacks.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n__export(__webpack_require__(/*! ../lib/build/postSuperTokensInitCallbacks */ \"./node_modules/supertokens-web-js/lib/build/postSuperTokensInitCallbacks.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL3V0aWxzL3Bvc3RTdXBlclRva2Vuc0luaXRDYWxsYmFja3MuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCLFNBQVMsbUJBQU8sQ0FBQyw4SEFBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1cGVydG9rZW5zLXdlYi1qcy91dGlscy9wb3N0U3VwZXJUb2tlbnNJbml0Q2FsbGJhY2tzLmpzP2U5MzkiXSwic291cmNlc0NvbnRlbnQiOlsiLyogQ29weXJpZ2h0IChjKSAyMDIyLCBWUkFJIExhYnMgYW5kL29yIGl0cyBhZmZpbGlhdGVzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc29mdHdhcmUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIikgYXMgcHVibGlzaGVkIGJ5IHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbi5cbiAqXG4gKiBZb3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXlcbiAqIG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUXG4gKiBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGVcbiAqIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXCJ1c2Ugc3RyaWN0XCI7XG5mdW5jdGlvbiBfX2V4cG9ydChtKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAoIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIGV4cG9ydHNbcF0gPSBtW3BdO1xufVxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbl9fZXhwb3J0KHJlcXVpcmUoXCIuLi9saWIvYnVpbGQvcG9zdFN1cGVyVG9rZW5zSW5pdENhbGxiYWNrc1wiKSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/utils/postSuperTokensInitCallbacks.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-web-js/utils/windowHandler/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/supertokens-web-js/utils/windowHandler/index.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* Copyright (c) 2020, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n__export(__webpack_require__(/*! ../../lib/build/windowHandler */ \"./node_modules/supertokens-web-js/lib/build/windowHandler/index.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2ViLWpzL3V0aWxzL3dpbmRvd0hhbmRsZXIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCLFNBQVMsbUJBQU8sQ0FBQyx5R0FBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1cGVydG9rZW5zLXdlYi1qcy91dGlscy93aW5kb3dIYW5kbGVyL2luZGV4LmpzP2I5YzgiXSwic291cmNlc0NvbnRlbnQiOlsiLyogQ29weXJpZ2h0IChjKSAyMDIwLCBWUkFJIExhYnMgYW5kL29yIGl0cyBhZmZpbGlhdGVzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc29mdHdhcmUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIikgYXMgcHVibGlzaGVkIGJ5IHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbi5cbiAqXG4gKiBZb3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXlcbiAqIG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUXG4gKiBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGVcbiAqIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXCJ1c2Ugc3RyaWN0XCI7XG5mdW5jdGlvbiBfX2V4cG9ydChtKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAoIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIGV4cG9ydHNbcF0gPSBtW3BdO1xufVxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbl9fZXhwb3J0KHJlcXVpcmUoXCIuLi8uLi9saWIvYnVpbGQvd2luZG93SGFuZGxlclwiKSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/supertokens-web-js/utils/windowHandler/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/index.js":
/*!***************************************************!*\
  !*** ./node_modules/supertokens-website/index.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* Copyright (c) 2020, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n * \n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License. \n*/\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n__export(__webpack_require__(/*! ./lib/build */ \"./node_modules/supertokens-website/lib/build/index.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIsU0FBUyxtQkFBTyxDQUFDLDBFQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdXBlcnRva2Vucy13ZWJzaXRlL2luZGV4LmpzPzQzNGIiXSwic291cmNlc0NvbnRlbnQiOlsiLyogQ29weXJpZ2h0IChjKSAyMDIwLCBWUkFJIExhYnMgYW5kL29yIGl0cyBhZmZpbGlhdGVzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc29mdHdhcmUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIikgYXMgcHVibGlzaGVkIGJ5IHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbi5cbiAqIFxuICogWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5XG4gKiBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICogXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVRcbiAqIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZVxuICogTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLiBcbiovXG5cInVzZSBzdHJpY3RcIjtcbmZ1bmN0aW9uIF9fZXhwb3J0KG0pIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmICghZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgZXhwb3J0c1twXSA9IG1bcF07XG59XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuX19leHBvcnQocmVxdWlyZShcIi4vbGliL2J1aWxkXCIpKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/axios.js":
/*!*************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/axios.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __assign =\n    (this && this.__assign) ||\n    function () {\n        __assign =\n            Object.assign ||\n            function (t) {\n                for (var s, i = 1, n = arguments.length; i < n; i++) {\n                    s = arguments[i];\n                    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n                }\n                return t;\n            };\n        return __assign.apply(this, arguments);\n    };\nvar __awaiter =\n    (this && this.__awaiter) ||\n    function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n            return value instanceof P\n                ? value\n                : new P(function (resolve) {\n                      resolve(value);\n                  });\n        }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n                try {\n                    step(generator.next(value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function rejected(value) {\n                try {\n                    step(generator[\"throw\"](value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function step(result) {\n                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\nvar __generator =\n    (this && this.__generator) ||\n    function (thisArg, body) {\n        var _ = {\n                label: 0,\n                sent: function () {\n                    if (t[0] & 1) throw t[1];\n                    return t[1];\n                },\n                trys: [],\n                ops: []\n            },\n            f,\n            y,\n            t,\n            g;\n        return (\n            (g = { next: verb(0), throw: verb(1), return: verb(2) }),\n            typeof Symbol === \"function\" &&\n                (g[Symbol.iterator] = function () {\n                    return this;\n                }),\n            g\n        );\n        function verb(n) {\n            return function (v) {\n                return step([n, v]);\n            };\n        }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (\n                        ((f = 1),\n                        y &&\n                            (t =\n                                op[0] & 2\n                                    ? y[\"return\"]\n                                    : op[0]\n                                    ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0)\n                                    : y.next) &&\n                            !(t = t.call(y, op[1])).done)\n                    )\n                        return t;\n                    if (((y = 0), t)) op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (\n                                !((t = _.trys), (t = t.length > 0 && t[t.length - 1])) &&\n                                (op[0] === 6 || op[0] === 2)\n                            ) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2]) _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                } catch (e) {\n                    op = [6, e];\n                    y = 0;\n                } finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5) throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.responseErrorInterceptor = exports.responseInterceptor = exports.interceptorFunctionRequestFulfilled = void 0;\nvar axiosError_1 = __webpack_require__(/*! ./axiosError */ \"./node_modules/supertokens-website/lib/build/axiosError.js\");\nvar fetch_1 = __webpack_require__(/*! ./fetch */ \"./node_modules/supertokens-website/lib/build/fetch.js\");\nvar processState_1 = __webpack_require__(/*! ./processState */ \"./node_modules/supertokens-website/lib/build/processState.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/supertokens-website/lib/build/utils/index.js\");\nvar windowHandler_1 = __webpack_require__(/*! ./utils/windowHandler */ \"./node_modules/supertokens-website/lib/build/utils/windowHandler/index.js\");\nvar logger_1 = __webpack_require__(/*! ./logger */ \"./node_modules/supertokens-website/lib/build/logger.js\");\nfunction getUrlFromConfig(config) {\n    var url = config.url === undefined ? \"\" : config.url;\n    var baseURL = config.baseURL;\n    if (baseURL !== undefined) {\n        if (url.charAt(0) === \"/\" && baseURL.charAt(baseURL.length - 1) === \"/\") {\n            url = baseURL + url.substr(1);\n        } else if (url.charAt(0) !== \"/\" && baseURL.charAt(baseURL.length - 1) !== \"/\") {\n            url = baseURL + \"/\" + url;\n        } else {\n            url = baseURL + url;\n        }\n    }\n    return url;\n}\nfunction interceptorFunctionRequestFulfilled(config) {\n    return __awaiter(this, void 0, void 0, function () {\n        var url, doNotDoInterception, preRequestLSS, configWithAntiCsrf, antiCsrfToken, transferMethod;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    (0, logger_1.logDebugMessage)(\"interceptorFunctionRequestFulfilled: started axios interception\");\n                    url = getUrlFromConfig(config);\n                    doNotDoInterception = false;\n                    try {\n                        doNotDoInterception =\n                            typeof url === \"string\" &&\n                            !(0, utils_1.shouldDoInterceptionBasedOnUrl)(\n                                url,\n                                fetch_1.default.config.apiDomain,\n                                fetch_1.default.config.sessionTokenBackendDomain\n                            );\n                    } catch (err) {\n                        if (err.message === \"Please provide a valid domain name\") {\n                            (0, logger_1.logDebugMessage)(\n                                \"interceptorFunctionRequestFulfilled: Trying shouldDoInterceptionBasedOnUrl with location.origin\"\n                            );\n                            // .origin gives the port as well..\n                            doNotDoInterception = !(0, utils_1.shouldDoInterceptionBasedOnUrl)(\n                                windowHandler_1.default.getReferenceOrThrow().windowHandler.location.getOrigin(),\n                                fetch_1.default.config.apiDomain,\n                                fetch_1.default.config.sessionTokenBackendDomain\n                            );\n                        } else {\n                            throw err;\n                        }\n                    }\n                    (0,\n                    logger_1.logDebugMessage)(\"interceptorFunctionRequestFulfilled: Value of doNotDoInterception: \" + doNotDoInterception);\n                    if (doNotDoInterception) {\n                        (0, logger_1.logDebugMessage)(\n                            \"interceptorFunctionRequestFulfilled: Returning config unchanged\"\n                        );\n                        // this check means that if you are using axios via inteceptor, then we only do the refresh steps if you are calling your APIs.\n                        return [2 /*return*/, config];\n                    }\n                    (0, logger_1.logDebugMessage)(\"interceptorFunctionRequestFulfilled: Modifying config\");\n                    processState_1.ProcessState.getInstance().addState(\n                        processState_1.PROCESS_STATE.CALLING_INTERCEPTION_REQUEST\n                    );\n                    return [4 /*yield*/, (0, fetch_1.getLocalSessionState)(true)];\n                case 1:\n                    preRequestLSS = _a.sent();\n                    configWithAntiCsrf = config;\n                    if (!(preRequestLSS.status === \"EXISTS\")) return [3 /*break*/, 3];\n                    return [4 /*yield*/, fetch_1.AntiCsrfToken.getToken(preRequestLSS.lastAccessTokenUpdate)];\n                case 2:\n                    antiCsrfToken = _a.sent();\n                    if (antiCsrfToken !== undefined) {\n                        (0, logger_1.logDebugMessage)(\n                            \"interceptorFunctionRequestFulfilled: Adding anti-csrf token to request\"\n                        );\n                        configWithAntiCsrf = __assign(__assign({}, configWithAntiCsrf), {\n                            headers:\n                                configWithAntiCsrf === undefined\n                                    ? {\n                                          \"anti-csrf\": antiCsrfToken\n                                      }\n                                    : __assign(__assign({}, configWithAntiCsrf.headers), { \"anti-csrf\": antiCsrfToken })\n                        });\n                    }\n                    _a.label = 3;\n                case 3:\n                    if (fetch_1.default.config.autoAddCredentials && configWithAntiCsrf.withCredentials === undefined) {\n                        (0, logger_1.logDebugMessage)(\n                            \"interceptorFunctionRequestFulfilled: Adding credentials include\"\n                        );\n                        configWithAntiCsrf = __assign(__assign({}, configWithAntiCsrf), { withCredentials: true });\n                    }\n                    // adding rid for anti-csrf protection: Anti-csrf via custom header\n                    (0,\n                    logger_1.logDebugMessage)(\"interceptorFunctionRequestFulfilled: Adding rid header: anti-csrf (it may be overriden by the user's provided rid)\");\n                    configWithAntiCsrf = __assign(__assign({}, configWithAntiCsrf), {\n                        headers:\n                            configWithAntiCsrf === undefined\n                                ? {\n                                      rid: \"anti-csrf\"\n                                  }\n                                : __assign({ rid: \"anti-csrf\" }, configWithAntiCsrf.headers)\n                    });\n                    transferMethod = fetch_1.default.config.tokenTransferMethod;\n                    (0,\n                    logger_1.logDebugMessage)(\"interceptorFunctionRequestFulfilled: Adding st-auth-mode header: \" + transferMethod);\n                    configWithAntiCsrf.headers[\"st-auth-mode\"] = transferMethod;\n                    return [4 /*yield*/, removeAuthHeaderIfMatchesLocalToken(configWithAntiCsrf)];\n                case 4:\n                    configWithAntiCsrf = _a.sent();\n                    return [4 /*yield*/, setAuthorizationHeaderIfRequired(configWithAntiCsrf)];\n                case 5:\n                    _a.sent();\n                    (0, logger_1.logDebugMessage)(\"interceptorFunctionRequestFulfilled: returning modified config\");\n                    return [2 /*return*/, configWithAntiCsrf];\n            }\n        });\n    });\n}\nexports.interceptorFunctionRequestFulfilled = interceptorFunctionRequestFulfilled;\nfunction responseInterceptor(axiosInstance) {\n    var _this = this;\n    return function (response) {\n        return __awaiter(_this, void 0, void 0, function () {\n            var doNotDoInterception, url, preRequestLSS, config, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        doNotDoInterception = false;\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, , 8, 14]);\n                        if (!fetch_1.default.initCalled) {\n                            throw new Error(\"init function not called\");\n                        }\n                        (0, logger_1.logDebugMessage)(\"responseInterceptor: started\");\n                        (0,\n                        logger_1.logDebugMessage)(\"responseInterceptor: already intercepted: \" + response.headers[\"x-supertokens-xhr-intercepted\"]);\n                        url = getUrlFromConfig(response.config);\n                        try {\n                            doNotDoInterception =\n                                (typeof url === \"string\" &&\n                                    !(0, utils_1.shouldDoInterceptionBasedOnUrl)(\n                                        url,\n                                        fetch_1.default.config.apiDomain,\n                                        fetch_1.default.config.sessionTokenBackendDomain\n                                    )) ||\n                                !!response.headers[\"x-supertokens-xhr-intercepted\"];\n                        } catch (err) {\n                            if (err.message === \"Please provide a valid domain name\") {\n                                (0, logger_1.logDebugMessage)(\n                                    \"responseInterceptor: Trying shouldDoInterceptionBasedOnUrl with location.origin\"\n                                );\n                                // .origin gives the port as well..\n                                doNotDoInterception =\n                                    !(0, utils_1.shouldDoInterceptionBasedOnUrl)(\n                                        windowHandler_1.default\n                                            .getReferenceOrThrow()\n                                            .windowHandler.location.getOrigin(),\n                                        fetch_1.default.config.apiDomain,\n                                        fetch_1.default.config.sessionTokenBackendDomain\n                                    ) || !!response.headers[\"x-supertokens-xhr-intercepted\"];\n                            } else {\n                                throw err;\n                            }\n                        }\n                        (0,\n                        logger_1.logDebugMessage)(\"responseInterceptor: Value of doNotDoInterception: \" + doNotDoInterception);\n                        if (doNotDoInterception) {\n                            (0, logger_1.logDebugMessage)(\"responseInterceptor: Returning without interception\");\n                            // this check means that if you are using axios via inteceptor, then we only do the refresh steps if you are calling your APIs.\n                            return [2 /*return*/, response];\n                        }\n                        (0, logger_1.logDebugMessage)(\"responseInterceptor: Interception started\");\n                        processState_1.ProcessState.getInstance().addState(\n                            processState_1.PROCESS_STATE.CALLING_INTERCEPTION_RESPONSE\n                        );\n                        return [4 /*yield*/, (0, fetch_1.getLocalSessionState)(false)];\n                    case 2:\n                        preRequestLSS = _b.sent();\n                        return [4 /*yield*/, saveTokensFromHeaders(response)];\n                    case 3:\n                        _b.sent();\n                        (0,\n                        fetch_1.fireSessionUpdateEventsIfNecessary)(preRequestLSS.status === \"EXISTS\", response.status, response.headers[\"front-token\"]);\n                        if (!(response.status === fetch_1.default.config.sessionExpiredStatusCode))\n                            return [3 /*break*/, 4];\n                        (0, logger_1.logDebugMessage)(\"responseInterceptor: Status code is: \" + response.status);\n                        config = response.config;\n                        return [\n                            2 /*return*/,\n                            AuthHttpRequest.doRequest(\n                                function (config) {\n                                    // we create an instance since we don't want to intercept this.\n                                    // const instance = axios.create();\n                                    // return instance(config);\n                                    return axiosInstance(config);\n                                },\n                                config,\n                                url,\n                                response,\n                                undefined,\n                                true\n                            )\n                        ];\n                    case 4:\n                        if (!(response.status === fetch_1.default.config.invalidClaimStatusCode))\n                            return [3 /*break*/, 6];\n                        // only fire event if body is defined.\n                        return [4 /*yield*/, (0, fetch_1.onInvalidClaimResponse)(response)];\n                    case 5:\n                        // only fire event if body is defined.\n                        _b.sent();\n                        _b.label = 6;\n                    case 6:\n                        return [2 /*return*/, response];\n                    case 7:\n                        return [3 /*break*/, 14];\n                    case 8:\n                        _a = !doNotDoInterception;\n                        if (!_a) return [3 /*break*/, 10];\n                        return [4 /*yield*/, (0, fetch_1.getLocalSessionState)(true)];\n                    case 9:\n                        // we do not call doesSessionExist here cause the user might override that\n                        // function here and then it may break the logic of our original implementation.\n                        _a = !(_b.sent().status === \"EXISTS\");\n                        _b.label = 10;\n                    case 10:\n                        if (!_a) return [3 /*break*/, 13];\n                        (0,\n                        logger_1.logDebugMessage)(\"responseInterceptor: local session doesn't exist, so removing anti-csrf and sFrontToken\");\n                        return [4 /*yield*/, fetch_1.AntiCsrfToken.removeToken()];\n                    case 11:\n                        _b.sent();\n                        return [4 /*yield*/, fetch_1.FrontToken.removeToken()];\n                    case 12:\n                        _b.sent();\n                        _b.label = 13;\n                    case 13:\n                        return [7 /*endfinally*/];\n                    case 14:\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n}\nexports.responseInterceptor = responseInterceptor;\nfunction responseErrorInterceptor(axiosInstance) {\n    var _this = this;\n    return function (error) {\n        return __awaiter(_this, void 0, void 0, function () {\n            var config;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        (0, logger_1.logDebugMessage)(\"responseErrorInterceptor: called\");\n                        (0,\n                        logger_1.logDebugMessage)(\"responseErrorInterceptor: already intercepted: \" + (error.response && error.response.headers[\"x-supertokens-xhr-intercepted\"]));\n                        if (error.response.headers[\"x-supertokens-xhr-intercepted\"]) {\n                            throw error;\n                        }\n                        if (\n                            !(\n                                error.response !== undefined &&\n                                error.response.status === fetch_1.default.config.sessionExpiredStatusCode\n                            )\n                        )\n                            return [3 /*break*/, 1];\n                        (0,\n                        logger_1.logDebugMessage)(\"responseErrorInterceptor: Status code is: \" + error.response.status);\n                        config = error.config;\n                        return [\n                            2 /*return*/,\n                            AuthHttpRequest.doRequest(\n                                function (config) {\n                                    // we create an instance since we don't want to intercept this.\n                                    // const instance = axios.create();\n                                    // return instance(config);\n                                    return axiosInstance(config);\n                                },\n                                config,\n                                getUrlFromConfig(config),\n                                undefined,\n                                error,\n                                true\n                            )\n                        ];\n                    case 1:\n                        if (\n                            !(\n                                error.response !== undefined &&\n                                error.response.status === fetch_1.default.config.invalidClaimStatusCode\n                            )\n                        )\n                            return [3 /*break*/, 3];\n                        return [4 /*yield*/, (0, fetch_1.onInvalidClaimResponse)(error.response)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        throw error;\n                }\n            });\n        });\n    };\n}\nexports.responseErrorInterceptor = responseErrorInterceptor;\n/**\n * @class AuthHttpRequest\n * @description wrapper for common http methods.\n */\nvar AuthHttpRequest = /** @class */ (function () {\n    function AuthHttpRequest() {}\n    var _a;\n    _a = AuthHttpRequest;\n    /**\n     * @description sends the actual http request and returns a response if successful/\n     * If not successful due to session expiry reasons, it\n     * attempts to call the refresh token API and if that is successful, calls this API again.\n     * @throws Error\n     */\n    AuthHttpRequest.doRequest = function (httpCall, config, url, prevResponse, prevError, viaInterceptor) {\n        if (viaInterceptor === void 0) {\n            viaInterceptor = false;\n        }\n        return __awaiter(void 0, void 0, void 0, function () {\n            var doNotDoInterception,\n                returnObj,\n                preRequestLSS,\n                configWithAntiCsrf,\n                antiCsrfToken,\n                transferMethod,\n                localPrevError,\n                localPrevResponse,\n                response,\n                _b,\n                refreshResult,\n                _c,\n                err_1,\n                response,\n                refreshResult,\n                _d,\n                postRequestIdToken;\n            return __generator(_a, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        if (!fetch_1.default.initCalled) {\n                            throw Error(\"init function not called\");\n                        }\n                        (0, logger_1.logDebugMessage)(\"doRequest: called\");\n                        doNotDoInterception = false;\n                        try {\n                            doNotDoInterception =\n                                typeof url === \"string\" &&\n                                !(0, utils_1.shouldDoInterceptionBasedOnUrl)(\n                                    url,\n                                    fetch_1.default.config.apiDomain,\n                                    fetch_1.default.config.sessionTokenBackendDomain\n                                ) &&\n                                viaInterceptor;\n                        } catch (err) {\n                            if (err.message === \"Please provide a valid domain name\") {\n                                (0, logger_1.logDebugMessage)(\n                                    \"doRequest: Trying shouldDoInterceptionBasedOnUrl with location.origin\"\n                                );\n                                // .origin gives the port as well..\n                                doNotDoInterception =\n                                    !(0, utils_1.shouldDoInterceptionBasedOnUrl)(\n                                        windowHandler_1.default\n                                            .getReferenceOrThrow()\n                                            .windowHandler.location.getOrigin(),\n                                        fetch_1.default.config.apiDomain,\n                                        fetch_1.default.config.sessionTokenBackendDomain\n                                    ) && viaInterceptor;\n                            } else {\n                                throw err;\n                            }\n                        }\n                        (0,\n                        logger_1.logDebugMessage)(\"doRequest: Value of doNotDoInterception: \" + doNotDoInterception);\n                        if (!doNotDoInterception) return [3 /*break*/, 2];\n                        (0, logger_1.logDebugMessage)(\"doRequest: Returning without interception\");\n                        if (prevError !== undefined) {\n                            throw prevError;\n                        } else if (prevResponse !== undefined) {\n                            return [2 /*return*/, prevResponse];\n                        }\n                        return [4 /*yield*/, httpCall(config)];\n                    case 1:\n                        return [2 /*return*/, _e.sent()];\n                    case 2:\n                        (0, logger_1.logDebugMessage)(\"doRequest: Interception started\");\n                        return [4 /*yield*/, removeAuthHeaderIfMatchesLocalToken(config)];\n                    case 3:\n                        config = _e.sent();\n                        _e.label = 4;\n                    case 4:\n                        _e.trys.push([4, , 40, 45]);\n                        returnObj = undefined;\n                        _e.label = 5;\n                    case 5:\n                        if (false) {}\n                        return [4 /*yield*/, (0, fetch_1.getLocalSessionState)(true)];\n                    case 6:\n                        preRequestLSS = _e.sent();\n                        configWithAntiCsrf = config;\n                        if (!(preRequestLSS.status === \"EXISTS\")) return [3 /*break*/, 8];\n                        return [4 /*yield*/, fetch_1.AntiCsrfToken.getToken(preRequestLSS.lastAccessTokenUpdate)];\n                    case 7:\n                        antiCsrfToken = _e.sent();\n                        if (antiCsrfToken !== undefined) {\n                            (0, logger_1.logDebugMessage)(\"doRequest: Adding anti-csrf token to request\");\n                            configWithAntiCsrf = __assign(__assign({}, configWithAntiCsrf), {\n                                headers:\n                                    configWithAntiCsrf === undefined\n                                        ? {\n                                              \"anti-csrf\": antiCsrfToken\n                                          }\n                                        : __assign(__assign({}, configWithAntiCsrf.headers), {\n                                              \"anti-csrf\": antiCsrfToken\n                                          })\n                            });\n                        }\n                        _e.label = 8;\n                    case 8:\n                        if (\n                            fetch_1.default.config.autoAddCredentials &&\n                            configWithAntiCsrf.withCredentials === undefined\n                        ) {\n                            (0, logger_1.logDebugMessage)(\"doRequest: Adding credentials include\");\n                            configWithAntiCsrf = __assign(__assign({}, configWithAntiCsrf), { withCredentials: true });\n                        }\n                        // adding rid for anti-csrf protection: Anti-csrf via custom header\n                        (0,\n                        logger_1.logDebugMessage)(\"doRequest: Adding rid header: anti-csrf (May get overriden by user's rid)\");\n                        configWithAntiCsrf = __assign(__assign({}, configWithAntiCsrf), {\n                            headers:\n                                configWithAntiCsrf === undefined\n                                    ? {\n                                          rid: \"anti-csrf\"\n                                      }\n                                    : __assign({ rid: \"anti-csrf\" }, configWithAntiCsrf.headers)\n                        });\n                        transferMethod = fetch_1.default.config.tokenTransferMethod;\n                        (0, logger_1.logDebugMessage)(\"doRequest: Adding st-auth-mode header: \" + transferMethod);\n                        configWithAntiCsrf.headers[\"st-auth-mode\"] = transferMethod;\n                        return [4 /*yield*/, setAuthorizationHeaderIfRequired(configWithAntiCsrf)];\n                    case 9:\n                        _e.sent();\n                        _e.label = 10;\n                    case 10:\n                        _e.trys.push([10, 25, , 38]);\n                        localPrevError = prevError;\n                        localPrevResponse = prevResponse;\n                        prevError = undefined;\n                        prevResponse = undefined;\n                        if (localPrevError !== undefined) {\n                            (0, logger_1.logDebugMessage)(\n                                \"doRequest: Not making call because localPrevError is not undefined\"\n                            );\n                            throw localPrevError;\n                        }\n                        if (localPrevResponse !== undefined) {\n                            (0, logger_1.logDebugMessage)(\n                                \"doRequest: Not making call because localPrevResponse is not undefined\"\n                            );\n                        } else {\n                            (0, logger_1.logDebugMessage)(\"doRequest: Making user's http call\");\n                        }\n                        if (!(localPrevResponse === undefined)) return [3 /*break*/, 12];\n                        return [4 /*yield*/, httpCall(configWithAntiCsrf)];\n                    case 11:\n                        _b = _e.sent();\n                        return [3 /*break*/, 13];\n                    case 12:\n                        _b = localPrevResponse;\n                        _e.label = 13;\n                    case 13:\n                        response = _b;\n                        (0, logger_1.logDebugMessage)(\"doRequest: User's http call ended\");\n                        return [4 /*yield*/, saveTokensFromHeaders(response)];\n                    case 14:\n                        _e.sent();\n                        (0,\n                        fetch_1.fireSessionUpdateEventsIfNecessary)(preRequestLSS.status === \"EXISTS\", response.status, response.headers[\"front-token\"]);\n                        if (!(response.status === fetch_1.default.config.sessionExpiredStatusCode))\n                            return [3 /*break*/, 21];\n                        (0, logger_1.logDebugMessage)(\"doRequest: Status code is: \" + response.status);\n                        return [4 /*yield*/, (0, fetch_1.onUnauthorisedResponse)(preRequestLSS)];\n                    case 15:\n                        refreshResult = _e.sent();\n                        if (!(refreshResult.result !== \"RETRY\")) return [3 /*break*/, 20];\n                        (0, logger_1.logDebugMessage)(\"doRequest: Not retrying original request\");\n                        if (!refreshResult.error) return [3 /*break*/, 17];\n                        return [4 /*yield*/, (0, axiosError_1.createAxiosErrorFromFetchResp)(refreshResult.error)];\n                    case 16:\n                        _c = _e.sent();\n                        return [3 /*break*/, 19];\n                    case 17:\n                        return [4 /*yield*/, (0, axiosError_1.createAxiosErrorFromAxiosResp)(response)];\n                    case 18:\n                        _c = _e.sent();\n                        _e.label = 19;\n                    case 19:\n                        // Returning refreshResult.error as an Axios Error if we attempted a refresh\n                        // Returning the response to the original response as an error if we did not attempt refreshing\n                        returnObj = _c;\n                        return [3 /*break*/, 39];\n                    case 20:\n                        (0, logger_1.logDebugMessage)(\"doRequest: Retrying original request\");\n                        return [3 /*break*/, 24];\n                    case 21:\n                        if (!(response.status === fetch_1.default.config.invalidClaimStatusCode))\n                            return [3 /*break*/, 23];\n                        return [4 /*yield*/, (0, fetch_1.onInvalidClaimResponse)(response)];\n                    case 22:\n                        _e.sent();\n                        _e.label = 23;\n                    case 23:\n                        return [2 /*return*/, response];\n                    case 24:\n                        return [3 /*break*/, 38];\n                    case 25:\n                        err_1 = _e.sent();\n                        response = err_1.response;\n                        if (!(response !== undefined)) return [3 /*break*/, 36];\n                        return [4 /*yield*/, saveTokensFromHeaders(response)];\n                    case 26:\n                        _e.sent();\n                        (0,\n                        fetch_1.fireSessionUpdateEventsIfNecessary)(preRequestLSS.status === \"EXISTS\", response.status, response.headers[\"front-token\"]);\n                        if (!(response.status === fetch_1.default.config.sessionExpiredStatusCode))\n                            return [3 /*break*/, 32];\n                        (0, logger_1.logDebugMessage)(\"doRequest: Status code is: \" + response.status);\n                        return [4 /*yield*/, (0, fetch_1.onUnauthorisedResponse)(preRequestLSS)];\n                    case 27:\n                        refreshResult = _e.sent();\n                        if (!(refreshResult.result !== \"RETRY\")) return [3 /*break*/, 31];\n                        (0, logger_1.logDebugMessage)(\"doRequest: Not retrying original request\");\n                        if (!(refreshResult.error !== undefined)) return [3 /*break*/, 29];\n                        return [4 /*yield*/, (0, axiosError_1.createAxiosErrorFromFetchResp)(refreshResult.error)];\n                    case 28:\n                        _d = _e.sent();\n                        return [3 /*break*/, 30];\n                    case 29:\n                        _d = err_1;\n                        _e.label = 30;\n                    case 30:\n                        // Returning refreshResult.error as an Axios Error if we attempted a refresh\n                        // Returning the original error if we did not attempt refreshing\n                        returnObj = _d;\n                        return [3 /*break*/, 39];\n                    case 31:\n                        (0, logger_1.logDebugMessage)(\"doRequest: Retrying original request\");\n                        return [3 /*break*/, 35];\n                    case 32:\n                        if (!(response.status === fetch_1.default.config.invalidClaimStatusCode))\n                            return [3 /*break*/, 34];\n                        return [4 /*yield*/, (0, fetch_1.onInvalidClaimResponse)(response)];\n                    case 33:\n                        _e.sent();\n                        _e.label = 34;\n                    case 34:\n                        throw err_1;\n                    case 35:\n                        return [3 /*break*/, 37];\n                    case 36:\n                        throw err_1;\n                    case 37:\n                        return [3 /*break*/, 38];\n                    case 38:\n                        return [3 /*break*/, 5];\n                    case 39:\n                        // if it comes here, means we called break. which happens only if we have logged out.\n                        // which means it's a 401, so we throw\n                        throw returnObj;\n                    case 40:\n                        return [4 /*yield*/, (0, fetch_1.getLocalSessionState)(false)];\n                    case 41:\n                        postRequestIdToken = _e.sent();\n                        if (!(postRequestIdToken.status === \"NOT_EXISTS\")) return [3 /*break*/, 44];\n                        (0,\n                        logger_1.logDebugMessage)(\"doRequest: local session doesn't exist, so removing anti-csrf and sFrontToken\");\n                        return [4 /*yield*/, fetch_1.AntiCsrfToken.removeToken()];\n                    case 42:\n                        _e.sent();\n                        return [4 /*yield*/, fetch_1.FrontToken.removeToken()];\n                    case 43:\n                        _e.sent();\n                        _e.label = 44;\n                    case 44:\n                        return [7 /*endfinally*/];\n                    case 45:\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return AuthHttpRequest;\n})();\nexports[\"default\"] = AuthHttpRequest;\nfunction setAuthorizationHeaderIfRequired(requestConfig) {\n    return __awaiter(this, void 0, void 0, function () {\n        var accessToken, refreshToken;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    if (requestConfig.headers === undefined) {\n                        // This is makes TS happy\n                        requestConfig.headers = {};\n                    }\n                    (0, logger_1.logDebugMessage)(\"setAuthorizationHeaderIfRequired: adding existing tokens as header\");\n                    return [4 /*yield*/, (0, fetch_1.getTokenForHeaderAuth)(\"access\")];\n                case 1:\n                    accessToken = _b.sent();\n                    return [4 /*yield*/, (0, fetch_1.getTokenForHeaderAuth)(\"refresh\")];\n                case 2:\n                    refreshToken = _b.sent();\n                    // We don't add the refresh token because that's only required by the refresh call which is done with fetch\n                    // Still, we only add the Authorization header if both are present, because we are planning to add an option to expose the\n                    // access token to the frontend while using cookie based auth - so that users can get the access token to use\n                    if (accessToken !== undefined && refreshToken !== undefined) {\n                        if (\n                            requestConfig.headers[\"Authorization\"] !== undefined ||\n                            requestConfig.headers[\"authorization\"] !== undefined\n                        ) {\n                            (0, logger_1.logDebugMessage)(\n                                \"setAuthorizationHeaderIfRequired: Authorization header defined by the user, not adding\"\n                            );\n                        } else {\n                            (0, logger_1.logDebugMessage)(\n                                \"setAuthorizationHeaderIfRequired: added authorization header\"\n                            );\n                            requestConfig.headers = __assign(__assign({}, requestConfig.headers), {\n                                Authorization: \"Bearer \".concat(accessToken)\n                            });\n                            requestConfig.__supertokensAddedAuthHeader = true;\n                        }\n                    } else {\n                        (0, logger_1.logDebugMessage)(\n                            \"setAuthorizationHeaderIfRequired: token for header based auth not found\"\n                        );\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction saveTokensFromHeaders(response) {\n    return __awaiter(this, void 0, void 0, function () {\n        var refreshToken, accessToken, frontToken, antiCsrfToken, tok;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    (0, logger_1.logDebugMessage)(\"saveTokensFromHeaders: Saving updated tokens from the response\");\n                    refreshToken = response.headers[\"st-refresh-token\"];\n                    if (!(refreshToken !== undefined)) return [3 /*break*/, 2];\n                    (0, logger_1.logDebugMessage)(\"saveTokensFromHeaders: saving new refresh token\");\n                    return [4 /*yield*/, (0, fetch_1.setToken)(\"refresh\", refreshToken)];\n                case 1:\n                    _b.sent();\n                    _b.label = 2;\n                case 2:\n                    accessToken = response.headers[\"st-access-token\"];\n                    if (!(accessToken !== undefined)) return [3 /*break*/, 4];\n                    (0, logger_1.logDebugMessage)(\"saveTokensFromHeaders: saving new access token\");\n                    return [4 /*yield*/, (0, fetch_1.setToken)(\"access\", accessToken)];\n                case 3:\n                    _b.sent();\n                    _b.label = 4;\n                case 4:\n                    frontToken = response.headers[\"front-token\"];\n                    if (!(frontToken !== undefined)) return [3 /*break*/, 6];\n                    (0, logger_1.logDebugMessage)(\"doRequest: Setting sFrontToken: \" + frontToken);\n                    return [4 /*yield*/, fetch_1.FrontToken.setItem(frontToken)];\n                case 5:\n                    _b.sent();\n                    _b.label = 6;\n                case 6:\n                    antiCsrfToken = response.headers[\"anti-csrf\"];\n                    if (!(antiCsrfToken !== undefined)) return [3 /*break*/, 9];\n                    return [4 /*yield*/, (0, fetch_1.getLocalSessionState)(true)];\n                case 7:\n                    tok = _b.sent();\n                    if (!(tok.status === \"EXISTS\")) return [3 /*break*/, 9];\n                    (0, logger_1.logDebugMessage)(\"doRequest: Setting anti-csrf token\");\n                    return [4 /*yield*/, fetch_1.AntiCsrfToken.setItem(tok.lastAccessTokenUpdate, antiCsrfToken)];\n                case 8:\n                    _b.sent();\n                    _b.label = 9;\n                case 9:\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction removeAuthHeaderIfMatchesLocalToken(config) {\n    return __awaiter(this, void 0, void 0, function () {\n        var accessToken, authHeader, res;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    return [4 /*yield*/, (0, fetch_1.getTokenForHeaderAuth)(\"access\")];\n                case 1:\n                    accessToken = _b.sent();\n                    authHeader = config.headers.Authorization || config.headers.authorization;\n                    if (accessToken !== undefined) {\n                        if (authHeader === \"Bearer \".concat(accessToken) || \"__supertokensAddedAuthHeader\" in config) {\n                            // We are ignoring the Authorization header set by the user in this case, because it would cause issues\n                            // If we do not ignore this, then this header would be used even if the request is being retried after a refresh, even though it contains an outdated access token.\n                            // This causes an infinite refresh loop.\n                            (0, logger_1.logDebugMessage)(\n                                \"removeAuthHeaderIfMatchesLocalToken: Removing Authorization from user provided headers because it contains our access token\"\n                            );\n                            res = __assign(__assign({}, config), { headers: __assign({}, config.headers) });\n                            delete res.headers.authorization;\n                            delete res.headers.Authorization;\n                            return [2 /*return*/, res];\n                        }\n                    }\n                    return [2 /*return*/, config];\n            }\n        });\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/axios.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/axiosError.js":
/*!******************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/axiosError.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter =\n    (this && this.__awaiter) ||\n    function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n            return value instanceof P\n                ? value\n                : new P(function (resolve) {\n                      resolve(value);\n                  });\n        }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n                try {\n                    step(generator.next(value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function rejected(value) {\n                try {\n                    step(generator[\"throw\"](value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function step(result) {\n                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\nvar __generator =\n    (this && this.__generator) ||\n    function (thisArg, body) {\n        var _ = {\n                label: 0,\n                sent: function () {\n                    if (t[0] & 1) throw t[1];\n                    return t[1];\n                },\n                trys: [],\n                ops: []\n            },\n            f,\n            y,\n            t,\n            g;\n        return (\n            (g = { next: verb(0), throw: verb(1), return: verb(2) }),\n            typeof Symbol === \"function\" &&\n                (g[Symbol.iterator] = function () {\n                    return this;\n                }),\n            g\n        );\n        function verb(n) {\n            return function (v) {\n                return step([n, v]);\n            };\n        }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (\n                        ((f = 1),\n                        y &&\n                            (t =\n                                op[0] & 2\n                                    ? y[\"return\"]\n                                    : op[0]\n                                    ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0)\n                                    : y.next) &&\n                            !(t = t.call(y, op[1])).done)\n                    )\n                        return t;\n                    if (((y = 0), t)) op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (\n                                !((t = _.trys), (t = t.length > 0 && t[t.length - 1])) &&\n                                (op[0] === 6 || op[0] === 2)\n                            ) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2]) _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                } catch (e) {\n                    op = [6, e];\n                    y = 0;\n                } finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5) throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createAxiosErrorFromAxiosResp = exports.createAxiosErrorFromFetchResp = void 0;\n/**\n * From axios package\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nfunction enhanceAxiosError(error, config, code, request, response) {\n    error.config = config;\n    if (code) {\n        error.code = code;\n    }\n    error.request = request;\n    error.response = response;\n    error.isAxiosError = true;\n    error.toJSON = function toJSON() {\n        return {\n            // Standard\n            message: this.message,\n            name: this.name,\n            // Microsoft\n            description: this.description,\n            number: this.number,\n            // Mozilla\n            fileName: this.fileName,\n            lineNumber: this.lineNumber,\n            columnNumber: this.columnNumber,\n            stack: this.stack,\n            // Axios\n            config: this.config,\n            code: this.code\n        };\n    };\n    return error;\n}\nfunction createAxiosErrorFromFetchResp(response) {\n    return __awaiter(this, void 0, void 0, function () {\n        var config, contentType, data, _a, axiosResponse;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    config = {\n                        url: response.url,\n                        headers: response.headers\n                    };\n                    contentType = response.headers.get(\"content-type\");\n                    if (!(contentType === null)) return [3 /*break*/, 5];\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, response.text()];\n                case 2:\n                    data = _b.sent();\n                    return [3 /*break*/, 4];\n                case 3:\n                    _a = _b.sent();\n                    data = \"\";\n                    return [3 /*break*/, 4];\n                case 4:\n                    return [3 /*break*/, 11];\n                case 5:\n                    if (!contentType.includes(\"application/json\")) return [3 /*break*/, 7];\n                    return [4 /*yield*/, response.json()];\n                case 6:\n                    data = _b.sent();\n                    return [3 /*break*/, 11];\n                case 7:\n                    if (!contentType.includes(\"text/\")) return [3 /*break*/, 9];\n                    return [4 /*yield*/, response.text()];\n                case 8:\n                    data = _b.sent();\n                    return [3 /*break*/, 11];\n                case 9:\n                    return [4 /*yield*/, response.blob()];\n                case 10:\n                    data = _b.sent();\n                    _b.label = 11;\n                case 11:\n                    axiosResponse = {\n                        data: data,\n                        status: response.status,\n                        statusText: response.statusText,\n                        headers: response.headers,\n                        config: config,\n                        request: undefined\n                    };\n                    return [\n                        2 /*return*/,\n                        enhanceAxiosError(\n                            new Error(\"Request failed with status code \" + response.status),\n                            config,\n                            undefined,\n                            undefined,\n                            axiosResponse\n                        )\n                    ];\n            }\n        });\n    });\n}\nexports.createAxiosErrorFromFetchResp = createAxiosErrorFromFetchResp;\nfunction createAxiosErrorFromAxiosResp(response) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [\n                2 /*return*/,\n                enhanceAxiosError(\n                    new Error(\"Request failed with status code \" + response.status),\n                    response.config,\n                    undefined,\n                    response.request,\n                    response\n                )\n            ];\n        });\n    });\n}\nexports.createAxiosErrorFromAxiosResp = createAxiosErrorFromAxiosResp;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/axiosError.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/claims/booleanClaim.js":
/*!***************************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/claims/booleanClaim.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __extends =\n    (this && this.__extends) ||\n    (function () {\n        var extendStatics = function (d, b) {\n            extendStatics =\n                Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array &&\n                    function (d, b) {\n                        d.__proto__ = b;\n                    }) ||\n                function (d, b) {\n                    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n                };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());\n        };\n    })();\nvar __assign =\n    (this && this.__assign) ||\n    function () {\n        __assign =\n            Object.assign ||\n            function (t) {\n                for (var s, i = 1, n = arguments.length; i < n; i++) {\n                    s = arguments[i];\n                    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n                }\n                return t;\n            };\n        return __assign.apply(this, arguments);\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BooleanClaim = void 0;\nvar primitiveClaim_1 = __webpack_require__(/*! ./primitiveClaim */ \"./node_modules/supertokens-website/lib/build/claims/primitiveClaim.js\");\nvar BooleanClaim = /** @class */ (function (_super) {\n    __extends(BooleanClaim, _super);\n    function BooleanClaim(config) {\n        var _this = _super.call(this, config) || this;\n        _this.validators = __assign(__assign({}, _this.validators), {\n            isTrue: function (maxAge) {\n                return _this.validators.hasValue(true, maxAge);\n            },\n            isFalse: function (maxAge) {\n                return _this.validators.hasValue(false, maxAge);\n            }\n        });\n        return _this;\n    }\n    return BooleanClaim;\n})(primitiveClaim_1.PrimitiveClaim);\nexports.BooleanClaim = BooleanClaim;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS9saWIvYnVpbGQvY2xhaW1zL2Jvb2xlYW5DbGFpbS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixnQkFBZ0I7QUFDbkM7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCxPQUFPO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQix1QkFBdUIsbUJBQU8sQ0FBQywrRkFBa0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0M7QUFDL0M7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS9saWIvYnVpbGQvY2xhaW1zL2Jvb2xlYW5DbGFpbS5qcz83ZjZlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9XG4gICAgKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8XG4gICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICAgICAgZXh0ZW5kU3RhdGljcyA9XG4gICAgICAgICAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiZcbiAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGQuX19wcm90b19fID0gYjtcbiAgICAgICAgICAgICAgICAgICAgfSkgfHxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgICAgICBmdW5jdGlvbiBfXygpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnN0cnVjdG9yID0gZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlKSwgbmV3IF9fKCkpO1xuICAgICAgICB9O1xuICAgIH0pKCk7XG52YXIgX19hc3NpZ24gPVxuICAgICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8XG4gICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBfX2Fzc2lnbiA9XG4gICAgICAgICAgICBPYmplY3QuYXNzaWduIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpIHRbcF0gPSBzW3BdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdDtcbiAgICAgICAgICAgIH07XG4gICAgICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkJvb2xlYW5DbGFpbSA9IHZvaWQgMDtcbnZhciBwcmltaXRpdmVDbGFpbV8xID0gcmVxdWlyZShcIi4vcHJpbWl0aXZlQ2xhaW1cIik7XG52YXIgQm9vbGVhbkNsYWltID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhCb29sZWFuQ2xhaW0sIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQm9vbGVhbkNsYWltKGNvbmZpZykge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBjb25maWcpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLnZhbGlkYXRvcnMgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgX3RoaXMudmFsaWRhdG9ycyksIHtcbiAgICAgICAgICAgIGlzVHJ1ZTogZnVuY3Rpb24gKG1heEFnZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy52YWxpZGF0b3JzLmhhc1ZhbHVlKHRydWUsIG1heEFnZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaXNGYWxzZTogZnVuY3Rpb24gKG1heEFnZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy52YWxpZGF0b3JzLmhhc1ZhbHVlKGZhbHNlLCBtYXhBZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICByZXR1cm4gQm9vbGVhbkNsYWltO1xufSkocHJpbWl0aXZlQ2xhaW1fMS5QcmltaXRpdmVDbGFpbSk7XG5leHBvcnRzLkJvb2xlYW5DbGFpbSA9IEJvb2xlYW5DbGFpbTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/claims/booleanClaim.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/claims/primitiveArrayClaim.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/claims/primitiveArrayClaim.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter =\n    (this && this.__awaiter) ||\n    function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n            return value instanceof P\n                ? value\n                : new P(function (resolve) {\n                      resolve(value);\n                  });\n        }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n                try {\n                    step(generator.next(value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function rejected(value) {\n                try {\n                    step(generator[\"throw\"](value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function step(result) {\n                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\nvar __generator =\n    (this && this.__generator) ||\n    function (thisArg, body) {\n        var _ = {\n                label: 0,\n                sent: function () {\n                    if (t[0] & 1) throw t[1];\n                    return t[1];\n                },\n                trys: [],\n                ops: []\n            },\n            f,\n            y,\n            t,\n            g;\n        return (\n            (g = { next: verb(0), throw: verb(1), return: verb(2) }),\n            typeof Symbol === \"function\" &&\n                (g[Symbol.iterator] = function () {\n                    return this;\n                }),\n            g\n        );\n        function verb(n) {\n            return function (v) {\n                return step([n, v]);\n            };\n        }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (\n                        ((f = 1),\n                        y &&\n                            (t =\n                                op[0] & 2\n                                    ? y[\"return\"]\n                                    : op[0]\n                                    ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0)\n                                    : y.next) &&\n                            !(t = t.call(y, op[1])).done)\n                    )\n                        return t;\n                    if (((y = 0), t)) op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (\n                                !((t = _.trys), (t = t.length > 0 && t[t.length - 1])) &&\n                                (op[0] === 6 || op[0] === 2)\n                            ) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2]) _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                } catch (e) {\n                    op = [6, e];\n                    y = 0;\n                } finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5) throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PrimitiveArrayClaim = void 0;\nvar PrimitiveArrayClaim = /** @class */ (function () {\n    function PrimitiveArrayClaim(config) {\n        var _this = this;\n        this.validators = {\n            includes: function (val, maxAgeInSeconds, id) {\n                if (maxAgeInSeconds === void 0) {\n                    maxAgeInSeconds = _this.defaultMaxAgeInSeconds;\n                }\n                return {\n                    id: id !== undefined ? id : _this.id,\n                    refresh: function (ctx) {\n                        return _this.refresh(ctx);\n                    },\n                    shouldRefresh: function (payload, ctx) {\n                        return (\n                            _this.getValueFromPayload(payload, ctx) === undefined ||\n                            // We know payload[this.id] is defined since the value is not undefined in this branch\n                            (maxAgeInSeconds !== undefined && payload[_this.id].t < Date.now() - maxAgeInSeconds * 1000)\n                        );\n                    },\n                    validate: function (payload, ctx) {\n                        return __awaiter(_this, void 0, void 0, function () {\n                            var claimVal, ageInSeconds;\n                            return __generator(this, function (_a) {\n                                claimVal = this.getValueFromPayload(payload, ctx);\n                                if (claimVal === undefined) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"value does not exist\",\n                                                expectedToInclude: val,\n                                                actualValue: claimVal\n                                            }\n                                        }\n                                    ];\n                                }\n                                ageInSeconds = (Date.now() - this.getLastFetchedTime(payload, ctx)) / 1000;\n                                if (maxAgeInSeconds !== undefined && ageInSeconds > maxAgeInSeconds) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"expired\",\n                                                ageInSeconds: ageInSeconds,\n                                                maxAgeInSeconds: maxAgeInSeconds\n                                            }\n                                        }\n                                    ];\n                                }\n                                if (!claimVal.includes(val)) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"wrong value\",\n                                                expectedToInclude: val,\n                                                actualValue: claimVal\n                                            }\n                                        }\n                                    ];\n                                }\n                                return [2 /*return*/, { isValid: true }];\n                            });\n                        });\n                    }\n                };\n            },\n            excludes: function (val, maxAgeInSeconds, id) {\n                if (maxAgeInSeconds === void 0) {\n                    maxAgeInSeconds = _this.defaultMaxAgeInSeconds;\n                }\n                return {\n                    id: id !== undefined ? id : _this.id,\n                    refresh: function (ctx) {\n                        return _this.refresh(ctx);\n                    },\n                    shouldRefresh: function (payload, ctx) {\n                        return (\n                            _this.getValueFromPayload(payload, ctx) === undefined ||\n                            // We know payload[this.id] is defined since the value is not undefined in this branch\n                            (maxAgeInSeconds !== undefined && payload[_this.id].t < Date.now() - maxAgeInSeconds * 1000)\n                        );\n                    },\n                    validate: function (payload, ctx) {\n                        return __awaiter(_this, void 0, void 0, function () {\n                            var claimVal, ageInSeconds;\n                            return __generator(this, function (_a) {\n                                claimVal = this.getValueFromPayload(payload, ctx);\n                                if (claimVal === undefined) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"value does not exist\",\n                                                expectedToNotInclude: val,\n                                                actualValue: claimVal\n                                            }\n                                        }\n                                    ];\n                                }\n                                ageInSeconds = (Date.now() - this.getLastFetchedTime(payload, ctx)) / 1000;\n                                if (maxAgeInSeconds !== undefined && ageInSeconds > maxAgeInSeconds) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"expired\",\n                                                ageInSeconds: ageInSeconds,\n                                                maxAgeInSeconds: maxAgeInSeconds\n                                            }\n                                        }\n                                    ];\n                                }\n                                if (claimVal.includes(val)) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"wrong value\",\n                                                expectedToNotInclude: val,\n                                                actualValue: claimVal\n                                            }\n                                        }\n                                    ];\n                                }\n                                return [2 /*return*/, { isValid: true }];\n                            });\n                        });\n                    }\n                };\n            },\n            includesAll: function (val, maxAgeInSeconds, id) {\n                if (maxAgeInSeconds === void 0) {\n                    maxAgeInSeconds = _this.defaultMaxAgeInSeconds;\n                }\n                return {\n                    id: id !== undefined ? id : _this.id,\n                    refresh: function (ctx) {\n                        return _this.refresh(ctx);\n                    },\n                    shouldRefresh: function (payload, ctx) {\n                        return (\n                            _this.getValueFromPayload(payload, ctx) === undefined ||\n                            // We know payload[this.id] is defined since the value is not undefined in this branch\n                            (maxAgeInSeconds !== undefined && payload[_this.id].t < Date.now() - maxAgeInSeconds * 1000)\n                        );\n                    },\n                    validate: function (payload, ctx) {\n                        return __awaiter(_this, void 0, void 0, function () {\n                            var claimVal, ageInSeconds, claimSet, isValid;\n                            return __generator(this, function (_a) {\n                                claimVal = this.getValueFromPayload(payload, ctx);\n                                if (claimVal === undefined) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"value does not exist\",\n                                                expectedToInclude: val,\n                                                actualValue: claimVal\n                                            }\n                                        }\n                                    ];\n                                }\n                                ageInSeconds = (Date.now() - this.getLastFetchedTime(payload, ctx)) / 1000;\n                                if (maxAgeInSeconds !== undefined && ageInSeconds > maxAgeInSeconds) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"expired\",\n                                                ageInSeconds: ageInSeconds,\n                                                maxAgeInSeconds: maxAgeInSeconds\n                                            }\n                                        }\n                                    ];\n                                }\n                                claimSet = new Set(claimVal);\n                                isValid = val.every(function (v) {\n                                    return claimSet.has(v);\n                                });\n                                return [\n                                    2 /*return*/,\n                                    isValid\n                                        ? { isValid: isValid }\n                                        : {\n                                              isValid: isValid,\n                                              reason: {\n                                                  message: \"wrong value\",\n                                                  expectedToInclude: val,\n                                                  actualValue: claimVal\n                                              }\n                                          }\n                                ];\n                            });\n                        });\n                    }\n                };\n            },\n            includesAny: function (val, maxAgeInSeconds, id) {\n                if (maxAgeInSeconds === void 0) {\n                    maxAgeInSeconds = _this.defaultMaxAgeInSeconds;\n                }\n                return {\n                    id: id !== undefined ? id : _this.id,\n                    refresh: function (ctx) {\n                        return _this.refresh(ctx);\n                    },\n                    shouldRefresh: function (payload, ctx) {\n                        return (\n                            _this.getValueFromPayload(payload, ctx) === undefined ||\n                            // We know payload[this.id] is defined since the value is not undefined in this branch\n                            (maxAgeInSeconds !== undefined && payload[_this.id].t < Date.now() - maxAgeInSeconds * 1000)\n                        );\n                    },\n                    validate: function (payload, ctx) {\n                        return __awaiter(_this, void 0, void 0, function () {\n                            var claimVal, ageInSeconds, claimSet, isValid;\n                            return __generator(this, function (_a) {\n                                claimVal = this.getValueFromPayload(payload, ctx);\n                                if (claimVal === undefined) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"value does not exist\",\n                                                expectedToInclude: val,\n                                                actualValue: claimVal\n                                            }\n                                        }\n                                    ];\n                                }\n                                ageInSeconds = (Date.now() - this.getLastFetchedTime(payload, ctx)) / 1000;\n                                if (maxAgeInSeconds !== undefined && ageInSeconds > maxAgeInSeconds) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"expired\",\n                                                ageInSeconds: ageInSeconds,\n                                                maxAgeInSeconds: maxAgeInSeconds\n                                            }\n                                        }\n                                    ];\n                                }\n                                claimSet = new Set(claimVal);\n                                isValid = val.some(function (v) {\n                                    return claimSet.has(v);\n                                });\n                                return [\n                                    2 /*return*/,\n                                    isValid\n                                        ? { isValid: isValid }\n                                        : {\n                                              isValid: isValid,\n                                              reason: {\n                                                  message: \"wrong value\",\n                                                  expectedToIncludeAtLeastOneOf: val,\n                                                  actualValue: claimVal\n                                              }\n                                          }\n                                ];\n                            });\n                        });\n                    }\n                };\n            },\n            excludesAll: function (val, maxAgeInSeconds, id) {\n                if (maxAgeInSeconds === void 0) {\n                    maxAgeInSeconds = _this.defaultMaxAgeInSeconds;\n                }\n                return {\n                    id: id !== undefined ? id : _this.id,\n                    refresh: function (ctx) {\n                        return _this.refresh(ctx);\n                    },\n                    shouldRefresh: function (payload, ctx) {\n                        return (\n                            _this.getValueFromPayload(payload, ctx) === undefined ||\n                            // We know payload[this.id] is defined since the value is not undefined in this branch\n                            (maxAgeInSeconds !== undefined && payload[_this.id].t < Date.now() - maxAgeInSeconds * 1000)\n                        );\n                    },\n                    validate: function (payload, ctx) {\n                        return __awaiter(_this, void 0, void 0, function () {\n                            var claimVal, ageInSeconds, claimSet, isValid;\n                            return __generator(this, function (_a) {\n                                claimVal = this.getValueFromPayload(payload, ctx);\n                                if (claimVal === undefined) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"value does not exist\",\n                                                expectedToNotInclude: val,\n                                                actualValue: claimVal\n                                            }\n                                        }\n                                    ];\n                                }\n                                ageInSeconds = (Date.now() - this.getLastFetchedTime(payload, ctx)) / 1000;\n                                if (maxAgeInSeconds !== undefined && ageInSeconds > maxAgeInSeconds) {\n                                    return [\n                                        2 /*return*/,\n                                        {\n                                            isValid: false,\n                                            reason: {\n                                                message: \"expired\",\n                                                ageInSeconds: ageInSeconds,\n                                                maxAgeInSeconds: maxAgeInSeconds\n                                            }\n                                        }\n                                    ];\n                                }\n                                claimSet = new Set(claimVal);\n                                isValid = val.every(function (v) {\n                                    return !claimSet.has(v);\n                                });\n                                return [\n                                    2 /*return*/,\n                                    isValid\n                                        ? { isValid: isValid }\n                                        : {\n                                              isValid: isValid,\n                                              reason: {\n                                                  message: \"wrong value\",\n                                                  expectedToNotInclude: val,\n                                                  actualValue: claimVal\n                                              }\n                                          }\n                                ];\n                            });\n                        });\n                    }\n                };\n            }\n        };\n        this.id = config.id;\n        this.refresh = config.refresh;\n        this.defaultMaxAgeInSeconds = config.defaultMaxAgeInSeconds;\n    }\n    PrimitiveArrayClaim.prototype.getValueFromPayload = function (payload, _userContext) {\n        return payload[this.id] !== undefined ? payload[this.id].v : undefined;\n    };\n    PrimitiveArrayClaim.prototype.getLastFetchedTime = function (payload, _userContext) {\n        return payload[this.id] !== undefined ? payload[this.id].t : undefined;\n    };\n    return PrimitiveArrayClaim;\n})();\nexports.PrimitiveArrayClaim = PrimitiveArrayClaim;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/claims/primitiveArrayClaim.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/claims/primitiveClaim.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/claims/primitiveClaim.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PrimitiveClaim = void 0;\nvar PrimitiveClaim = /** @class */ (function () {\n    function PrimitiveClaim(config) {\n        var _this = this;\n        this.validators = {\n            hasValue: function (val, maxAgeInSeconds, id) {\n                if (maxAgeInSeconds === void 0) {\n                    maxAgeInSeconds = _this.defaultMaxAgeInSeconds;\n                }\n                return {\n                    id: id !== undefined ? id : _this.id,\n                    refresh: function (ctx) {\n                        return _this.refresh(ctx);\n                    },\n                    shouldRefresh: function (payload, ctx) {\n                        return (\n                            _this.getValueFromPayload(payload, ctx) === undefined ||\n                            // We know payload[this.id] is defined since the value is not undefined in this branch\n                            (maxAgeInSeconds !== undefined && payload[_this.id].t < Date.now() - maxAgeInSeconds * 1000)\n                        );\n                    },\n                    validate: function (payload, ctx) {\n                        var claimVal = _this.getValueFromPayload(payload, ctx);\n                        if (claimVal === undefined) {\n                            return {\n                                isValid: false,\n                                reason: { message: \"value does not exist\", expectedValue: val, actualValue: claimVal }\n                            };\n                        }\n                        var ageInSeconds = (Date.now() - _this.getLastFetchedTime(payload, ctx)) / 1000;\n                        if (maxAgeInSeconds !== undefined && ageInSeconds > maxAgeInSeconds) {\n                            return {\n                                isValid: false,\n                                reason: {\n                                    message: \"expired\",\n                                    ageInSeconds: ageInSeconds,\n                                    maxAgeInSeconds: maxAgeInSeconds\n                                }\n                            };\n                        }\n                        if (claimVal !== val) {\n                            return {\n                                isValid: false,\n                                reason: { message: \"wrong value\", expectedValue: val, actualValue: claimVal }\n                            };\n                        }\n                        return { isValid: true };\n                    }\n                };\n            }\n        };\n        this.id = config.id;\n        this.refresh = config.refresh;\n        this.defaultMaxAgeInSeconds = config.defaultMaxAgeInSeconds;\n    }\n    PrimitiveClaim.prototype.getValueFromPayload = function (payload, _userContext) {\n        return payload[this.id] !== undefined ? payload[this.id].v : undefined;\n    };\n    PrimitiveClaim.prototype.getLastFetchedTime = function (payload, _userContext) {\n        return payload[this.id] !== undefined ? payload[this.id].t : undefined;\n    };\n    return PrimitiveClaim;\n})();\nexports.PrimitiveClaim = PrimitiveClaim;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS9saWIvYnVpbGQvY2xhaW1zL3ByaW1pdGl2ZUNsYWltLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsc0JBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdXBlcnRva2Vucy13ZWJzaXRlL2xpYi9idWlsZC9jbGFpbXMvcHJpbWl0aXZlQ2xhaW0uanM/MTRjYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHJpbWl0aXZlQ2xhaW0gPSB2b2lkIDA7XG52YXIgUHJpbWl0aXZlQ2xhaW0gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUHJpbWl0aXZlQ2xhaW0oY29uZmlnKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMudmFsaWRhdG9ycyA9IHtcbiAgICAgICAgICAgIGhhc1ZhbHVlOiBmdW5jdGlvbiAodmFsLCBtYXhBZ2VJblNlY29uZHMsIGlkKSB7XG4gICAgICAgICAgICAgICAgaWYgKG1heEFnZUluU2Vjb25kcyA9PT0gdm9pZCAwKSB7XG4gICAgICAgICAgICAgICAgICAgIG1heEFnZUluU2Vjb25kcyA9IF90aGlzLmRlZmF1bHRNYXhBZ2VJblNlY29uZHM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIGlkOiBpZCAhPT0gdW5kZWZpbmVkID8gaWQgOiBfdGhpcy5pZCxcbiAgICAgICAgICAgICAgICAgICAgcmVmcmVzaDogZnVuY3Rpb24gKGN0eCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLnJlZnJlc2goY3R4KTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgc2hvdWxkUmVmcmVzaDogZnVuY3Rpb24gKHBheWxvYWQsIGN0eCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5nZXRWYWx1ZUZyb21QYXlsb2FkKHBheWxvYWQsIGN0eCkgPT09IHVuZGVmaW5lZCB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFdlIGtub3cgcGF5bG9hZFt0aGlzLmlkXSBpcyBkZWZpbmVkIHNpbmNlIHRoZSB2YWx1ZSBpcyBub3QgdW5kZWZpbmVkIGluIHRoaXMgYnJhbmNoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKG1heEFnZUluU2Vjb25kcyAhPT0gdW5kZWZpbmVkICYmIHBheWxvYWRbX3RoaXMuaWRdLnQgPCBEYXRlLm5vdygpIC0gbWF4QWdlSW5TZWNvbmRzICogMTAwMClcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHZhbGlkYXRlOiBmdW5jdGlvbiAocGF5bG9hZCwgY3R4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2xhaW1WYWwgPSBfdGhpcy5nZXRWYWx1ZUZyb21QYXlsb2FkKHBheWxvYWQsIGN0eCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2xhaW1WYWwgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzVmFsaWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFzb246IHsgbWVzc2FnZTogXCJ2YWx1ZSBkb2VzIG5vdCBleGlzdFwiLCBleHBlY3RlZFZhbHVlOiB2YWwsIGFjdHVhbFZhbHVlOiBjbGFpbVZhbCB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhZ2VJblNlY29uZHMgPSAoRGF0ZS5ub3coKSAtIF90aGlzLmdldExhc3RGZXRjaGVkVGltZShwYXlsb2FkLCBjdHgpKSAvIDEwMDA7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobWF4QWdlSW5TZWNvbmRzICE9PSB1bmRlZmluZWQgJiYgYWdlSW5TZWNvbmRzID4gbWF4QWdlSW5TZWNvbmRzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNWYWxpZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYXNvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogXCJleHBpcmVkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZ2VJblNlY29uZHM6IGFnZUluU2Vjb25kcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heEFnZUluU2Vjb25kczogbWF4QWdlSW5TZWNvbmRzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNsYWltVmFsICE9PSB2YWwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1ZhbGlkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhc29uOiB7IG1lc3NhZ2U6IFwid3JvbmcgdmFsdWVcIiwgZXhwZWN0ZWRWYWx1ZTogdmFsLCBhY3R1YWxWYWx1ZTogY2xhaW1WYWwgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBpc1ZhbGlkOiB0cnVlIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmlkID0gY29uZmlnLmlkO1xuICAgICAgICB0aGlzLnJlZnJlc2ggPSBjb25maWcucmVmcmVzaDtcbiAgICAgICAgdGhpcy5kZWZhdWx0TWF4QWdlSW5TZWNvbmRzID0gY29uZmlnLmRlZmF1bHRNYXhBZ2VJblNlY29uZHM7XG4gICAgfVxuICAgIFByaW1pdGl2ZUNsYWltLnByb3RvdHlwZS5nZXRWYWx1ZUZyb21QYXlsb2FkID0gZnVuY3Rpb24gKHBheWxvYWQsIF91c2VyQ29udGV4dCkge1xuICAgICAgICByZXR1cm4gcGF5bG9hZFt0aGlzLmlkXSAhPT0gdW5kZWZpbmVkID8gcGF5bG9hZFt0aGlzLmlkXS52IDogdW5kZWZpbmVkO1xuICAgIH07XG4gICAgUHJpbWl0aXZlQ2xhaW0ucHJvdG90eXBlLmdldExhc3RGZXRjaGVkVGltZSA9IGZ1bmN0aW9uIChwYXlsb2FkLCBfdXNlckNvbnRleHQpIHtcbiAgICAgICAgcmV0dXJuIHBheWxvYWRbdGhpcy5pZF0gIT09IHVuZGVmaW5lZCA/IHBheWxvYWRbdGhpcy5pZF0udCA6IHVuZGVmaW5lZDtcbiAgICB9O1xuICAgIHJldHVybiBQcmltaXRpdmVDbGFpbTtcbn0pKCk7XG5leHBvcnRzLlByaW1pdGl2ZUNsYWltID0gUHJpbWl0aXZlQ2xhaW07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/claims/primitiveClaim.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/error.js":
/*!*************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/error.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar __extends =\n    (this && this.__extends) ||\n    (function () {\n        var extendStatics = function (d, b) {\n            extendStatics =\n                Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array &&\n                    function (d, b) {\n                        d.__proto__ = b;\n                    }) ||\n                function (d, b) {\n                    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n                };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            if (typeof b !== \"function\" && b !== null)\n                throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n            extendStatics(d, b);\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());\n        };\n    })();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.STGeneralError = void 0;\n/**\n * This error usually indicates that the API exposed by the backend SDKs responded\n * with `{status: \"GENERAL_ERROR\"}`. This should be used to show errors to the user\n * in your frontend application.\n */\nvar STGeneralError = /** @class */ (function (_super) {\n    __extends(STGeneralError, _super);\n    function STGeneralError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.isSuperTokensGeneralError = true;\n        return _this;\n    }\n    STGeneralError.isThisError = function (err) {\n        return err.isSuperTokensGeneralError === true;\n    };\n    return STGeneralError;\n})(Error);\nexports.STGeneralError = STGeneralError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS9saWIvYnVpbGQvZXJyb3IuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGdCQUFnQjtBQUNuQztBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0EsVUFBVSx3QkFBd0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsc0JBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdXBlcnRva2Vucy13ZWJzaXRlL2xpYi9idWlsZC9lcnJvci5qcz80NTRlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogQ29weXJpZ2h0IChjKSAyMDIyLCBWUkFJIExhYnMgYW5kL29yIGl0cyBhZmZpbGlhdGVzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc29mdHdhcmUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIikgYXMgcHVibGlzaGVkIGJ5IHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbi5cbiAqXG4gKiBZb3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXlcbiAqIG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUXG4gKiBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGVcbiAqIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fZXh0ZW5kcyA9XG4gICAgKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8XG4gICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICAgICAgZXh0ZW5kU3RhdGljcyA9XG4gICAgICAgICAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiZcbiAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGQuX19wcm90b19fID0gYjtcbiAgICAgICAgICAgICAgICAgICAgfSkgfHxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgICAgICBmdW5jdGlvbiBfXygpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnN0cnVjdG9yID0gZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlKSwgbmV3IF9fKCkpO1xuICAgICAgICB9O1xuICAgIH0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNUR2VuZXJhbEVycm9yID0gdm9pZCAwO1xuLyoqXG4gKiBUaGlzIGVycm9yIHVzdWFsbHkgaW5kaWNhdGVzIHRoYXQgdGhlIEFQSSBleHBvc2VkIGJ5IHRoZSBiYWNrZW5kIFNES3MgcmVzcG9uZGVkXG4gKiB3aXRoIGB7c3RhdHVzOiBcIkdFTkVSQUxfRVJST1JcIn1gLiBUaGlzIHNob3VsZCBiZSB1c2VkIHRvIHNob3cgZXJyb3JzIHRvIHRoZSB1c2VyXG4gKiBpbiB5b3VyIGZyb250ZW5kIGFwcGxpY2F0aW9uLlxuICovXG52YXIgU1RHZW5lcmFsRXJyb3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFNUR2VuZXJhbEVycm9yLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFNUR2VuZXJhbEVycm9yKG1lc3NhZ2UpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgbWVzc2FnZSkgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuaXNTdXBlclRva2Vuc0dlbmVyYWxFcnJvciA9IHRydWU7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgU1RHZW5lcmFsRXJyb3IuaXNUaGlzRXJyb3IgPSBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgIHJldHVybiBlcnIuaXNTdXBlclRva2Vuc0dlbmVyYWxFcnJvciA9PT0gdHJ1ZTtcbiAgICB9O1xuICAgIHJldHVybiBTVEdlbmVyYWxFcnJvcjtcbn0pKEVycm9yKTtcbmV4cG9ydHMuU1RHZW5lcmFsRXJyb3IgPSBTVEdlbmVyYWxFcnJvcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/error.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/fetch.js":
/*!*************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/fetch.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __assign =\n    (this && this.__assign) ||\n    function () {\n        __assign =\n            Object.assign ||\n            function (t) {\n                for (var s, i = 1, n = arguments.length; i < n; i++) {\n                    s = arguments[i];\n                    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n                }\n                return t;\n            };\n        return __assign.apply(this, arguments);\n    };\nvar __awaiter =\n    (this && this.__awaiter) ||\n    function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n            return value instanceof P\n                ? value\n                : new P(function (resolve) {\n                      resolve(value);\n                  });\n        }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n                try {\n                    step(generator.next(value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function rejected(value) {\n                try {\n                    step(generator[\"throw\"](value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function step(result) {\n                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\nvar __generator =\n    (this && this.__generator) ||\n    function (thisArg, body) {\n        var _ = {\n                label: 0,\n                sent: function () {\n                    if (t[0] & 1) throw t[1];\n                    return t[1];\n                },\n                trys: [],\n                ops: []\n            },\n            f,\n            y,\n            t,\n            g;\n        return (\n            (g = { next: verb(0), throw: verb(1), return: verb(2) }),\n            typeof Symbol === \"function\" &&\n                (g[Symbol.iterator] = function () {\n                    return this;\n                }),\n            g\n        );\n        function verb(n) {\n            return function (v) {\n                return step([n, v]);\n            };\n        }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (\n                        ((f = 1),\n                        y &&\n                            (t =\n                                op[0] & 2\n                                    ? y[\"return\"]\n                                    : op[0]\n                                    ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0)\n                                    : y.next) &&\n                            !(t = t.call(y, op[1])).done)\n                    )\n                        return t;\n                    if (((y = 0), t)) op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (\n                                !((t = _.trys), (t = t.length > 0 && t[t.length - 1])) &&\n                                (op[0] === 6 || op[0] === 2)\n                            ) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2]) _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                } catch (e) {\n                    op = [6, e];\n                    y = 0;\n                } finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5) throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fireSessionUpdateEventsIfNecessary =\n    exports.setFrontToken =\n    exports.getFrontToken =\n    exports.setAntiCSRF =\n    exports.saveLastAccessTokenUpdate =\n    exports.getTokenForHeaderAuth =\n    exports.setToken =\n    exports.getStorageNameForToken =\n    exports.getLocalSessionState =\n    exports.onInvalidClaimResponse =\n    exports.onTokenUpdate =\n    exports.onUnauthorisedResponse =\n    exports.FrontToken =\n    exports.AntiCsrfToken =\n        void 0;\n/* Copyright (c) 2020, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar processState_1 = __webpack_require__(/*! ./processState */ \"./node_modules/supertokens-website/lib/build/processState.js\");\nvar version_1 = __webpack_require__(/*! ./version */ \"./node_modules/supertokens-website/lib/build/version.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/supertokens-website/lib/build/utils/index.js\");\nvar cookieHandler_1 = __webpack_require__(/*! ./utils/cookieHandler */ \"./node_modules/supertokens-website/lib/build/utils/cookieHandler/index.js\");\nvar windowHandler_1 = __webpack_require__(/*! ./utils/windowHandler */ \"./node_modules/supertokens-website/lib/build/utils/windowHandler/index.js\");\nvar lockFactory_1 = __webpack_require__(/*! ./utils/lockFactory */ \"./node_modules/supertokens-website/lib/build/utils/lockFactory/index.js\");\nvar logger_1 = __webpack_require__(/*! ./logger */ \"./node_modules/supertokens-website/lib/build/logger.js\");\nvar AntiCsrfToken = /** @class */ (function () {\n    function AntiCsrfToken() {}\n    AntiCsrfToken.getToken = function (associatedAccessTokenUpdate) {\n        return __awaiter(this, void 0, void 0, function () {\n            var antiCsrf;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        (0, logger_1.logDebugMessage)(\"AntiCsrfToken.getToken: called\");\n                        if (associatedAccessTokenUpdate === undefined) {\n                            AntiCsrfToken.tokenInfo = undefined;\n                            (0, logger_1.logDebugMessage)(\"AntiCsrfToken.getToken: returning undefined\");\n                            return [2 /*return*/, undefined];\n                        }\n                        if (!(AntiCsrfToken.tokenInfo === undefined)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, getAntiCSRFToken()];\n                    case 1:\n                        antiCsrf = _a.sent();\n                        if (antiCsrf === null) {\n                            (0, logger_1.logDebugMessage)(\"AntiCsrfToken.getToken: returning undefined\");\n                            return [2 /*return*/, undefined];\n                        }\n                        AntiCsrfToken.tokenInfo = {\n                            antiCsrf: antiCsrf,\n                            associatedAccessTokenUpdate: associatedAccessTokenUpdate\n                        };\n                        return [3 /*break*/, 4];\n                    case 2:\n                        if (!(AntiCsrfToken.tokenInfo.associatedAccessTokenUpdate !== associatedAccessTokenUpdate))\n                            return [3 /*break*/, 4];\n                        // csrf token has changed.\n                        AntiCsrfToken.tokenInfo = undefined;\n                        return [4 /*yield*/, AntiCsrfToken.getToken(associatedAccessTokenUpdate)];\n                    case 3:\n                        return [2 /*return*/, _a.sent()];\n                    case 4:\n                        (0,\n                        logger_1.logDebugMessage)(\"AntiCsrfToken.getToken: returning: \" + AntiCsrfToken.tokenInfo.antiCsrf);\n                        return [2 /*return*/, AntiCsrfToken.tokenInfo.antiCsrf];\n                }\n            });\n        });\n    };\n    AntiCsrfToken.removeToken = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        (0, logger_1.logDebugMessage)(\"AntiCsrfToken.removeToken: called\");\n                        AntiCsrfToken.tokenInfo = undefined;\n                        return [4 /*yield*/, setAntiCSRF(undefined)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AntiCsrfToken.setItem = function (associatedAccessTokenUpdate, antiCsrf) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (associatedAccessTokenUpdate === undefined) {\n                            AntiCsrfToken.tokenInfo = undefined;\n                            return [2 /*return*/];\n                        }\n                        (0, logger_1.logDebugMessage)(\"AntiCsrfToken.setItem: called\");\n                        return [4 /*yield*/, setAntiCSRF(antiCsrf)];\n                    case 1:\n                        _a.sent();\n                        AntiCsrfToken.tokenInfo = {\n                            antiCsrf: antiCsrf,\n                            associatedAccessTokenUpdate: associatedAccessTokenUpdate\n                        };\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return AntiCsrfToken;\n})();\nexports.AntiCsrfToken = AntiCsrfToken;\n// Note: We do not store this in memory because another tab may have\n// modified this value, and if so, we may not know about it in this tab\nvar FrontToken = /** @class */ (function () {\n    function FrontToken() {}\n    FrontToken.getTokenInfo = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var frontToken, response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        (0, logger_1.logDebugMessage)(\"FrontToken.getTokenInfo: called\");\n                        return [4 /*yield*/, getFrontToken()];\n                    case 1:\n                        frontToken = _a.sent();\n                        if (!(frontToken === null)) return [3 /*break*/, 5];\n                        return [4 /*yield*/, getLocalSessionState(false)];\n                    case 2:\n                        if (!(_a.sent().status === \"EXISTS\")) return [3 /*break*/, 4];\n                        // this means that the id refresh token has been set, so we must\n                        // wait for this to be set or removed\n                        return [\n                            4 /*yield*/,\n                            new Promise(function (resolve) {\n                                FrontToken.waiters.push(resolve);\n                            })\n                        ];\n                    case 3:\n                        // this means that the id refresh token has been set, so we must\n                        // wait for this to be set or removed\n                        _a.sent();\n                        return [2 /*return*/, FrontToken.getTokenInfo()];\n                    case 4:\n                        return [2 /*return*/, undefined];\n                    case 5:\n                        response = parseFrontToken(frontToken);\n                        (0, logger_1.logDebugMessage)(\"FrontToken.getTokenInfo: returning ate: \" + response.ate);\n                        (0, logger_1.logDebugMessage)(\"FrontToken.getTokenInfo: returning uid: \" + response.uid);\n                        (0, logger_1.logDebugMessage)(\"FrontToken.getTokenInfo: returning up: \" + response.up);\n                        return [2 /*return*/, response];\n                }\n            });\n        });\n    };\n    FrontToken.removeToken = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        (0, logger_1.logDebugMessage)(\"FrontToken.removeToken: called\");\n                        return [4 /*yield*/, setFrontToken(undefined)];\n                    case 1:\n                        _a.sent();\n                        FrontToken.waiters.forEach(function (f) {\n                            return f(undefined);\n                        });\n                        FrontToken.waiters = [];\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    FrontToken.setItem = function (frontToken) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // We update the refresh attempt info here as well, since this means that we've updated the session in some way\n                        // This could be both by a refresh call or if the access token was updated in a custom endpoint\n                        // By saving every time the access token has been updated, we cause an early retry if\n                        // another request has failed with a 401 with the previous access token and the token still exists.\n                        // Check the start and end of onUnauthorisedResponse\n                        // As a side-effect we reload the anti-csrf token to check if it was changed by another tab.\n                        return [4 /*yield*/, saveLastAccessTokenUpdate()];\n                    case 1:\n                        // We update the refresh attempt info here as well, since this means that we've updated the session in some way\n                        // This could be both by a refresh call or if the access token was updated in a custom endpoint\n                        // By saving every time the access token has been updated, we cause an early retry if\n                        // another request has failed with a 401 with the previous access token and the token still exists.\n                        // Check the start and end of onUnauthorisedResponse\n                        // As a side-effect we reload the anti-csrf token to check if it was changed by another tab.\n                        _a.sent();\n                        if (frontToken === \"remove\") {\n                            return [2 /*return*/, FrontToken.removeToken()];\n                        }\n                        (0, logger_1.logDebugMessage)(\"FrontToken.setItem: called\");\n                        return [4 /*yield*/, setFrontToken(frontToken)];\n                    case 2:\n                        _a.sent();\n                        FrontToken.waiters.forEach(function (f) {\n                            return f(undefined);\n                        });\n                        FrontToken.waiters = [];\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    FrontToken.doesTokenExists = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var frontToken;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        return [4 /*yield*/, getFrontTokenFromCookie()];\n                    case 1:\n                        frontToken = _a.sent();\n                        return [2 /*return*/, frontToken !== null];\n                }\n            });\n        });\n    };\n    // these are waiters for when the idRefreshToken has been set, but this token has\n    // not yet been set. Once this token is set or removed, the waiters are resolved.\n    FrontToken.waiters = [];\n    return FrontToken;\n})();\nexports.FrontToken = FrontToken;\n/**\n * @class AuthHttpRequest\n * @description wrapper for common http methods.\n */\nvar AuthHttpRequest = /** @class */ (function () {\n    function AuthHttpRequest() {}\n    AuthHttpRequest.init = function (config, recipeImpl) {\n        (0, logger_1.logDebugMessage)(\"init: called\");\n        (0, logger_1.logDebugMessage)(\"init: Input apiBasePath: \" + config.apiBasePath);\n        (0, logger_1.logDebugMessage)(\"init: Input apiDomain: \" + config.apiDomain);\n        (0, logger_1.logDebugMessage)(\"init: Input autoAddCredentials: \" + config.autoAddCredentials);\n        (0, logger_1.logDebugMessage)(\"init: Input sessionTokenBackendDomain: \" + config.sessionTokenBackendDomain);\n        (0, logger_1.logDebugMessage)(\"init: Input isInIframe: \" + config.isInIframe);\n        (0, logger_1.logDebugMessage)(\"init: Input sessionExpiredStatusCode: \" + config.sessionExpiredStatusCode);\n        (0, logger_1.logDebugMessage)(\"init: Input sessionTokenFrontendDomain: \" + config.sessionTokenFrontendDomain);\n        (0, logger_1.logDebugMessage)(\"init: Input tokenTransferMethod: \" + config.tokenTransferMethod);\n        var fetchedWindow = windowHandler_1.default.getReferenceOrThrow().windowHandler.getWindowUnsafe();\n        AuthHttpRequest.env = fetchedWindow === undefined || fetchedWindow.fetch === undefined ? __webpack_require__.g : fetchedWindow;\n        AuthHttpRequest.refreshTokenUrl = config.apiDomain + config.apiBasePath + \"/session/refresh\";\n        AuthHttpRequest.signOutUrl = config.apiDomain + config.apiBasePath + \"/signout\";\n        AuthHttpRequest.rid = \"session\";\n        AuthHttpRequest.config = config;\n        if (AuthHttpRequest.env.__supertokensOriginalFetch === undefined) {\n            (0, logger_1.logDebugMessage)(\"init: __supertokensOriginalFetch is undefined\");\n            // this block contains code that is run just once per page load..\n            // all items in this block are attached to the global env so that\n            // even if the init function is called more than once (maybe across JS scripts),\n            // things will not get created multiple times.\n            AuthHttpRequest.env.__supertokensOriginalFetch = AuthHttpRequest.env.fetch.bind(AuthHttpRequest.env);\n            AuthHttpRequest.env.__supertokensSessionRecipe = recipeImpl;\n            AuthHttpRequest.env.fetch =\n                AuthHttpRequest.env.__supertokensSessionRecipe.addFetchInterceptorsAndReturnModifiedFetch({\n                    originalFetch: AuthHttpRequest.env.__supertokensOriginalFetch,\n                    userContext: {}\n                });\n            AuthHttpRequest.env.__supertokensSessionRecipe.addXMLHttpRequestInterceptor({\n                userContext: {}\n            });\n        }\n        AuthHttpRequest.recipeImpl = AuthHttpRequest.env.__supertokensSessionRecipe;\n        AuthHttpRequest.initCalled = true;\n    };\n    var _a;\n    _a = AuthHttpRequest;\n    AuthHttpRequest.initCalled = false;\n    AuthHttpRequest.doRequest = function (httpCall, config, url) {\n        return __awaiter(void 0, void 0, void 0, function () {\n            var doNotDoInterception,\n                finalURL,\n                origHeaders,\n                accessToken,\n                returnObj,\n                preRequestLSS,\n                clonedHeaders,\n                configWithAntiCsrf,\n                antiCsrfToken,\n                transferMethod,\n                response,\n                retry,\n                postRequestIdToken;\n            return __generator(_a, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!AuthHttpRequest.initCalled) {\n                            throw Error(\"init function not called\");\n                        }\n                        (0, logger_1.logDebugMessage)(\"doRequest: start of fetch interception\");\n                        doNotDoInterception = false;\n                        try {\n                            finalURL = void 0;\n                            if (typeof url === \"string\") {\n                                finalURL = url;\n                            } else if (typeof url === \"object\") {\n                                if (typeof url.url === \"string\") {\n                                    finalURL = url.url;\n                                } else if (typeof url.href === \"string\") {\n                                    finalURL = url.href;\n                                }\n                            }\n                            doNotDoInterception = !(0, utils_1.shouldDoInterceptionBasedOnUrl)(\n                                finalURL,\n                                AuthHttpRequest.config.apiDomain,\n                                AuthHttpRequest.config.sessionTokenBackendDomain\n                            );\n                        } catch (err) {\n                            if (err.message === \"Please provide a valid domain name\") {\n                                (0, logger_1.logDebugMessage)(\n                                    \"doRequest: Trying shouldDoInterceptionBasedOnUrl with location.origin\"\n                                );\n                                // .origin gives the port as well..\n                                doNotDoInterception = !(0, utils_1.shouldDoInterceptionBasedOnUrl)(\n                                    windowHandler_1.default.getReferenceOrThrow().windowHandler.location.getOrigin(),\n                                    AuthHttpRequest.config.apiDomain,\n                                    AuthHttpRequest.config.sessionTokenBackendDomain\n                                );\n                            } else {\n                                throw err;\n                            }\n                        }\n                        (0,\n                        logger_1.logDebugMessage)(\"doRequest: Value of doNotDoInterception: \" + doNotDoInterception);\n                        if (!doNotDoInterception) return [3 /*break*/, 2];\n                        (0, logger_1.logDebugMessage)(\"doRequest: Returning without interception\");\n                        return [4 /*yield*/, httpCall(config)];\n                    case 1:\n                        return [2 /*return*/, _b.sent()];\n                    case 2:\n                        origHeaders = new Headers(\n                            config !== undefined && config.headers !== undefined ? config.headers : url.headers\n                        );\n                        if (!origHeaders.has(\"Authorization\")) return [3 /*break*/, 4];\n                        return [4 /*yield*/, getTokenForHeaderAuth(\"access\")];\n                    case 3:\n                        accessToken = _b.sent();\n                        if (\n                            accessToken !== undefined &&\n                            origHeaders.get(\"Authorization\") === \"Bearer \".concat(accessToken)\n                        ) {\n                            // We are ignoring the Authorization header set by the user in this case, because it would cause issues\n                            // If we do not ignore this, then this header would be used even if the request is being retried after a refresh, even though it contains an outdated access token.\n                            // This causes an infinite refresh loop.\n                            (0, logger_1.logDebugMessage)(\n                                \"doRequest: Removing Authorization from user provided headers because it contains our access token\"\n                            );\n                            origHeaders.delete(\"Authorization\");\n                        }\n                        _b.label = 4;\n                    case 4:\n                        (0, logger_1.logDebugMessage)(\"doRequest: Interception started\");\n                        processState_1.ProcessState.getInstance().addState(\n                            processState_1.PROCESS_STATE.CALLING_INTERCEPTION_REQUEST\n                        );\n                        _b.label = 5;\n                    case 5:\n                        _b.trys.push([5, , 19, 24]);\n                        returnObj = undefined;\n                        _b.label = 6;\n                    case 6:\n                        if (false) {}\n                        return [4 /*yield*/, getLocalSessionState(true)];\n                    case 7:\n                        preRequestLSS = _b.sent();\n                        clonedHeaders = new Headers(origHeaders);\n                        configWithAntiCsrf = __assign(__assign({}, config), { headers: clonedHeaders });\n                        if (!(preRequestLSS.status === \"EXISTS\")) return [3 /*break*/, 9];\n                        return [4 /*yield*/, AntiCsrfToken.getToken(preRequestLSS.lastAccessTokenUpdate)];\n                    case 8:\n                        antiCsrfToken = _b.sent();\n                        if (antiCsrfToken !== undefined) {\n                            (0, logger_1.logDebugMessage)(\"doRequest: Adding anti-csrf token to request\");\n                            clonedHeaders.set(\"anti-csrf\", antiCsrfToken);\n                        }\n                        _b.label = 9;\n                    case 9:\n                        if (AuthHttpRequest.config.autoAddCredentials) {\n                            (0, logger_1.logDebugMessage)(\"doRequest: Adding credentials include\");\n                            if (configWithAntiCsrf === undefined) {\n                                configWithAntiCsrf = {\n                                    credentials: \"include\"\n                                };\n                            } else if (configWithAntiCsrf.credentials === undefined) {\n                                configWithAntiCsrf = __assign(__assign({}, configWithAntiCsrf), {\n                                    credentials: \"include\"\n                                });\n                            }\n                        }\n                        // adding rid for anti-csrf protection: Anti-csrf via custom header\n                        if (!clonedHeaders.has(\"rid\")) {\n                            (0, logger_1.logDebugMessage)(\"doRequest: Adding rid header: anti-csrf\");\n                            clonedHeaders.set(\"rid\", \"anti-csrf\");\n                        } else {\n                            (0, logger_1.logDebugMessage)(\"doRequest: rid header was already there in request\");\n                        }\n                        transferMethod = AuthHttpRequest.config.tokenTransferMethod;\n                        (0, logger_1.logDebugMessage)(\"doRequest: Adding st-auth-mode header: \" + transferMethod);\n                        clonedHeaders.set(\"st-auth-mode\", transferMethod);\n                        return [4 /*yield*/, setAuthorizationHeaderIfRequired(clonedHeaders)];\n                    case 10:\n                        _b.sent();\n                        (0, logger_1.logDebugMessage)(\"doRequest: Making user's http call\");\n                        return [4 /*yield*/, httpCall(configWithAntiCsrf)];\n                    case 11:\n                        response = _b.sent();\n                        (0, logger_1.logDebugMessage)(\"doRequest: User's http call ended\");\n                        return [4 /*yield*/, saveTokensFromHeaders(response)];\n                    case 12:\n                        _b.sent();\n                        fireSessionUpdateEventsIfNecessary(\n                            preRequestLSS.status === \"EXISTS\",\n                            response.status,\n                            response.headers.get(\"front-token\")\n                        );\n                        if (!(response.status === AuthHttpRequest.config.sessionExpiredStatusCode))\n                            return [3 /*break*/, 14];\n                        (0, logger_1.logDebugMessage)(\"doRequest: Status code is: \" + response.status);\n                        return [4 /*yield*/, onUnauthorisedResponse(preRequestLSS)];\n                    case 13:\n                        retry = _b.sent();\n                        if (retry.result !== \"RETRY\") {\n                            (0, logger_1.logDebugMessage)(\"doRequest: Not retrying original request\");\n                            returnObj = retry.error !== undefined ? retry.error : response;\n                            return [3 /*break*/, 18];\n                        }\n                        (0, logger_1.logDebugMessage)(\"doRequest: Retrying original request\");\n                        return [3 /*break*/, 17];\n                    case 14:\n                        if (!(response.status === AuthHttpRequest.config.invalidClaimStatusCode))\n                            return [3 /*break*/, 16];\n                        return [4 /*yield*/, onInvalidClaimResponse(response)];\n                    case 15:\n                        _b.sent();\n                        _b.label = 16;\n                    case 16:\n                        return [2 /*return*/, response];\n                    case 17:\n                        return [3 /*break*/, 6];\n                    case 18:\n                        // if it comes here, means we breaked. which happens only if we have logged out.\n                        return [2 /*return*/, returnObj];\n                    case 19:\n                        return [4 /*yield*/, getLocalSessionState(false)];\n                    case 20:\n                        postRequestIdToken = _b.sent();\n                        if (!(postRequestIdToken.status === \"NOT_EXISTS\")) return [3 /*break*/, 23];\n                        (0,\n                        logger_1.logDebugMessage)(\"doRequest: local session doesn't exist, so removing anti-csrf and sFrontToken\");\n                        return [4 /*yield*/, AntiCsrfToken.removeToken()];\n                    case 21:\n                        _b.sent();\n                        return [4 /*yield*/, FrontToken.removeToken()];\n                    case 22:\n                        _b.sent();\n                        _b.label = 23;\n                    case 23:\n                        return [7 /*endfinally*/];\n                    case 24:\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AuthHttpRequest.attemptRefreshingSession = function () {\n        return __awaiter(void 0, void 0, void 0, function () {\n            var preRequestLSS, refresh;\n            return __generator(_a, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!AuthHttpRequest.initCalled) {\n                            throw Error(\"init function not called\");\n                        }\n                        return [4 /*yield*/, getLocalSessionState(false)];\n                    case 1:\n                        preRequestLSS = _b.sent();\n                        return [4 /*yield*/, onUnauthorisedResponse(preRequestLSS)];\n                    case 2:\n                        refresh = _b.sent();\n                        if (refresh.result === \"API_ERROR\") {\n                            throw refresh.error;\n                        }\n                        return [2 /*return*/, refresh.result === \"RETRY\"];\n                }\n            });\n        });\n    };\n    return AuthHttpRequest;\n})();\nexports[\"default\"] = AuthHttpRequest;\nvar LAST_ACCESS_TOKEN_UPDATE = \"st-last-access-token-update\";\nvar REFRESH_TOKEN_NAME = \"st-refresh-token\";\nvar ACCESS_TOKEN_NAME = \"st-access-token\";\nvar ANTI_CSRF_NAME = \"sAntiCsrf\";\nvar FRONT_TOKEN_NAME = \"sFrontToken\";\n/**\n * @description attempts to call the refresh token API each time we are sure the session has expired, or it throws an error or,\n * or the ID_COOKIE_NAME has changed value -> which may mean that we have a new set of tokens.\n */\nfunction onUnauthorisedResponse(preRequestLSS) {\n    return __awaiter(this, void 0, void 0, function () {\n        var lock,\n            postLockLSS,\n            headers,\n            antiCsrfToken,\n            transferMethod,\n            preAPIResult,\n            response,\n            isUnauthorised,\n            error_1,\n            postRequestLSS;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    return [4 /*yield*/, lockFactory_1.default.getReferenceOrThrow().lockFactory()];\n                case 1:\n                    lock = _b.sent();\n                    _b.label = 2;\n                case 2:\n                    if (false) {}\n                    (0, logger_1.logDebugMessage)(\"onUnauthorisedResponse: trying to acquire lock\");\n                    return [4 /*yield*/, lock.acquireLock(\"REFRESH_TOKEN_USE\", 1000)];\n                case 3:\n                    if (!_b.sent()) return [3 /*break*/, 22];\n                    (0, logger_1.logDebugMessage)(\"onUnauthorisedResponse: lock acquired\");\n                    _b.label = 4;\n                case 4:\n                    _b.trys.push([4, 14, 16, 22]);\n                    return [4 /*yield*/, getLocalSessionState(false)];\n                case 5:\n                    postLockLSS = _b.sent();\n                    if (postLockLSS.status === \"NOT_EXISTS\") {\n                        (0, logger_1.logDebugMessage)(\n                            \"onUnauthorisedResponse: Not refreshing because local session state is NOT_EXISTS\"\n                        );\n                        // if it comes here, it means a request was made thinking\n                        // that the session exists, but it doesn't actually exist.\n                        AuthHttpRequest.config.onHandleEvent({\n                            action: \"UNAUTHORISED\",\n                            sessionExpiredOrRevoked: false,\n                            userContext: {}\n                        });\n                        return [2 /*return*/, { result: \"SESSION_EXPIRED\" }];\n                    }\n                    if (\n                        postLockLSS.status !== preRequestLSS.status ||\n                        (postLockLSS.status === \"EXISTS\" &&\n                            preRequestLSS.status === \"EXISTS\" &&\n                            postLockLSS.lastAccessTokenUpdate !== preRequestLSS.lastAccessTokenUpdate)\n                    ) {\n                        (0, logger_1.logDebugMessage)(\n                            \"onUnauthorisedResponse: Retrying early because pre and post id refresh tokens don't match\"\n                        );\n                        // means that some other process has already called this API and succeeded. so we need to call it again\n                        return [2 /*return*/, { result: \"RETRY\" }];\n                    }\n                    headers = new Headers();\n                    if (!(preRequestLSS.status === \"EXISTS\")) return [3 /*break*/, 7];\n                    return [4 /*yield*/, AntiCsrfToken.getToken(preRequestLSS.lastAccessTokenUpdate)];\n                case 6:\n                    antiCsrfToken = _b.sent();\n                    if (antiCsrfToken !== undefined) {\n                        (0, logger_1.logDebugMessage)(\n                            \"onUnauthorisedResponse: Adding anti-csrf token to refresh API call\"\n                        );\n                        headers.set(\"anti-csrf\", antiCsrfToken);\n                    }\n                    _b.label = 7;\n                case 7:\n                    (0,\n                    logger_1.logDebugMessage)(\"onUnauthorisedResponse: Adding rid and fdi-versions to refresh call header\");\n                    headers.set(\"rid\", AuthHttpRequest.rid);\n                    headers.set(\"fdi-version\", version_1.supported_fdi.join(\",\"));\n                    transferMethod = AuthHttpRequest.config.tokenTransferMethod;\n                    (0,\n                    logger_1.logDebugMessage)(\"onUnauthorisedResponse: Adding st-auth-mode header: \" + transferMethod);\n                    headers.set(\"st-auth-mode\", transferMethod);\n                    return [4 /*yield*/, setAuthorizationHeaderIfRequired(headers, true)];\n                case 8:\n                    _b.sent();\n                    (0, logger_1.logDebugMessage)(\"onUnauthorisedResponse: Calling refresh pre API hook\");\n                    return [\n                        4 /*yield*/,\n                        AuthHttpRequest.config.preAPIHook({\n                            action: \"REFRESH_SESSION\",\n                            requestInit: {\n                                method: \"post\",\n                                credentials: \"include\",\n                                headers: headers\n                            },\n                            url: AuthHttpRequest.refreshTokenUrl,\n                            userContext: {}\n                        })\n                    ];\n                case 9:\n                    preAPIResult = _b.sent();\n                    (0, logger_1.logDebugMessage)(\"onUnauthorisedResponse: Making refresh call\");\n                    return [\n                        4 /*yield*/,\n                        AuthHttpRequest.env.__supertokensOriginalFetch(preAPIResult.url, preAPIResult.requestInit)\n                    ];\n                case 10:\n                    response = _b.sent();\n                    (0, logger_1.logDebugMessage)(\"onUnauthorisedResponse: Refresh call ended\");\n                    return [4 /*yield*/, saveTokensFromHeaders(response)];\n                case 11:\n                    _b.sent();\n                    (0, logger_1.logDebugMessage)(\"onUnauthorisedResponse: Refresh status code is: \" + response.status);\n                    isUnauthorised = response.status === AuthHttpRequest.config.sessionExpiredStatusCode;\n                    // There is a case where the FE thinks the session is valid, but backend doesn't get the tokens.\n                    // In this event, session expired error will be thrown and the frontend should remove this token\n                    if (isUnauthorised && response.headers.get(\"front-token\") === null) {\n                        FrontToken.setItem(\"remove\");\n                    }\n                    fireSessionUpdateEventsIfNecessary(\n                        preRequestLSS.status === \"EXISTS\",\n                        response.status,\n                        isUnauthorised && response.headers.get(\"front-token\") === null\n                            ? \"remove\"\n                            : response.headers.get(\"front-token\")\n                    );\n                    if (response.status >= 300) {\n                        throw response;\n                    }\n                    return [\n                        4 /*yield*/,\n                        AuthHttpRequest.config.postAPIHook({\n                            action: \"REFRESH_SESSION\",\n                            fetchResponse: response.clone(),\n                            requestInit: preAPIResult.requestInit,\n                            url: preAPIResult.url,\n                            userContext: {}\n                        })\n                    ];\n                case 12:\n                    _b.sent();\n                    return [4 /*yield*/, getLocalSessionState(false)];\n                case 13:\n                    if (_b.sent().status === \"NOT_EXISTS\") {\n                        (0, logger_1.logDebugMessage)(\n                            \"onUnauthorisedResponse: local session doesn't exist, so returning session expired\"\n                        );\n                        // The execution should never come here.. but just in case.\n                        // removed by server during refresh. So we logout\n                        // we do not send \"UNAUTHORISED\" event here because\n                        // this is a result of the refresh API returning a session expiry, which\n                        // means that the frontend did not know for sure that the session existed\n                        // in the first place.\n                        return [2 /*return*/, { result: \"SESSION_EXPIRED\" }];\n                    }\n                    AuthHttpRequest.config.onHandleEvent({\n                        action: \"REFRESH_SESSION\",\n                        userContext: {}\n                    });\n                    (0, logger_1.logDebugMessage)(\"onUnauthorisedResponse: Sending RETRY signal\");\n                    return [2 /*return*/, { result: \"RETRY\" }];\n                case 14:\n                    error_1 = _b.sent();\n                    return [4 /*yield*/, getLocalSessionState(false)];\n                case 15:\n                    if (_b.sent().status === \"NOT_EXISTS\") {\n                        (0, logger_1.logDebugMessage)(\n                            \"onUnauthorisedResponse: local session doesn't exist, so returning session expired\"\n                        );\n                        // removed by server.\n                        // we do not send \"UNAUTHORISED\" event here because\n                        // this is a result of the refresh API returning a session expiry, which\n                        // means that the frontend did not know for sure that the session existed\n                        // in the first place.\n                        return [2 /*return*/, { result: \"SESSION_EXPIRED\", error: error_1 }];\n                    }\n                    (0, logger_1.logDebugMessage)(\"onUnauthorisedResponse: sending API_ERROR\");\n                    return [2 /*return*/, { result: \"API_ERROR\", error: error_1 }];\n                case 16:\n                    return [4 /*yield*/, lock.releaseLock(\"REFRESH_TOKEN_USE\")];\n                case 17:\n                    _b.sent();\n                    (0, logger_1.logDebugMessage)(\"onUnauthorisedResponse: Released lock\");\n                    return [4 /*yield*/, getLocalSessionState(false)];\n                case 18:\n                    if (!(_b.sent().status === \"NOT_EXISTS\")) return [3 /*break*/, 21];\n                    (0,\n                    logger_1.logDebugMessage)(\"onUnauthorisedResponse: local session doesn't exist, so removing anti-csrf and sFrontToken\");\n                    return [4 /*yield*/, AntiCsrfToken.removeToken()];\n                case 19:\n                    _b.sent();\n                    return [4 /*yield*/, FrontToken.removeToken()];\n                case 20:\n                    _b.sent();\n                    _b.label = 21;\n                case 21:\n                    return [7 /*endfinally*/];\n                case 22:\n                    return [4 /*yield*/, getLocalSessionState(false)];\n                case 23:\n                    postRequestLSS = _b.sent();\n                    if (postRequestLSS.status === \"NOT_EXISTS\") {\n                        (0, logger_1.logDebugMessage)(\n                            \"onUnauthorisedResponse: lock acquired failed and local session doesn't exist, so sending SESSION_EXPIRED\"\n                        );\n                        // removed by server. So we logout\n                        return [2 /*return*/, { result: \"SESSION_EXPIRED\" }];\n                    } else {\n                        if (\n                            postRequestLSS.status !== preRequestLSS.status ||\n                            (postRequestLSS.status === \"EXISTS\" &&\n                                preRequestLSS.status === \"EXISTS\" &&\n                                postRequestLSS.lastAccessTokenUpdate !== preRequestLSS.lastAccessTokenUpdate)\n                        ) {\n                            (0, logger_1.logDebugMessage)(\n                                \"onUnauthorisedResponse: lock acquired failed and retrying early because pre and post id refresh tokens don't match\"\n                            );\n                            return [2 /*return*/, { result: \"RETRY\" }];\n                        }\n                        // here we try to call the API again since we probably failed to acquire lock and nothing has changed.\n                    }\n                    return [3 /*break*/, 2];\n                case 24:\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.onUnauthorisedResponse = onUnauthorisedResponse;\nfunction onTokenUpdate() {\n    (0, logger_1.logDebugMessage)(\"onTokenUpdate: firing ACCESS_TOKEN_PAYLOAD_UPDATED event\");\n    AuthHttpRequest.config.onHandleEvent({\n        action: \"ACCESS_TOKEN_PAYLOAD_UPDATED\",\n        userContext: {}\n    });\n}\nexports.onTokenUpdate = onTokenUpdate;\nfunction onInvalidClaimResponse(response) {\n    return __awaiter(this, void 0, void 0, function () {\n        var claimValidationErrors, _b;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _c.trys.push([0, 2, , 3]);\n                    return [\n                        4 /*yield*/,\n                        AuthHttpRequest.recipeImpl.getInvalidClaimsFromResponse({\n                            response: response,\n                            userContext: {}\n                        })\n                    ];\n                case 1:\n                    claimValidationErrors = _c.sent();\n                    // This shouldn't be undefined normally, but since we can't be certain about the shape of the response object so we check it like this.\n                    // It could still be something else, but chance of that happening by accident is really low.\n                    if (claimValidationErrors) {\n                        AuthHttpRequest.config.onHandleEvent({\n                            action: \"API_INVALID_CLAIM\",\n                            claimValidationErrors: claimValidationErrors,\n                            userContext: {}\n                        });\n                    }\n                    return [3 /*break*/, 3];\n                case 2:\n                    _b = _c.sent();\n                    return [3 /*break*/, 3];\n                case 3:\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.onInvalidClaimResponse = onInvalidClaimResponse;\n// if tryRefresh is true & this token doesn't exist, we try and refresh the session\n// else we return undefined.\nfunction getLocalSessionState(tryRefresh) {\n    return __awaiter(this, void 0, void 0, function () {\n        var lastAccessTokenUpdate, frontTokenExists, response, res;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    (0, logger_1.logDebugMessage)(\"getLocalSessionState: called\");\n                    return [4 /*yield*/, getFromCookies(LAST_ACCESS_TOKEN_UPDATE)];\n                case 1:\n                    lastAccessTokenUpdate = _b.sent();\n                    return [4 /*yield*/, FrontToken.doesTokenExists()];\n                case 2:\n                    frontTokenExists = _b.sent();\n                    if (!(frontTokenExists && lastAccessTokenUpdate !== undefined)) return [3 /*break*/, 3];\n                    (0,\n                    logger_1.logDebugMessage)(\"getLocalSessionState: returning EXISTS since both frontToken and lastAccessTokenUpdate exists\");\n                    return [2 /*return*/, { status: \"EXISTS\", lastAccessTokenUpdate: lastAccessTokenUpdate }];\n                case 3:\n                    if (!lastAccessTokenUpdate) return [3 /*break*/, 4];\n                    (0,\n                    logger_1.logDebugMessage)(\"getLocalSessionState: returning NOT_EXISTS since frontToken was cleared but lastAccessTokenUpdate exists\");\n                    return [2 /*return*/, { status: \"NOT_EXISTS\" }];\n                case 4:\n                    response = {\n                        status: \"MAY_EXIST\"\n                    };\n                    if (!tryRefresh) return [3 /*break*/, 7];\n                    (0, logger_1.logDebugMessage)(\"getLocalSessionState: trying to refresh\");\n                    return [4 /*yield*/, onUnauthorisedResponse(response)];\n                case 5:\n                    res = _b.sent();\n                    if (res.result !== \"RETRY\") {\n                        (0, logger_1.logDebugMessage)(\n                            \"getLocalSessionState: return NOT_EXISTS in case error from backend\" + res.result\n                        );\n                        // in case the backend is not working, we treat it as the session not existing...\n                        return [\n                            2 /*return*/,\n                            {\n                                status: \"NOT_EXISTS\"\n                            }\n                        ];\n                    }\n                    (0, logger_1.logDebugMessage)(\"getLocalSessionState: Retrying post refresh\");\n                    return [4 /*yield*/, getLocalSessionState(tryRefresh)];\n                case 6:\n                    return [2 /*return*/, _b.sent()];\n                case 7:\n                    (0, logger_1.logDebugMessage)(\"getLocalSessionState: returning: \" + response.status);\n                    return [2 /*return*/, response];\n            }\n        });\n    });\n}\nexports.getLocalSessionState = getLocalSessionState;\nfunction getStorageNameForToken(tokenType) {\n    switch (tokenType) {\n        case \"access\":\n            return ACCESS_TOKEN_NAME;\n        case \"refresh\":\n            return REFRESH_TOKEN_NAME;\n    }\n}\nexports.getStorageNameForToken = getStorageNameForToken;\nfunction setToken(tokenType, value) {\n    var name = getStorageNameForToken(tokenType);\n    if (value !== \"\") {\n        (0, logger_1.logDebugMessage)(\"setToken: saved \".concat(tokenType, \" token into cookies\"));\n        // We save the tokens with a 100-year expiration time\n        return storeInCookies(name, value, Date.now() + 3153600000);\n    } else {\n        (0, logger_1.logDebugMessage)(\"setToken: cleared \".concat(tokenType, \" token from cookies\"));\n        return storeInCookies(name, value, 0);\n    }\n}\nexports.setToken = setToken;\nfunction storeInCookies(name, value, expiry) {\n    var expires = \"Fri, 31 Dec 9999 23:59:59 GMT\";\n    if (expiry !== Number.MAX_SAFE_INTEGER) {\n        // We should respect the storage expirations set by the backend, even though tokens will also be checked elsewhere.\n        // We check them locally in case of front-token, and on the backend enforces the validity period for access and refresh tokens.\n        expires = new Date(expiry).toUTCString();\n    }\n    var domain = AuthHttpRequest.config.sessionTokenFrontendDomain;\n    if (\n        domain === \"localhost\" ||\n        domain === windowHandler_1.default.getReferenceOrThrow().windowHandler.location.getHostName()\n    ) {\n        // since some browsers ignore cookies with domain set to localhost\n        // see https://github.com/supertokens/supertokens-website/issues/25\n        return cookieHandler_1.default.getReferenceOrThrow().cookieHandler.setCookie(\n            \"\"\n                .concat(name, \"=\")\n                .concat(value, \";expires=\")\n                .concat(expires, \";path=/;samesite=\")\n                .concat(AuthHttpRequest.config.isInIframe ? \"none;secure\" : \"lax\")\n        );\n    } else {\n        return cookieHandler_1.default.getReferenceOrThrow().cookieHandler.setCookie(\n            \"\"\n                .concat(name, \"=\")\n                .concat(value, \";expires=\")\n                .concat(expires, \";domain=\")\n                .concat(domain, \";path=/;samesite=\")\n                .concat(AuthHttpRequest.config.isInIframe ? \"none;secure\" : \"lax\")\n        );\n    }\n}\nfunction getTokenForHeaderAuth(tokenType) {\n    return __awaiter(this, void 0, void 0, function () {\n        var name;\n        return __generator(this, function (_b) {\n            name = getStorageNameForToken(tokenType);\n            return [2 /*return*/, getFromCookies(name)];\n        });\n    });\n}\nexports.getTokenForHeaderAuth = getTokenForHeaderAuth;\nfunction getFromCookies(name) {\n    return __awaiter(this, void 0, void 0, function () {\n        var value, _b, parts, last;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _b = \"; \";\n                    return [4 /*yield*/, cookieHandler_1.default.getReferenceOrThrow().cookieHandler.getCookie()];\n                case 1:\n                    value = _b + _c.sent();\n                    parts = value.split(\"; \" + name + \"=\");\n                    if (parts.length >= 2) {\n                        last = parts.pop();\n                        if (last !== undefined) {\n                            return [2 /*return*/, last.split(\";\").shift()];\n                        }\n                    }\n                    return [2 /*return*/, undefined];\n            }\n        });\n    });\n}\nfunction setAuthorizationHeaderIfRequired(clonedHeaders, addRefreshToken) {\n    if (addRefreshToken === void 0) {\n        addRefreshToken = false;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n        var accessToken, refreshToken;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    (0, logger_1.logDebugMessage)(\"setTokenHeaders: adding existing tokens as header\");\n                    return [4 /*yield*/, getTokenForHeaderAuth(\"access\")];\n                case 1:\n                    accessToken = _b.sent();\n                    return [4 /*yield*/, getTokenForHeaderAuth(\"refresh\")];\n                case 2:\n                    refreshToken = _b.sent();\n                    // We don't always need the refresh token because that's only required by the refresh call\n                    // Still, we only add the access token to Authorization header if both are present, because we are planning to add an option to expose the\n                    // access token to the frontend while using cookie based auth - so that users can get the access token without using header based auth\n                    // We can add the refresh token even if only that one is present, to make manual testing easier - you can then\n                    // force a refresh by just deleting the access token.\n                    if ((addRefreshToken || accessToken !== undefined) && refreshToken !== undefined) {\n                        // the Headers class normalizes header names so we don't have to worry about casing\n                        if (clonedHeaders.has(\"Authorization\")) {\n                            (0, logger_1.logDebugMessage)(\n                                \"setAuthorizationHeaderIfRequired: Authorization header defined by the user, not adding\"\n                            );\n                        } else {\n                            (0, logger_1.logDebugMessage)(\n                                \"setAuthorizationHeaderIfRequired: added authorization header\"\n                            );\n                            clonedHeaders.set(\n                                \"Authorization\",\n                                \"Bearer \".concat(addRefreshToken ? refreshToken : accessToken)\n                            );\n                        }\n                    } else {\n                        (0, logger_1.logDebugMessage)(\n                            \"setAuthorizationHeaderIfRequired: token for header based auth not found\"\n                        );\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction saveTokensFromHeaders(response) {\n    return __awaiter(this, void 0, void 0, function () {\n        var refreshToken, accessToken, frontToken, antiCsrfToken, tok;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    (0,\n                    logger_1.logDebugMessage)(\"saveTokensFromHeaders: Saving updated tokens from the response headers\");\n                    refreshToken = response.headers.get(\"st-refresh-token\");\n                    if (!(refreshToken !== null)) return [3 /*break*/, 2];\n                    (0, logger_1.logDebugMessage)(\"saveTokensFromHeaders: saving new refresh token\");\n                    return [4 /*yield*/, setToken(\"refresh\", refreshToken)];\n                case 1:\n                    _b.sent();\n                    _b.label = 2;\n                case 2:\n                    accessToken = response.headers.get(\"st-access-token\");\n                    if (!(accessToken !== null)) return [3 /*break*/, 4];\n                    (0, logger_1.logDebugMessage)(\"saveTokensFromHeaders: saving new access token\");\n                    return [4 /*yield*/, setToken(\"access\", accessToken)];\n                case 3:\n                    _b.sent();\n                    _b.label = 4;\n                case 4:\n                    frontToken = response.headers.get(\"front-token\");\n                    if (!(frontToken !== null)) return [3 /*break*/, 6];\n                    (0, logger_1.logDebugMessage)(\"saveTokensFromHeaders: Setting sFrontToken: \" + frontToken);\n                    return [4 /*yield*/, FrontToken.setItem(frontToken)];\n                case 5:\n                    _b.sent();\n                    _b.label = 6;\n                case 6:\n                    antiCsrfToken = response.headers.get(\"anti-csrf\");\n                    if (!(antiCsrfToken !== null)) return [3 /*break*/, 9];\n                    return [4 /*yield*/, getLocalSessionState(true)];\n                case 7:\n                    tok = _b.sent();\n                    if (!(tok.status === \"EXISTS\")) return [3 /*break*/, 9];\n                    (0, logger_1.logDebugMessage)(\"saveTokensFromHeaders: Setting anti-csrf token\");\n                    return [4 /*yield*/, AntiCsrfToken.setItem(tok.lastAccessTokenUpdate, antiCsrfToken)];\n                case 8:\n                    _b.sent();\n                    _b.label = 9;\n                case 9:\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction saveLastAccessTokenUpdate() {\n    return __awaiter(this, void 0, void 0, function () {\n        var now;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    (0, logger_1.logDebugMessage)(\"saveLastAccessTokenUpdate: called\");\n                    now = Date.now().toString();\n                    (0, logger_1.logDebugMessage)(\"saveLastAccessTokenUpdate: setting \" + now);\n                    return [4 /*yield*/, storeInCookies(LAST_ACCESS_TOKEN_UPDATE, now, Number.MAX_SAFE_INTEGER)];\n                case 1:\n                    _b.sent();\n                    // We clear the sIRTFrontend cookie\n                    // We are handling this as a special case here because we want to limit the scope of legacy code\n                    return [4 /*yield*/, storeInCookies(\"sIRTFrontend\", \"\", 0)];\n                case 2:\n                    // We clear the sIRTFrontend cookie\n                    // We are handling this as a special case here because we want to limit the scope of legacy code\n                    _b.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.saveLastAccessTokenUpdate = saveLastAccessTokenUpdate;\nfunction getAntiCSRFToken() {\n    return __awaiter(this, void 0, void 0, function () {\n        function getAntiCSRFromCookie() {\n            return __awaiter(this, void 0, void 0, function () {\n                var value, _b, parts, last, temp;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            _b = \"; \";\n                            return [\n                                4 /*yield*/,\n                                cookieHandler_1.default.getReferenceOrThrow().cookieHandler.getCookie()\n                            ];\n                        case 1:\n                            value = _b + _c.sent();\n                            parts = value.split(\"; \" + ANTI_CSRF_NAME + \"=\");\n                            if (parts.length >= 2) {\n                                last = parts.pop();\n                                if (last !== undefined) {\n                                    temp = last.split(\";\").shift();\n                                    if (temp === undefined) {\n                                        return [2 /*return*/, null];\n                                    }\n                                    return [2 /*return*/, temp];\n                                }\n                            }\n                            return [2 /*return*/, null];\n                    }\n                });\n            });\n        }\n        var fromCookie;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    (0, logger_1.logDebugMessage)(\"getAntiCSRFToken: called\");\n                    return [4 /*yield*/, getLocalSessionState(true)];\n                case 1:\n                    // we do not call doesSessionExist here cause the user might override that\n                    // function here and then it may break the logic of our original implementation.\n                    if (!(_b.sent().status === \"EXISTS\")) {\n                        (0, logger_1.logDebugMessage)(\n                            \"getAntiCSRFToken: Returning because local session state != EXISTS\"\n                        );\n                        return [2 /*return*/, null];\n                    }\n                    return [4 /*yield*/, getAntiCSRFromCookie()];\n                case 2:\n                    fromCookie = _b.sent();\n                    (0, logger_1.logDebugMessage)(\"getAntiCSRFToken: returning: \" + fromCookie);\n                    return [2 /*return*/, fromCookie];\n            }\n        });\n    });\n}\n// give antiCSRFToken as undefined to remove it.\nfunction setAntiCSRF(antiCSRFToken) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    (0, logger_1.logDebugMessage)(\"setAntiCSRF: called: \" + antiCSRFToken);\n                    if (!(antiCSRFToken !== undefined)) return [3 /*break*/, 2];\n                    return [4 /*yield*/, storeInCookies(ANTI_CSRF_NAME, antiCSRFToken, Number.MAX_SAFE_INTEGER)];\n                case 1:\n                    _b.sent();\n                    return [3 /*break*/, 4];\n                case 2:\n                    return [4 /*yield*/, storeInCookies(ANTI_CSRF_NAME, \"\", 0)];\n                case 3:\n                    _b.sent();\n                    _b.label = 4;\n                case 4:\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.setAntiCSRF = setAntiCSRF;\nfunction getFrontTokenFromCookie() {\n    return __awaiter(this, void 0, void 0, function () {\n        var val;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    (0, logger_1.logDebugMessage)(\"getFrontTokenFromCookie: called\");\n                    return [4 /*yield*/, getFromCookies(FRONT_TOKEN_NAME)];\n                case 1:\n                    val = _b.sent();\n                    return [2 /*return*/, val === undefined ? null : val];\n            }\n        });\n    });\n}\nfunction parseFrontToken(frontToken) {\n    return JSON.parse(decodeURIComponent(escape(atob(frontToken))));\n}\nfunction getFrontToken() {\n    return __awaiter(this, void 0, void 0, function () {\n        var fromCookie;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    (0, logger_1.logDebugMessage)(\"getFrontToken: called\");\n                    return [4 /*yield*/, getLocalSessionState(true)];\n                case 1:\n                    // we do not call doesSessionExist here because that directly calls this function.\n                    if (!(_b.sent().status === \"EXISTS\")) {\n                        (0, logger_1.logDebugMessage)(\"getFrontToken: Returning because sIRTFrontend != EXISTS\");\n                        return [2 /*return*/, null];\n                    }\n                    return [4 /*yield*/, getFrontTokenFromCookie()];\n                case 2:\n                    fromCookie = _b.sent();\n                    (0, logger_1.logDebugMessage)(\"getFrontToken: returning: \" + fromCookie);\n                    return [2 /*return*/, fromCookie];\n            }\n        });\n    });\n}\nexports.getFrontToken = getFrontToken;\nfunction setFrontToken(frontToken) {\n    return __awaiter(this, void 0, void 0, function () {\n        var oldToken, oldPayload, newPayload;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    (0, logger_1.logDebugMessage)(\"setFrontToken: called\");\n                    return [4 /*yield*/, getFrontTokenFromCookie()];\n                case 1:\n                    oldToken = _b.sent();\n                    if (oldToken !== null && frontToken !== undefined) {\n                        oldPayload = parseFrontToken(oldToken).up;\n                        newPayload = parseFrontToken(frontToken).up;\n                        if (JSON.stringify(oldPayload) !== JSON.stringify(newPayload)) {\n                            onTokenUpdate();\n                        }\n                    }\n                    if (!(frontToken === undefined)) return [3 /*break*/, 3];\n                    // clear the cookie\n                    return [4 /*yield*/, storeInCookies(FRONT_TOKEN_NAME, \"\", 0)];\n                case 2:\n                    // clear the cookie\n                    _b.sent();\n                    return [3 /*break*/, 5];\n                case 3:\n                    return [4 /*yield*/, storeInCookies(FRONT_TOKEN_NAME, frontToken, Number.MAX_SAFE_INTEGER)];\n                case 4:\n                    _b.sent();\n                    _b.label = 5;\n                case 5:\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.setFrontToken = setFrontToken;\nfunction fireSessionUpdateEventsIfNecessary(wasLoggedIn, status, frontTokenHeaderFromResponse) {\n    // In case we've received a 401 that didn't clear the session (e.g.: we've sent no session token, or we should try refreshing)\n    // then onUnauthorised will handle firing the UNAUTHORISED event if necessary\n    // In some rare cases (where we receive a 401 that also clears the session) this will fire the event twice.\n    // This may be considered a bug, but it is the existing behaviour before the rework\n    if (frontTokenHeaderFromResponse === undefined || frontTokenHeaderFromResponse === null) {\n        // The access token (and the session) hasn't been updated.\n        (0, logger_1.logDebugMessage)(\n            \"fireSessionUpdateEventsIfNecessary returning early because the front token was not updated\"\n        );\n        return;\n    }\n    // if the current endpoint clears the session it'll set the front-token to remove\n    // any other update means it's created or updated.\n    var frontTokenExistsAfter = frontTokenHeaderFromResponse !== \"remove\";\n    (0, logger_1.logDebugMessage)(\n        \"fireSessionUpdateEventsIfNecessary wasLoggedIn: \"\n            .concat(wasLoggedIn, \" frontTokenExistsAfter: \")\n            .concat(frontTokenExistsAfter, \" status: \")\n            .concat(status)\n    );\n    if (wasLoggedIn) {\n        // we check for wasLoggedIn cause we don't want to fire an event\n        // unnecessarily on first app load or if the user tried\n        // to query an API that returned 401 while the user was not logged in...\n        if (!frontTokenExistsAfter) {\n            if (status === AuthHttpRequest.config.sessionExpiredStatusCode) {\n                (0, logger_1.logDebugMessage)(\"onUnauthorisedResponse: firing UNAUTHORISED event\");\n                AuthHttpRequest.config.onHandleEvent({\n                    action: \"UNAUTHORISED\",\n                    sessionExpiredOrRevoked: true,\n                    userContext: {}\n                });\n            } else {\n                (0, logger_1.logDebugMessage)(\"onUnauthorisedResponse: firing SIGN_OUT event\");\n                AuthHttpRequest.config.onHandleEvent({\n                    action: \"SIGN_OUT\",\n                    userContext: {}\n                });\n            }\n        }\n    } else if (frontTokenExistsAfter) {\n        (0, logger_1.logDebugMessage)(\"onUnauthorisedResponse: firing SESSION_CREATED event\");\n        AuthHttpRequest.config.onHandleEvent({\n            action: \"SESSION_CREATED\",\n            userContext: {}\n        });\n    }\n}\nexports.fireSessionUpdateEventsIfNecessary = fireSessionUpdateEventsIfNecessary;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/fetch.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/* Copyright (c) 2020, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar __awaiter =\n    (this && this.__awaiter) ||\n    function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n            return value instanceof P\n                ? value\n                : new P(function (resolve) {\n                      resolve(value);\n                  });\n        }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n                try {\n                    step(generator.next(value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function rejected(value) {\n                try {\n                    step(generator[\"throw\"](value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function step(result) {\n                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\nvar __generator =\n    (this && this.__generator) ||\n    function (thisArg, body) {\n        var _ = {\n                label: 0,\n                sent: function () {\n                    if (t[0] & 1) throw t[1];\n                    return t[1];\n                },\n                trys: [],\n                ops: []\n            },\n            f,\n            y,\n            t,\n            g;\n        return (\n            (g = { next: verb(0), throw: verb(1), return: verb(2) }),\n            typeof Symbol === \"function\" &&\n                (g[Symbol.iterator] = function () {\n                    return this;\n                }),\n            g\n        );\n        function verb(n) {\n            return function (v) {\n                return step([n, v]);\n            };\n        }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (\n                        ((f = 1),\n                        y &&\n                            (t =\n                                op[0] & 2\n                                    ? y[\"return\"]\n                                    : op[0]\n                                    ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0)\n                                    : y.next) &&\n                            !(t = t.call(y, op[1])).done)\n                    )\n                        return t;\n                    if (((y = 0), t)) op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (\n                                !((t = _.trys), (t = t.length > 0 && t[t.length - 1])) &&\n                                (op[0] === 6 || op[0] === 2)\n                            ) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2]) _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                } catch (e) {\n                    op = [6, e];\n                    y = 0;\n                } finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5) throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BooleanClaim =\n    exports.PrimitiveArrayClaim =\n    exports.PrimitiveClaim =\n    exports.SessionClaimValidator =\n    exports.getInvalidClaimsFromResponse =\n    exports.getClaimValue =\n    exports.validateClaims =\n    exports.signOut =\n    exports.addAxiosInterceptors =\n    exports.doesSessionExist =\n    exports.attemptRefreshingSession =\n    exports.getAccessToken =\n    exports.getAccessTokenPayloadSecurely =\n    exports.getUserId =\n    exports.init =\n        void 0;\nvar fetch_1 = __webpack_require__(/*! ./fetch */ \"./node_modules/supertokens-website/lib/build/fetch.js\");\nvar recipeImplementation_1 = __webpack_require__(/*! ./recipeImplementation */ \"./node_modules/supertokens-website/lib/build/recipeImplementation.js\");\nvar supertokens_js_override_1 = __webpack_require__(/*! supertokens-js-override */ \"./node_modules/supertokens-js-override/lib/build/index.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/supertokens-website/lib/build/utils/index.js\");\nvar cookieHandler_1 = __webpack_require__(/*! ./utils/cookieHandler */ \"./node_modules/supertokens-website/lib/build/utils/cookieHandler/index.js\");\nvar windowHandler_1 = __webpack_require__(/*! ./utils/windowHandler */ \"./node_modules/supertokens-website/lib/build/utils/windowHandler/index.js\");\nvar lockFactory_1 = __webpack_require__(/*! ./utils/lockFactory */ \"./node_modules/supertokens-website/lib/build/utils/lockFactory/index.js\");\nvar sessionClaimValidatorStore_1 = __webpack_require__(/*! ./utils/sessionClaimValidatorStore */ \"./node_modules/supertokens-website/lib/build/utils/sessionClaimValidatorStore.js\");\nvar AuthHttpRequest = /** @class */ (function () {\n    function AuthHttpRequest() {}\n    AuthHttpRequest.init = function (options) {\n        cookieHandler_1.default.init(options.cookieHandler);\n        windowHandler_1.default.init(options.windowHandler);\n        lockFactory_1.default.init(\n            options.lockFactory,\n            windowHandler_1.default.getReferenceOrThrow().windowHandler.localStorage\n        );\n        var config = (0, utils_1.validateAndNormaliseInputOrThrowError)(options);\n        var recipeImpl = new supertokens_js_override_1.default(\n            (0, recipeImplementation_1.default)({\n                onHandleEvent: config.onHandleEvent,\n                preAPIHook: config.preAPIHook,\n                postAPIHook: config.postAPIHook,\n                sessionExpiredStatusCode: config.sessionExpiredStatusCode\n            })\n        )\n            .override(config.override.functions)\n            .build();\n        fetch_1.default.init(config, recipeImpl);\n        AuthHttpRequest.axiosInterceptorQueue.forEach(function (f) {\n            f();\n        });\n        AuthHttpRequest.axiosInterceptorQueue = [];\n    };\n    AuthHttpRequest.getUserId = function (input) {\n        return fetch_1.default.recipeImpl.getUserId({\n            userContext: (0, utils_1.getNormalisedUserContext)(input === undefined ? undefined : input.userContext)\n        });\n    };\n    AuthHttpRequest.getAccessTokenPayloadSecurely = function (input) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                return [\n                    2 /*return*/,\n                    fetch_1.default.recipeImpl.getAccessTokenPayloadSecurely({\n                        userContext: (0, utils_1.getNormalisedUserContext)(\n                            input === undefined ? undefined : input.userContext\n                        )\n                    })\n                ];\n            });\n        });\n    };\n    var _a;\n    _a = AuthHttpRequest;\n    AuthHttpRequest.axiosInterceptorQueue = [];\n    AuthHttpRequest.attemptRefreshingSession = function () {\n        return __awaiter(void 0, void 0, void 0, function () {\n            return __generator(_a, function (_b) {\n                return [2 /*return*/, fetch_1.default.attemptRefreshingSession()];\n            });\n        });\n    };\n    AuthHttpRequest.doesSessionExist = function (input) {\n        return fetch_1.default.recipeImpl.doesSessionExist({\n            userContext: (0, utils_1.getNormalisedUserContext)(input === undefined ? undefined : input.userContext)\n        });\n    };\n    /**\n     * @deprecated\n     */\n    AuthHttpRequest.addAxiosInterceptors = function (axiosInstance, userContext) {\n        if (!fetch_1.default.initCalled) {\n            // the recipe implementation has not been initialised yet, so add\n            // this to the queue and wait for it to be initialised, and then on\n            // init call, we add all the interceptors.\n            AuthHttpRequest.axiosInterceptorQueue.push(function () {\n                fetch_1.default.recipeImpl.addAxiosInterceptors({\n                    axiosInstance: axiosInstance,\n                    userContext: (0, utils_1.getNormalisedUserContext)(userContext)\n                });\n            });\n        } else {\n            fetch_1.default.recipeImpl.addAxiosInterceptors({\n                axiosInstance: axiosInstance,\n                userContext: (0, utils_1.getNormalisedUserContext)(userContext)\n            });\n        }\n    };\n    AuthHttpRequest.signOut = function (input) {\n        return fetch_1.default.recipeImpl.signOut({\n            userContext: (0, utils_1.getNormalisedUserContext)(input === undefined ? undefined : input.userContext)\n        });\n    };\n    AuthHttpRequest.getInvalidClaimsFromResponse = function (input) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                return [\n                    2 /*return*/,\n                    fetch_1.default.recipeImpl.getInvalidClaimsFromResponse({\n                        response: input.response,\n                        userContext: (0, utils_1.getNormalisedUserContext)(input.userContext)\n                    })\n                ];\n            });\n        });\n    };\n    AuthHttpRequest.getClaimValue = function (input) {\n        return __awaiter(this, void 0, void 0, function () {\n            var userContext, accessTokenPayload;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        userContext = (0, utils_1.getNormalisedUserContext)(\n                            input === undefined ? undefined : input.userContext\n                        );\n                        return [\n                            4 /*yield*/,\n                            AuthHttpRequest.getAccessTokenPayloadSecurely({ userContext: userContext })\n                        ];\n                    case 1:\n                        accessTokenPayload = _b.sent();\n                        return [2 /*return*/, input.claim.getValueFromPayload(accessTokenPayload, userContext)];\n                }\n            });\n        });\n    };\n    AuthHttpRequest.validateClaims = function (overrideGlobalClaimValidators, userContext) {\n        var normalisedUserContext = (0, utils_1.getNormalisedUserContext)(userContext);\n        var claimValidatorsAddedByOtherRecipes =\n            sessionClaimValidatorStore_1.SessionClaimValidatorStore.getClaimValidatorsAddedByOtherRecipes();\n        var globalClaimValidators = fetch_1.default.recipeImpl.getGlobalClaimValidators({\n            claimValidatorsAddedByOtherRecipes: claimValidatorsAddedByOtherRecipes,\n            userContext: normalisedUserContext\n        });\n        var claimValidators =\n            overrideGlobalClaimValidators !== undefined\n                ? overrideGlobalClaimValidators(globalClaimValidators, normalisedUserContext)\n                : globalClaimValidators;\n        if (claimValidators.length === 0) {\n            return [];\n        }\n        return fetch_1.default.recipeImpl.validateClaims({\n            claimValidators: claimValidators,\n            userContext: (0, utils_1.getNormalisedUserContext)(userContext)\n        });\n    };\n    AuthHttpRequest.getAccessToken = function (input) {\n        return __awaiter(void 0, void 0, void 0, function () {\n            return __generator(_a, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        return [\n                            4 /*yield*/,\n                            fetch_1.default.recipeImpl.doesSessionExist({\n                                userContext: (0, utils_1.getNormalisedUserContext)(\n                                    input === undefined ? undefined : input.userContext\n                                )\n                            })\n                        ];\n                    case 1:\n                        // This takes care of refreshing the access token if necessary.\n                        if (_b.sent()) {\n                            return [2 /*return*/, (0, fetch_1.getTokenForHeaderAuth)(\"access\")];\n                        }\n                        return [2 /*return*/, undefined];\n                }\n            });\n        });\n    };\n    return AuthHttpRequest;\n})();\nexports[\"default\"] = AuthHttpRequest;\nexports.init = AuthHttpRequest.init;\nexports.getUserId = AuthHttpRequest.getUserId;\nexports.getAccessTokenPayloadSecurely = AuthHttpRequest.getAccessTokenPayloadSecurely;\nexports.getAccessToken = AuthHttpRequest.getAccessToken;\nexports.attemptRefreshingSession = AuthHttpRequest.attemptRefreshingSession;\nexports.doesSessionExist = AuthHttpRequest.doesSessionExist;\n/**\n * @deprecated\n */\nexports.addAxiosInterceptors = AuthHttpRequest.addAxiosInterceptors;\nexports.signOut = AuthHttpRequest.signOut;\nexports.validateClaims = AuthHttpRequest.validateClaims;\nexports.getClaimValue = AuthHttpRequest.getClaimValue;\nexports.getInvalidClaimsFromResponse = AuthHttpRequest.getInvalidClaimsFromResponse;\nvar types_1 = __webpack_require__(/*! ./types */ \"./node_modules/supertokens-website/lib/build/types.js\");\nObject.defineProperty(exports, \"SessionClaimValidator\", ({\n    enumerable: true,\n    get: function () {\n        return types_1.SessionClaimValidator;\n    }\n}));\nvar primitiveClaim_1 = __webpack_require__(/*! ./claims/primitiveClaim */ \"./node_modules/supertokens-website/lib/build/claims/primitiveClaim.js\");\nObject.defineProperty(exports, \"PrimitiveClaim\", ({\n    enumerable: true,\n    get: function () {\n        return primitiveClaim_1.PrimitiveClaim;\n    }\n}));\nvar primitiveArrayClaim_1 = __webpack_require__(/*! ./claims/primitiveArrayClaim */ \"./node_modules/supertokens-website/lib/build/claims/primitiveArrayClaim.js\");\nObject.defineProperty(exports, \"PrimitiveArrayClaim\", ({\n    enumerable: true,\n    get: function () {\n        return primitiveArrayClaim_1.PrimitiveArrayClaim;\n    }\n}));\nvar booleanClaim_1 = __webpack_require__(/*! ./claims/booleanClaim */ \"./node_modules/supertokens-website/lib/build/claims/booleanClaim.js\");\nObject.defineProperty(exports, \"BooleanClaim\", ({\n    enumerable: true,\n    get: function () {\n        return booleanClaim_1.BooleanClaim;\n    }\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/logger.js":
/*!**************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/logger.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.logDebugMessage = exports.disableLogging = exports.enableLogging = void 0;\nvar version_1 = __webpack_require__(/*! ./version */ \"./node_modules/supertokens-website/lib/build/version.js\");\nvar SUPERTOKENS_DEBUG_NAMESPACE = \"com.supertokens\";\nvar __supertokensWebsiteLogging = false;\nfunction enableLogging() {\n    __supertokensWebsiteLogging = true;\n}\nexports.enableLogging = enableLogging;\nfunction disableLogging() {\n    __supertokensWebsiteLogging = false;\n}\nexports.disableLogging = disableLogging;\nfunction logDebugMessage(message) {\n    if (__supertokensWebsiteLogging) {\n        console.log(\n            \"\"\n                .concat(SUPERTOKENS_DEBUG_NAMESPACE, ' {t: \"')\n                .concat(new Date().toISOString(), '\", message: \"')\n                .concat(message, '\", supertokens-website-ver: \"')\n                .concat(version_1.package_version, '\"}')\n        );\n    }\n}\nexports.logDebugMessage = logDebugMessage;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS9saWIvYnVpbGQvbG9nZ2VyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUIsR0FBRyxzQkFBc0IsR0FBRyxxQkFBcUI7QUFDeEUsZ0JBQWdCLG1CQUFPLENBQUMsMEVBQVc7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0Q7QUFDeEQ7QUFDQTtBQUNBLHNEQUFzRDtBQUN0RDtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1cGVydG9rZW5zLXdlYnNpdGUvbGliL2J1aWxkL2xvZ2dlci5qcz8xMDBiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogQ29weXJpZ2h0IChjKSAyMDIxLCBWUkFJIExhYnMgYW5kL29yIGl0cyBhZmZpbGlhdGVzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc29mdHdhcmUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIikgYXMgcHVibGlzaGVkIGJ5IHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbi5cbiAqXG4gKiBZb3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXlcbiAqIG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUXG4gKiBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGVcbiAqIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5sb2dEZWJ1Z01lc3NhZ2UgPSBleHBvcnRzLmRpc2FibGVMb2dnaW5nID0gZXhwb3J0cy5lbmFibGVMb2dnaW5nID0gdm9pZCAwO1xudmFyIHZlcnNpb25fMSA9IHJlcXVpcmUoXCIuL3ZlcnNpb25cIik7XG52YXIgU1VQRVJUT0tFTlNfREVCVUdfTkFNRVNQQUNFID0gXCJjb20uc3VwZXJ0b2tlbnNcIjtcbnZhciBfX3N1cGVydG9rZW5zV2Vic2l0ZUxvZ2dpbmcgPSBmYWxzZTtcbmZ1bmN0aW9uIGVuYWJsZUxvZ2dpbmcoKSB7XG4gICAgX19zdXBlcnRva2Vuc1dlYnNpdGVMb2dnaW5nID0gdHJ1ZTtcbn1cbmV4cG9ydHMuZW5hYmxlTG9nZ2luZyA9IGVuYWJsZUxvZ2dpbmc7XG5mdW5jdGlvbiBkaXNhYmxlTG9nZ2luZygpIHtcbiAgICBfX3N1cGVydG9rZW5zV2Vic2l0ZUxvZ2dpbmcgPSBmYWxzZTtcbn1cbmV4cG9ydHMuZGlzYWJsZUxvZ2dpbmcgPSBkaXNhYmxlTG9nZ2luZztcbmZ1bmN0aW9uIGxvZ0RlYnVnTWVzc2FnZShtZXNzYWdlKSB7XG4gICAgaWYgKF9fc3VwZXJ0b2tlbnNXZWJzaXRlTG9nZ2luZykge1xuICAgICAgICBjb25zb2xlLmxvZyhcbiAgICAgICAgICAgIFwiXCJcbiAgICAgICAgICAgICAgICAuY29uY2F0KFNVUEVSVE9LRU5TX0RFQlVHX05BTUVTUEFDRSwgJyB7dDogXCInKVxuICAgICAgICAgICAgICAgIC5jb25jYXQobmV3IERhdGUoKS50b0lTT1N0cmluZygpLCAnXCIsIG1lc3NhZ2U6IFwiJylcbiAgICAgICAgICAgICAgICAuY29uY2F0KG1lc3NhZ2UsICdcIiwgc3VwZXJ0b2tlbnMtd2Vic2l0ZS12ZXI6IFwiJylcbiAgICAgICAgICAgICAgICAuY29uY2F0KHZlcnNpb25fMS5wYWNrYWdlX3ZlcnNpb24sICdcIn0nKVxuICAgICAgICApO1xuICAgIH1cbn1cbmV4cG9ydHMubG9nRGVidWdNZXNzYWdlID0gbG9nRGVidWdNZXNzYWdlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/logger.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/normalisedURLDomain.js":
/*!***************************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/normalisedURLDomain.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isAnIpAddress = void 0;\nfunction isAnIpAddress(ipaddress) {\n    return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\n        ipaddress\n    );\n}\nexports.isAnIpAddress = isAnIpAddress;\nvar NormalisedURLDomain = /** @class */ (function () {\n    function NormalisedURLDomain(url) {\n        var _this = this;\n        this.getAsStringDangerous = function () {\n            return _this.value;\n        };\n        this.value = normaliseURLDomainOrThrowError(url);\n    }\n    return NormalisedURLDomain;\n})();\nexports[\"default\"] = NormalisedURLDomain;\nfunction normaliseURLDomainOrThrowError(input, ignoreProtocol) {\n    if (ignoreProtocol === void 0) {\n        ignoreProtocol = false;\n    }\n    input = input.trim();\n    try {\n        if (!input.startsWith(\"http://\") && !input.startsWith(\"https://\")) {\n            throw new Error(\"converting to proper URL\");\n        }\n        var urlObj = new URL(input);\n        if (ignoreProtocol) {\n            if (urlObj.hostname.startsWith(\"localhost\") || isAnIpAddress(urlObj.hostname)) {\n                input = \"http://\" + urlObj.host;\n            } else {\n                input = \"https://\" + urlObj.host;\n            }\n        } else {\n            input = urlObj.protocol + \"//\" + urlObj.host;\n        }\n        return input;\n        // eslint-disable-next-line no-empty\n    } catch (err) {}\n    if (input.startsWith(\"/\")) {\n        throw new Error(\"Please provide a valid domain name\");\n    }\n    // not a valid URL\n    if (input.indexOf(\".\") === 0) {\n        input = input.substr(1);\n    }\n    // If the input contains a . it means they have given a domain name.\n    // So we try assuming that they have given a domain name\n    if (\n        (input.indexOf(\".\") !== -1 || input.startsWith(\"localhost\")) &&\n        !input.startsWith(\"http://\") &&\n        !input.startsWith(\"https://\")\n    ) {\n        input = \"https://\" + input;\n        // at this point, it should be a valid URL. So we test that before doing a recursive call\n        try {\n            new URL(input);\n            return normaliseURLDomainOrThrowError(input, true);\n            // eslint-disable-next-line no-empty\n        } catch (err) {}\n    }\n    throw new Error(\"Please provide a valid domain name\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS9saWIvYnVpbGQvbm9ybWFsaXNlZFVSTERvbWFpbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS9saWIvYnVpbGQvbm9ybWFsaXNlZFVSTERvbWFpbi5qcz8yZTllIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogQ29weXJpZ2h0IChjKSAyMDIxLCBWUkFJIExhYnMgYW5kL29yIGl0cyBhZmZpbGlhdGVzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc29mdHdhcmUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIikgYXMgcHVibGlzaGVkIGJ5IHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbi5cbiAqXG4gKiBZb3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXlcbiAqIG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUXG4gKiBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGVcbiAqIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0FuSXBBZGRyZXNzID0gdm9pZCAwO1xuZnVuY3Rpb24gaXNBbklwQWRkcmVzcyhpcGFkZHJlc3MpIHtcbiAgICByZXR1cm4gL14oMjVbMC01XXwyWzAtNF1bMC05XXxbMDFdP1swLTldWzAtOV0/KVxcLigyNVswLTVdfDJbMC00XVswLTldfFswMV0/WzAtOV1bMC05XT8pXFwuKDI1WzAtNV18MlswLTRdWzAtOV18WzAxXT9bMC05XVswLTldPylcXC4oMjVbMC01XXwyWzAtNF1bMC05XXxbMDFdP1swLTldWzAtOV0/KSQvLnRlc3QoXG4gICAgICAgIGlwYWRkcmVzc1xuICAgICk7XG59XG5leHBvcnRzLmlzQW5JcEFkZHJlc3MgPSBpc0FuSXBBZGRyZXNzO1xudmFyIE5vcm1hbGlzZWRVUkxEb21haW4gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTm9ybWFsaXNlZFVSTERvbWFpbih1cmwpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy5nZXRBc1N0cmluZ0Rhbmdlcm91cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy52YWx1ZTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy52YWx1ZSA9IG5vcm1hbGlzZVVSTERvbWFpbk9yVGhyb3dFcnJvcih1cmwpO1xuICAgIH1cbiAgICByZXR1cm4gTm9ybWFsaXNlZFVSTERvbWFpbjtcbn0pKCk7XG5leHBvcnRzLmRlZmF1bHQgPSBOb3JtYWxpc2VkVVJMRG9tYWluO1xuZnVuY3Rpb24gbm9ybWFsaXNlVVJMRG9tYWluT3JUaHJvd0Vycm9yKGlucHV0LCBpZ25vcmVQcm90b2NvbCkge1xuICAgIGlmIChpZ25vcmVQcm90b2NvbCA9PT0gdm9pZCAwKSB7XG4gICAgICAgIGlnbm9yZVByb3RvY29sID0gZmFsc2U7XG4gICAgfVxuICAgIGlucHV0ID0gaW5wdXQudHJpbSgpO1xuICAgIHRyeSB7XG4gICAgICAgIGlmICghaW5wdXQuc3RhcnRzV2l0aChcImh0dHA6Ly9cIikgJiYgIWlucHV0LnN0YXJ0c1dpdGgoXCJodHRwczovL1wiKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiY29udmVydGluZyB0byBwcm9wZXIgVVJMXCIpO1xuICAgICAgICB9XG4gICAgICAgIHZhciB1cmxPYmogPSBuZXcgVVJMKGlucHV0KTtcbiAgICAgICAgaWYgKGlnbm9yZVByb3RvY29sKSB7XG4gICAgICAgICAgICBpZiAodXJsT2JqLmhvc3RuYW1lLnN0YXJ0c1dpdGgoXCJsb2NhbGhvc3RcIikgfHwgaXNBbklwQWRkcmVzcyh1cmxPYmouaG9zdG5hbWUpKSB7XG4gICAgICAgICAgICAgICAgaW5wdXQgPSBcImh0dHA6Ly9cIiArIHVybE9iai5ob3N0O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpbnB1dCA9IFwiaHR0cHM6Ly9cIiArIHVybE9iai5ob3N0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaW5wdXQgPSB1cmxPYmoucHJvdG9jb2wgKyBcIi8vXCIgKyB1cmxPYmouaG9zdDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaW5wdXQ7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1lbXB0eVxuICAgIH0gY2F0Y2ggKGVycikge31cbiAgICBpZiAoaW5wdXQuc3RhcnRzV2l0aChcIi9cIikpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUGxlYXNlIHByb3ZpZGUgYSB2YWxpZCBkb21haW4gbmFtZVwiKTtcbiAgICB9XG4gICAgLy8gbm90IGEgdmFsaWQgVVJMXG4gICAgaWYgKGlucHV0LmluZGV4T2YoXCIuXCIpID09PSAwKSB7XG4gICAgICAgIGlucHV0ID0gaW5wdXQuc3Vic3RyKDEpO1xuICAgIH1cbiAgICAvLyBJZiB0aGUgaW5wdXQgY29udGFpbnMgYSAuIGl0IG1lYW5zIHRoZXkgaGF2ZSBnaXZlbiBhIGRvbWFpbiBuYW1lLlxuICAgIC8vIFNvIHdlIHRyeSBhc3N1bWluZyB0aGF0IHRoZXkgaGF2ZSBnaXZlbiBhIGRvbWFpbiBuYW1lXG4gICAgaWYgKFxuICAgICAgICAoaW5wdXQuaW5kZXhPZihcIi5cIikgIT09IC0xIHx8IGlucHV0LnN0YXJ0c1dpdGgoXCJsb2NhbGhvc3RcIikpICYmXG4gICAgICAgICFpbnB1dC5zdGFydHNXaXRoKFwiaHR0cDovL1wiKSAmJlxuICAgICAgICAhaW5wdXQuc3RhcnRzV2l0aChcImh0dHBzOi8vXCIpXG4gICAgKSB7XG4gICAgICAgIGlucHV0ID0gXCJodHRwczovL1wiICsgaW5wdXQ7XG4gICAgICAgIC8vIGF0IHRoaXMgcG9pbnQsIGl0IHNob3VsZCBiZSBhIHZhbGlkIFVSTC4gU28gd2UgdGVzdCB0aGF0IGJlZm9yZSBkb2luZyBhIHJlY3Vyc2l2ZSBjYWxsXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBuZXcgVVJMKGlucHV0KTtcbiAgICAgICAgICAgIHJldHVybiBub3JtYWxpc2VVUkxEb21haW5PclRocm93RXJyb3IoaW5wdXQsIHRydWUpO1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWVtcHR5XG4gICAgICAgIH0gY2F0Y2ggKGVycikge31cbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiUGxlYXNlIHByb3ZpZGUgYSB2YWxpZCBkb21haW4gbmFtZVwiKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/normalisedURLDomain.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/normalisedURLPath.js":
/*!*************************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/normalisedURLPath.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar NormalisedURLPath = /** @class */ (function () {\n    function NormalisedURLPath(url) {\n        var _this = this;\n        this.startsWith = function (other) {\n            return _this.value.startsWith(other.value);\n        };\n        this.appendPath = function (other) {\n            return new NormalisedURLPath(_this.value + other.value);\n        };\n        this.getAsStringDangerous = function () {\n            return _this.value;\n        };\n        this.value = normaliseURLPathOrThrowError(url);\n    }\n    return NormalisedURLPath;\n})();\nexports[\"default\"] = NormalisedURLPath;\nfunction normaliseURLPathOrThrowError(input) {\n    input = input.trim();\n    try {\n        if (!input.startsWith(\"http://\") && !input.startsWith(\"https://\")) {\n            throw new Error(\"converting to proper URL\");\n        }\n        var urlObj = new URL(input);\n        input = urlObj.pathname;\n        if (input.charAt(input.length - 1) === \"/\") {\n            return input.substr(0, input.length - 1);\n        }\n        return input;\n        // eslint-disable-next-line no-empty\n    } catch (err) {}\n    // not a valid URL\n    // If the input contains a . it means they have given a domain name.\n    // So we try assuming that they have given a domain name + path\n    if (\n        (domainGiven(input) || input.startsWith(\"localhost\")) &&\n        !input.startsWith(\"http://\") &&\n        !input.startsWith(\"https://\")\n    ) {\n        input = \"http://\" + input;\n        return normaliseURLPathOrThrowError(input);\n    }\n    if (input.charAt(0) !== \"/\") {\n        input = \"/\" + input;\n    }\n    // at this point, we should be able to convert it into a fake URL and recursively call this function.\n    try {\n        // test that we can convert this to prevent an infinite loop\n        new URL(\"http://example.com\" + input);\n        return normaliseURLPathOrThrowError(\"http://example.com\" + input);\n    } catch (err) {\n        throw new Error(\"Please provide a valid URL path\");\n    }\n}\nfunction domainGiven(input) {\n    // If no dot, return false.\n    if (input.indexOf(\".\") === -1 || input.startsWith(\"/\")) {\n        return false;\n    }\n    try {\n        var url = new URL(input);\n        return url.hostname.indexOf(\".\") !== -1;\n    } catch (e) {}\n    try {\n        var url = new URL(\"http://\" + input);\n        return url.hostname.indexOf(\".\") !== -1;\n    } catch (e) {}\n    return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS9saWIvYnVpbGQvbm9ybWFsaXNlZFVSTFBhdGguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1cGVydG9rZW5zLXdlYnNpdGUvbGliL2J1aWxkL25vcm1hbGlzZWRVUkxQYXRoLmpzP2Y0MWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiBDb3B5cmlnaHQgKGMpIDIwMjEsIFZSQUkgTGFicyBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb2Z0d2FyZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLlxuICpcbiAqIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heVxuICogb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdCBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVRcbiAqIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZVxuICogTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgTm9ybWFsaXNlZFVSTFBhdGggPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTm9ybWFsaXNlZFVSTFBhdGgodXJsKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMuc3RhcnRzV2l0aCA9IGZ1bmN0aW9uIChvdGhlcikge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzLnZhbHVlLnN0YXJ0c1dpdGgob3RoZXIudmFsdWUpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLmFwcGVuZFBhdGggPSBmdW5jdGlvbiAob3RoZXIpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgTm9ybWFsaXNlZFVSTFBhdGgoX3RoaXMudmFsdWUgKyBvdGhlci52YWx1ZSk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuZ2V0QXNTdHJpbmdEYW5nZXJvdXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMudmFsdWU7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMudmFsdWUgPSBub3JtYWxpc2VVUkxQYXRoT3JUaHJvd0Vycm9yKHVybCk7XG4gICAgfVxuICAgIHJldHVybiBOb3JtYWxpc2VkVVJMUGF0aDtcbn0pKCk7XG5leHBvcnRzLmRlZmF1bHQgPSBOb3JtYWxpc2VkVVJMUGF0aDtcbmZ1bmN0aW9uIG5vcm1hbGlzZVVSTFBhdGhPclRocm93RXJyb3IoaW5wdXQpIHtcbiAgICBpbnB1dCA9IGlucHV0LnRyaW0oKTtcbiAgICB0cnkge1xuICAgICAgICBpZiAoIWlucHV0LnN0YXJ0c1dpdGgoXCJodHRwOi8vXCIpICYmICFpbnB1dC5zdGFydHNXaXRoKFwiaHR0cHM6Ly9cIikpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImNvbnZlcnRpbmcgdG8gcHJvcGVyIFVSTFwiKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdXJsT2JqID0gbmV3IFVSTChpbnB1dCk7XG4gICAgICAgIGlucHV0ID0gdXJsT2JqLnBhdGhuYW1lO1xuICAgICAgICBpZiAoaW5wdXQuY2hhckF0KGlucHV0Lmxlbmd0aCAtIDEpID09PSBcIi9cIikge1xuICAgICAgICAgICAgcmV0dXJuIGlucHV0LnN1YnN0cigwLCBpbnB1dC5sZW5ndGggLSAxKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaW5wdXQ7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1lbXB0eVxuICAgIH0gY2F0Y2ggKGVycikge31cbiAgICAvLyBub3QgYSB2YWxpZCBVUkxcbiAgICAvLyBJZiB0aGUgaW5wdXQgY29udGFpbnMgYSAuIGl0IG1lYW5zIHRoZXkgaGF2ZSBnaXZlbiBhIGRvbWFpbiBuYW1lLlxuICAgIC8vIFNvIHdlIHRyeSBhc3N1bWluZyB0aGF0IHRoZXkgaGF2ZSBnaXZlbiBhIGRvbWFpbiBuYW1lICsgcGF0aFxuICAgIGlmIChcbiAgICAgICAgKGRvbWFpbkdpdmVuKGlucHV0KSB8fCBpbnB1dC5zdGFydHNXaXRoKFwibG9jYWxob3N0XCIpKSAmJlxuICAgICAgICAhaW5wdXQuc3RhcnRzV2l0aChcImh0dHA6Ly9cIikgJiZcbiAgICAgICAgIWlucHV0LnN0YXJ0c1dpdGgoXCJodHRwczovL1wiKVxuICAgICkge1xuICAgICAgICBpbnB1dCA9IFwiaHR0cDovL1wiICsgaW5wdXQ7XG4gICAgICAgIHJldHVybiBub3JtYWxpc2VVUkxQYXRoT3JUaHJvd0Vycm9yKGlucHV0KTtcbiAgICB9XG4gICAgaWYgKGlucHV0LmNoYXJBdCgwKSAhPT0gXCIvXCIpIHtcbiAgICAgICAgaW5wdXQgPSBcIi9cIiArIGlucHV0O1xuICAgIH1cbiAgICAvLyBhdCB0aGlzIHBvaW50LCB3ZSBzaG91bGQgYmUgYWJsZSB0byBjb252ZXJ0IGl0IGludG8gYSBmYWtlIFVSTCBhbmQgcmVjdXJzaXZlbHkgY2FsbCB0aGlzIGZ1bmN0aW9uLlxuICAgIHRyeSB7XG4gICAgICAgIC8vIHRlc3QgdGhhdCB3ZSBjYW4gY29udmVydCB0aGlzIHRvIHByZXZlbnQgYW4gaW5maW5pdGUgbG9vcFxuICAgICAgICBuZXcgVVJMKFwiaHR0cDovL2V4YW1wbGUuY29tXCIgKyBpbnB1dCk7XG4gICAgICAgIHJldHVybiBub3JtYWxpc2VVUkxQYXRoT3JUaHJvd0Vycm9yKFwiaHR0cDovL2V4YW1wbGUuY29tXCIgKyBpbnB1dCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlBsZWFzZSBwcm92aWRlIGEgdmFsaWQgVVJMIHBhdGhcIik7XG4gICAgfVxufVxuZnVuY3Rpb24gZG9tYWluR2l2ZW4oaW5wdXQpIHtcbiAgICAvLyBJZiBubyBkb3QsIHJldHVybiBmYWxzZS5cbiAgICBpZiAoaW5wdXQuaW5kZXhPZihcIi5cIikgPT09IC0xIHx8IGlucHV0LnN0YXJ0c1dpdGgoXCIvXCIpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgdmFyIHVybCA9IG5ldyBVUkwoaW5wdXQpO1xuICAgICAgICByZXR1cm4gdXJsLmhvc3RuYW1lLmluZGV4T2YoXCIuXCIpICE9PSAtMTtcbiAgICB9IGNhdGNoIChlKSB7fVxuICAgIHRyeSB7XG4gICAgICAgIHZhciB1cmwgPSBuZXcgVVJMKFwiaHR0cDovL1wiICsgaW5wdXQpO1xuICAgICAgICByZXR1cm4gdXJsLmhvc3RuYW1lLmluZGV4T2YoXCIuXCIpICE9PSAtMTtcbiAgICB9IGNhdGNoIChlKSB7fVxuICAgIHJldHVybiBmYWxzZTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/normalisedURLPath.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/processState.js":
/*!********************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/processState.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n/* Copyright (c) 2020, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar __awaiter =\n    (this && this.__awaiter) ||\n    function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n            return value instanceof P\n                ? value\n                : new P(function (resolve) {\n                      resolve(value);\n                  });\n        }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n                try {\n                    step(generator.next(value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function rejected(value) {\n                try {\n                    step(generator[\"throw\"](value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function step(result) {\n                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\nvar __generator =\n    (this && this.__generator) ||\n    function (thisArg, body) {\n        var _ = {\n                label: 0,\n                sent: function () {\n                    if (t[0] & 1) throw t[1];\n                    return t[1];\n                },\n                trys: [],\n                ops: []\n            },\n            f,\n            y,\n            t,\n            g;\n        return (\n            (g = { next: verb(0), throw: verb(1), return: verb(2) }),\n            typeof Symbol === \"function\" &&\n                (g[Symbol.iterator] = function () {\n                    return this;\n                }),\n            g\n        );\n        function verb(n) {\n            return function (v) {\n                return step([n, v]);\n            };\n        }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (\n                        ((f = 1),\n                        y &&\n                            (t =\n                                op[0] & 2\n                                    ? y[\"return\"]\n                                    : op[0]\n                                    ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0)\n                                    : y.next) &&\n                            !(t = t.call(y, op[1])).done)\n                    )\n                        return t;\n                    if (((y = 0), t)) op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (\n                                !((t = _.trys), (t = t.length > 0 && t[t.length - 1])) &&\n                                (op[0] === 6 || op[0] === 2)\n                            ) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2]) _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                } catch (e) {\n                    op = [6, e];\n                    y = 0;\n                } finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5) throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ProcessState = exports.PROCESS_STATE = void 0;\nvar PROCESS_STATE;\n(function (PROCESS_STATE) {\n    //CALLING_INTERCEPTION_REQUEST : Process state for the request interceptor.\n    //CALLING_INTERCEPTION_RESOPONSE : Process state for the response interceptor.\n    PROCESS_STATE[(PROCESS_STATE[\"CALLING_INTERCEPTION_REQUEST\"] = 0)] = \"CALLING_INTERCEPTION_REQUEST\";\n    PROCESS_STATE[(PROCESS_STATE[\"CALLING_INTERCEPTION_RESPONSE\"] = 1)] = \"CALLING_INTERCEPTION_RESPONSE\";\n})((PROCESS_STATE = exports.PROCESS_STATE || (exports.PROCESS_STATE = {})));\nvar ProcessState = /** @class */ (function () {\n    function ProcessState() {\n        var _this = this;\n        this.history = [];\n        this.addState = function (state) {\n            try {\n                if (process !== undefined && process.env !== undefined && process.env.TEST_MODE === \"testing\") {\n                    _this.history.push(state);\n                }\n            } catch (ignored) {}\n        };\n        this.getEventByLastEventByName = function (state) {\n            for (var i = _this.history.length - 1; i >= 0; i--) {\n                if (_this.history[i] == state) {\n                    return _this.history[i];\n                }\n            }\n            return undefined;\n        };\n        this.reset = function () {\n            _this.history = [];\n        };\n        this.waitForEvent = function (state, timeInMS) {\n            if (timeInMS === void 0) {\n                timeInMS = 7000;\n            }\n            return __awaiter(_this, void 0, void 0, function () {\n                var startTime;\n                var _this = this;\n                return __generator(this, function (_a) {\n                    startTime = Date.now();\n                    return [\n                        2 /*return*/,\n                        new Promise(function (resolve) {\n                            var actualThis = _this;\n                            function tryAndGet() {\n                                var result = actualThis.getEventByLastEventByName(state);\n                                if (result === undefined) {\n                                    if (Date.now() - startTime > timeInMS) {\n                                        resolve(undefined);\n                                    } else {\n                                        setTimeout(tryAndGet, 1000);\n                                    }\n                                } else {\n                                    resolve(result);\n                                }\n                            }\n                            tryAndGet();\n                        })\n                    ];\n                });\n            });\n        };\n    }\n    ProcessState.getInstance = function () {\n        if (ProcessState.instance == undefined) {\n            ProcessState.instance = new ProcessState();\n        }\n        return ProcessState.instance;\n    };\n    return ProcessState;\n})();\nexports.ProcessState = ProcessState;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/processState.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/recipeImplementation.js":
/*!****************************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/recipeImplementation.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __assign =\n    (this && this.__assign) ||\n    function () {\n        __assign =\n            Object.assign ||\n            function (t) {\n                for (var s, i = 1, n = arguments.length; i < n; i++) {\n                    s = arguments[i];\n                    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n                }\n                return t;\n            };\n        return __assign.apply(this, arguments);\n    };\nvar __awaiter =\n    (this && this.__awaiter) ||\n    function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n            return value instanceof P\n                ? value\n                : new P(function (resolve) {\n                      resolve(value);\n                  });\n        }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n                try {\n                    step(generator.next(value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function rejected(value) {\n                try {\n                    step(generator[\"throw\"](value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function step(result) {\n                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\nvar __generator =\n    (this && this.__generator) ||\n    function (thisArg, body) {\n        var _ = {\n                label: 0,\n                sent: function () {\n                    if (t[0] & 1) throw t[1];\n                    return t[1];\n                },\n                trys: [],\n                ops: []\n            },\n            f,\n            y,\n            t,\n            g;\n        return (\n            (g = { next: verb(0), throw: verb(1), return: verb(2) }),\n            typeof Symbol === \"function\" &&\n                (g[Symbol.iterator] = function () {\n                    return this;\n                }),\n            g\n        );\n        function verb(n) {\n            return function (v) {\n                return step([n, v]);\n            };\n        }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (\n                        ((f = 1),\n                        y &&\n                            (t =\n                                op[0] & 2\n                                    ? y[\"return\"]\n                                    : op[0]\n                                    ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0)\n                                    : y.next) &&\n                            !(t = t.call(y, op[1])).done)\n                    )\n                        return t;\n                    if (((y = 0), t)) op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (\n                                !((t = _.trys), (t = t.length > 0 && t[t.length - 1])) &&\n                                (op[0] === 6 || op[0] === 2)\n                            ) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2]) _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                } catch (e) {\n                    op = [6, e];\n                    y = 0;\n                } finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5) throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar fetch_1 = __webpack_require__(/*! ./fetch */ \"./node_modules/supertokens-website/lib/build/fetch.js\");\nvar axios_1 = __webpack_require__(/*! ./axios */ \"./node_modules/supertokens-website/lib/build/axios.js\");\nvar version_1 = __webpack_require__(/*! ./version */ \"./node_modules/supertokens-website/lib/build/version.js\");\nvar logger_1 = __webpack_require__(/*! ./logger */ \"./node_modules/supertokens-website/lib/build/logger.js\");\nvar error_1 = __webpack_require__(/*! ./error */ \"./node_modules/supertokens-website/lib/build/error.js\");\nvar xmlhttprequest_1 = __webpack_require__(/*! ./xmlhttprequest */ \"./node_modules/supertokens-website/lib/build/xmlhttprequest.js\");\nfunction RecipeImplementation(recipeImplInput) {\n    return {\n        addXMLHttpRequestInterceptor: function (_) {\n            (0, logger_1.logDebugMessage)(\"addXMLHttpRequestInterceptorAndReturnModified: called\");\n            (0, xmlhttprequest_1.addInterceptorsToXMLHttpRequest)();\n        },\n        addFetchInterceptorsAndReturnModifiedFetch: function (input) {\n            (0, logger_1.logDebugMessage)(\"addFetchInterceptorsAndReturnModifiedFetch: called\");\n            return function (url, config) {\n                return __awaiter(this, void 0, void 0, function () {\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                return [\n                                    4 /*yield*/,\n                                    fetch_1.default.doRequest(\n                                        function (config) {\n                                            return input.originalFetch(\n                                                typeof url === \"object\" && \"clone\" in url ? url.clone() : url,\n                                                __assign({}, config)\n                                            );\n                                        },\n                                        config,\n                                        url\n                                    )\n                                ];\n                            case 1:\n                                return [2 /*return*/, _a.sent()];\n                        }\n                    });\n                });\n            };\n        },\n        addAxiosInterceptors: function (input) {\n            (0, logger_1.logDebugMessage)(\"addAxiosInterceptors: called\");\n            if (XMLHttpRequest.__interceptedBySuperTokens) {\n                console.warn(\n                    \"Not adding axios interceptor since XMLHttpRequest is already added. This is just a warning.\"\n                );\n                console.warn(\"Our axios and XMLHttpRequest interceptors cannot be used at the same time.\");\n                console.warn(\n                    \"Since XMLHttpRequest is added automatically and supports axios by default, you can just remove addAxiosInterceptors from your code.\"\n                );\n                console.warn(\n                    \"If you want to continue using our axios interceptor, you can override addXMLHttpRequestInterceptor with an empty function.\"\n                );\n                (0, logger_1.logDebugMessage)(\n                    \"addAxiosInterceptors: not adding, because XHR interceptors are already in place\"\n                );\n                return;\n            }\n            // we first check if this axiosInstance already has our interceptors.\n            var requestInterceptors = input.axiosInstance.interceptors.request;\n            for (var i = 0; i < requestInterceptors.handlers.length; i++) {\n                if (requestInterceptors.handlers[i].fulfilled === axios_1.interceptorFunctionRequestFulfilled) {\n                    (0, logger_1.logDebugMessage)(\n                        \"addAxiosInterceptors: not adding because already added on this instance\"\n                    );\n                    return;\n                }\n            }\n            // Add a request interceptor\n            input.axiosInstance.interceptors.request.use(axios_1.interceptorFunctionRequestFulfilled, function (error) {\n                return __awaiter(this, void 0, void 0, function () {\n                    return __generator(this, function (_a) {\n                        throw error;\n                    });\n                });\n            });\n            // Add a response interceptor\n            input.axiosInstance.interceptors.response.use(\n                (0, axios_1.responseInterceptor)(input.axiosInstance),\n                (0, axios_1.responseErrorInterceptor)(input.axiosInstance)\n            );\n        },\n        getUserId: function (_) {\n            return __awaiter(this, void 0, void 0, function () {\n                var tokenInfo;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            (0, logger_1.logDebugMessage)(\"getUserId: called\");\n                            return [4 /*yield*/, fetch_1.FrontToken.getTokenInfo()];\n                        case 1:\n                            tokenInfo = _a.sent();\n                            if (tokenInfo === undefined) {\n                                throw new Error(\"No session exists\");\n                            }\n                            (0, logger_1.logDebugMessage)(\"getUserId: returning: \" + tokenInfo.uid);\n                            return [2 /*return*/, tokenInfo.uid];\n                    }\n                });\n            });\n        },\n        getAccessTokenPayloadSecurely: function (input) {\n            return __awaiter(this, void 0, void 0, function () {\n                var tokenInfo, retry;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            (0, logger_1.logDebugMessage)(\"getAccessTokenPayloadSecurely: called\");\n                            return [4 /*yield*/, fetch_1.FrontToken.getTokenInfo()];\n                        case 1:\n                            tokenInfo = _a.sent();\n                            if (tokenInfo === undefined) {\n                                throw new Error(\"No session exists\");\n                            }\n                            if (!(tokenInfo.ate < Date.now())) return [3 /*break*/, 5];\n                            (0,\n                            logger_1.logDebugMessage)(\"getAccessTokenPayloadSecurely: access token expired. Refreshing session\");\n                            return [4 /*yield*/, fetch_1.default.attemptRefreshingSession()];\n                        case 2:\n                            retry = _a.sent();\n                            if (!retry) return [3 /*break*/, 4];\n                            return [\n                                4 /*yield*/,\n                                this.getAccessTokenPayloadSecurely({\n                                    userContext: input.userContext\n                                })\n                            ];\n                        case 3:\n                            return [2 /*return*/, _a.sent()];\n                        case 4:\n                            throw new Error(\"Could not refresh session\");\n                        case 5:\n                            (0,\n                            logger_1.logDebugMessage)(\"getAccessTokenPayloadSecurely: returning: \" + JSON.stringify(tokenInfo.up));\n                            return [2 /*return*/, tokenInfo.up];\n                    }\n                });\n            });\n        },\n        doesSessionExist: function (_) {\n            return __awaiter(this, void 0, void 0, function () {\n                var tokenInfo, preRequestLSS, refresh;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            (0, logger_1.logDebugMessage)(\"doesSessionExist: called\");\n                            return [4 /*yield*/, fetch_1.FrontToken.getTokenInfo()];\n                        case 1:\n                            tokenInfo = _a.sent();\n                            // The above includes getLocalSessionState(true), which would call refresh if the FE cookies were cleared for some reason\n                            if (tokenInfo === undefined) {\n                                (0, logger_1.logDebugMessage)(\"doesSessionExist: access token does not exist locally\");\n                                return [2 /*return*/, false];\n                            }\n                            if (!(tokenInfo.ate < Date.now())) return [3 /*break*/, 4];\n                            (0, logger_1.logDebugMessage)(\"doesSessionExist: access token expired. Refreshing session\");\n                            return [4 /*yield*/, (0, fetch_1.getLocalSessionState)(false)];\n                        case 2:\n                            preRequestLSS = _a.sent();\n                            return [4 /*yield*/, (0, fetch_1.onUnauthorisedResponse)(preRequestLSS)];\n                        case 3:\n                            refresh = _a.sent();\n                            return [2 /*return*/, refresh.result === \"RETRY\"];\n                        case 4:\n                            return [2 /*return*/, true];\n                    }\n                });\n            });\n        },\n        signOut: function (input) {\n            return __awaiter(this, void 0, void 0, function () {\n                var preAPIResult, resp, responseJson, message;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            (0, logger_1.logDebugMessage)(\"signOut: called\");\n                            return [4 /*yield*/, this.doesSessionExist(input)];\n                        case 1:\n                            if (!_a.sent()) {\n                                (0, logger_1.logDebugMessage)(\"signOut: exiting early because session does not exist\");\n                                (0, logger_1.logDebugMessage)(\"signOut: firing SIGN_OUT event\");\n                                recipeImplInput.onHandleEvent({\n                                    action: \"SIGN_OUT\",\n                                    userContext: input.userContext\n                                });\n                                return [2 /*return*/];\n                            }\n                            (0, logger_1.logDebugMessage)(\"signOut: Calling refresh pre API hook\");\n                            return [\n                                4 /*yield*/,\n                                recipeImplInput.preAPIHook({\n                                    action: \"SIGN_OUT\",\n                                    requestInit: {\n                                        method: \"post\",\n                                        headers: {\n                                            \"fdi-version\": version_1.supported_fdi.join(\",\"),\n                                            rid: fetch_1.default.rid\n                                        }\n                                    },\n                                    url: fetch_1.default.signOutUrl,\n                                    userContext: input.userContext\n                                })\n                            ];\n                        case 2:\n                            preAPIResult = _a.sent();\n                            (0, logger_1.logDebugMessage)(\"signOut: Calling API\");\n                            return [4 /*yield*/, fetch(preAPIResult.url, preAPIResult.requestInit)];\n                        case 3:\n                            resp = _a.sent();\n                            (0, logger_1.logDebugMessage)(\"signOut: API ended\");\n                            (0, logger_1.logDebugMessage)(\"signOut: API responded with status code: \" + resp.status);\n                            if (resp.status === recipeImplInput.sessionExpiredStatusCode) {\n                                // refresh must have already sent session expiry event\n                                return [2 /*return*/];\n                            }\n                            if (resp.status >= 300) {\n                                throw resp;\n                            }\n                            return [\n                                4 /*yield*/,\n                                recipeImplInput.postAPIHook({\n                                    action: \"SIGN_OUT\",\n                                    requestInit: preAPIResult.requestInit,\n                                    url: preAPIResult.url,\n                                    fetchResponse: resp.clone(),\n                                    userContext: input.userContext\n                                })\n                            ];\n                        case 4:\n                            _a.sent();\n                            return [4 /*yield*/, resp.clone().json()];\n                        case 5:\n                            responseJson = _a.sent();\n                            if (responseJson.status === \"GENERAL_ERROR\") {\n                                (0, logger_1.logDebugMessage)(\"doRequest: Throwing general error\");\n                                message =\n                                    responseJson.message === undefined\n                                        ? \"No Error Message Provided\"\n                                        : responseJson.message;\n                                throw new error_1.STGeneralError(message);\n                            }\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        },\n        getInvalidClaimsFromResponse: function (input) {\n            return __awaiter(this, void 0, void 0, function () {\n                var body;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (!(\"body\" in input.response)) return [3 /*break*/, 2];\n                            return [4 /*yield*/, input.response.clone().json()];\n                        case 1:\n                            body = _a.sent();\n                            return [3 /*break*/, 3];\n                        case 2:\n                            if (typeof input.response.data === \"string\") {\n                                body = JSON.parse(input.response.data);\n                            } else {\n                                body = input.response.data;\n                            }\n                            _a.label = 3;\n                        case 3:\n                            return [2 /*return*/, body.claimValidationErrors];\n                    }\n                });\n            });\n        },\n        getGlobalClaimValidators: function (input) {\n            return input.claimValidatorsAddedByOtherRecipes;\n        },\n        validateClaims: function (input) {\n            return __awaiter(this, void 0, void 0, function () {\n                var accessTokenPayload, _i, _a, validator, err_1, errors, _b, _c, validator, validationRes;\n                return __generator(this, function (_d) {\n                    switch (_d.label) {\n                        case 0:\n                            return [\n                                4 /*yield*/,\n                                this.getAccessTokenPayloadSecurely({ userContext: input.userContext })\n                            ];\n                        case 1:\n                            accessTokenPayload = _d.sent();\n                            (_i = 0), (_a = input.claimValidators);\n                            _d.label = 2;\n                        case 2:\n                            if (!(_i < _a.length)) return [3 /*break*/, 10];\n                            validator = _a[_i];\n                            return [4 /*yield*/, validator.shouldRefresh(accessTokenPayload, input.userContext)];\n                        case 3:\n                            if (!_d.sent()) return [3 /*break*/, 9];\n                            _d.label = 4;\n                        case 4:\n                            _d.trys.push([4, 6, , 7]);\n                            return [4 /*yield*/, validator.refresh(input.userContext)];\n                        case 5:\n                            _d.sent();\n                            return [3 /*break*/, 7];\n                        case 6:\n                            err_1 = _d.sent();\n                            console.error(\n                                \"Encountered an error while refreshing validator \".concat(validator.id),\n                                err_1\n                            );\n                            return [3 /*break*/, 7];\n                        case 7:\n                            return [\n                                4 /*yield*/,\n                                this.getAccessTokenPayloadSecurely({ userContext: input.userContext })\n                            ];\n                        case 8:\n                            accessTokenPayload = _d.sent();\n                            _d.label = 9;\n                        case 9:\n                            _i++;\n                            return [3 /*break*/, 2];\n                        case 10:\n                            errors = [];\n                            (_b = 0), (_c = input.claimValidators);\n                            _d.label = 11;\n                        case 11:\n                            if (!(_b < _c.length)) return [3 /*break*/, 14];\n                            validator = _c[_b];\n                            return [4 /*yield*/, validator.validate(accessTokenPayload, input.userContext)];\n                        case 12:\n                            validationRes = _d.sent();\n                            if (!validationRes.isValid) {\n                                errors.push({\n                                    validatorId: validator.id,\n                                    reason: validationRes.reason\n                                });\n                            }\n                            _d.label = 13;\n                        case 13:\n                            _b++;\n                            return [3 /*break*/, 11];\n                        case 14:\n                            return [2 /*return*/, errors];\n                    }\n                });\n            });\n        }\n    };\n}\nexports[\"default\"] = RecipeImplementation;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/recipeImplementation.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/types.js":
/*!*************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/types.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/* Copyright (c) 2020, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SessionClaimValidator = void 0;\nvar SessionClaimValidator = /** @class */ (function () {\n    function SessionClaimValidator(id) {\n        this.id = id;\n    }\n    return SessionClaimValidator;\n})();\nexports.SessionClaimValidator = SessionClaimValidator;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS9saWIvYnVpbGQvdHlwZXMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELDZCQUE2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS9saWIvYnVpbGQvdHlwZXMuanM/Yzc0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIENvcHlyaWdodCAoYykgMjAyMCwgVlJBSSBMYWJzIGFuZC9vciBpdHMgYWZmaWxpYXRlcy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvZnR3YXJlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpIGFzIHB1Ymxpc2hlZCBieSB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24uXG4gKlxuICogWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5XG4gKiBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVFxuICogV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlXG4gKiBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2Vzc2lvbkNsYWltVmFsaWRhdG9yID0gdm9pZCAwO1xudmFyIFNlc3Npb25DbGFpbVZhbGlkYXRvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTZXNzaW9uQ2xhaW1WYWxpZGF0b3IoaWQpIHtcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgIH1cbiAgICByZXR1cm4gU2Vzc2lvbkNsYWltVmFsaWRhdG9yO1xufSkoKTtcbmV4cG9ydHMuU2Vzc2lvbkNsYWltVmFsaWRhdG9yID0gU2Vzc2lvbkNsYWltVmFsaWRhdG9yO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/types.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/utils/cookieHandler/defaultImplementation.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/utils/cookieHandler/defaultImplementation.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter =\n    (this && this.__awaiter) ||\n    function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n            return value instanceof P\n                ? value\n                : new P(function (resolve) {\n                      resolve(value);\n                  });\n        }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n                try {\n                    step(generator.next(value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function rejected(value) {\n                try {\n                    step(generator[\"throw\"](value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function step(result) {\n                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\nvar __generator =\n    (this && this.__generator) ||\n    function (thisArg, body) {\n        var _ = {\n                label: 0,\n                sent: function () {\n                    if (t[0] & 1) throw t[1];\n                    return t[1];\n                },\n                trys: [],\n                ops: []\n            },\n            f,\n            y,\n            t,\n            g;\n        return (\n            (g = { next: verb(0), throw: verb(1), return: verb(2) }),\n            typeof Symbol === \"function\" &&\n                (g[Symbol.iterator] = function () {\n                    return this;\n                }),\n            g\n        );\n        function verb(n) {\n            return function (v) {\n                return step([n, v]);\n            };\n        }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (\n                        ((f = 1),\n                        y &&\n                            (t =\n                                op[0] & 2\n                                    ? y[\"return\"]\n                                    : op[0]\n                                    ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0)\n                                    : y.next) &&\n                            !(t = t.call(y, op[1])).done)\n                    )\n                        return t;\n                    if (((y = 0), t)) op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (\n                                !((t = _.trys), (t = t.length > 0 && t[t.length - 1])) &&\n                                (op[0] === 6 || op[0] === 2)\n                            ) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2]) _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                } catch (e) {\n                    op = [6, e];\n                    y = 0;\n                } finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5) throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.defaultCookieHandlerImplementation = void 0;\nvar windowHandler_1 = __webpack_require__(/*! ../windowHandler */ \"./node_modules/supertokens-website/lib/build/utils/windowHandler/index.js\");\nexports.defaultCookieHandlerImplementation = {\n    getCookie: function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [\n                    2 /*return*/,\n                    windowHandler_1.default.getReferenceOrThrow().windowHandler.getWindowUnsafe().document.cookie\n                ];\n            });\n        });\n    },\n    setCookie: function (cookieString) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                windowHandler_1.default.getReferenceOrThrow().windowHandler.getWindowUnsafe().document.cookie =\n                    cookieString;\n                return [2 /*return*/];\n            });\n        });\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/utils/cookieHandler/defaultImplementation.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/utils/cookieHandler/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/utils/cookieHandler/index.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CookieHandlerReference = void 0;\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar defaultImplementation_1 = __webpack_require__(/*! ./defaultImplementation */ \"./node_modules/supertokens-website/lib/build/utils/cookieHandler/defaultImplementation.js\");\nvar CookieHandlerReference = /** @class */ (function () {\n    function CookieHandlerReference(cookieHandlerInput) {\n        var cookieHandlerFunc = function (original) {\n            return original;\n        };\n        if (cookieHandlerInput !== undefined) {\n            cookieHandlerFunc = cookieHandlerInput;\n        }\n        this.cookieHandler = cookieHandlerFunc(defaultImplementation_1.defaultCookieHandlerImplementation);\n    }\n    CookieHandlerReference.init = function (cookieHandlerInput) {\n        if (CookieHandlerReference.instance !== undefined) {\n            return;\n        }\n        CookieHandlerReference.instance = new CookieHandlerReference(cookieHandlerInput);\n    };\n    CookieHandlerReference.getReferenceOrThrow = function () {\n        if (CookieHandlerReference.instance === undefined) {\n            throw new Error(\"SuperTokensCookieHandler must be initialized before calling this method.\");\n        }\n        return CookieHandlerReference.instance;\n    };\n    return CookieHandlerReference;\n})();\nexports.CookieHandlerReference = CookieHandlerReference;\nexports[\"default\"] = CookieHandlerReference;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS9saWIvYnVpbGQvdXRpbHMvY29va2llSGFuZGxlci9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixtQkFBTyxDQUFDLDBIQUF5QjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELDhCQUE4QjtBQUM5QixrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS9saWIvYnVpbGQvdXRpbHMvY29va2llSGFuZGxlci9pbmRleC5qcz9mNTMyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db29raWVIYW5kbGVyUmVmZXJlbmNlID0gdm9pZCAwO1xuLyogQ29weXJpZ2h0IChjKSAyMDIyLCBWUkFJIExhYnMgYW5kL29yIGl0cyBhZmZpbGlhdGVzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc29mdHdhcmUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIikgYXMgcHVibGlzaGVkIGJ5IHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbi5cbiAqXG4gKiBZb3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXlcbiAqIG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUXG4gKiBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGVcbiAqIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIGRlZmF1bHRJbXBsZW1lbnRhdGlvbl8xID0gcmVxdWlyZShcIi4vZGVmYXVsdEltcGxlbWVudGF0aW9uXCIpO1xudmFyIENvb2tpZUhhbmRsZXJSZWZlcmVuY2UgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ29va2llSGFuZGxlclJlZmVyZW5jZShjb29raWVIYW5kbGVySW5wdXQpIHtcbiAgICAgICAgdmFyIGNvb2tpZUhhbmRsZXJGdW5jID0gZnVuY3Rpb24gKG9yaWdpbmFsKSB7XG4gICAgICAgICAgICByZXR1cm4gb3JpZ2luYWw7XG4gICAgICAgIH07XG4gICAgICAgIGlmIChjb29raWVIYW5kbGVySW5wdXQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgY29va2llSGFuZGxlckZ1bmMgPSBjb29raWVIYW5kbGVySW5wdXQ7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jb29raWVIYW5kbGVyID0gY29va2llSGFuZGxlckZ1bmMoZGVmYXVsdEltcGxlbWVudGF0aW9uXzEuZGVmYXVsdENvb2tpZUhhbmRsZXJJbXBsZW1lbnRhdGlvbik7XG4gICAgfVxuICAgIENvb2tpZUhhbmRsZXJSZWZlcmVuY2UuaW5pdCA9IGZ1bmN0aW9uIChjb29raWVIYW5kbGVySW5wdXQpIHtcbiAgICAgICAgaWYgKENvb2tpZUhhbmRsZXJSZWZlcmVuY2UuaW5zdGFuY2UgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIENvb2tpZUhhbmRsZXJSZWZlcmVuY2UuaW5zdGFuY2UgPSBuZXcgQ29va2llSGFuZGxlclJlZmVyZW5jZShjb29raWVIYW5kbGVySW5wdXQpO1xuICAgIH07XG4gICAgQ29va2llSGFuZGxlclJlZmVyZW5jZS5nZXRSZWZlcmVuY2VPclRocm93ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoQ29va2llSGFuZGxlclJlZmVyZW5jZS5pbnN0YW5jZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJTdXBlclRva2Vuc0Nvb2tpZUhhbmRsZXIgbXVzdCBiZSBpbml0aWFsaXplZCBiZWZvcmUgY2FsbGluZyB0aGlzIG1ldGhvZC5cIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIENvb2tpZUhhbmRsZXJSZWZlcmVuY2UuaW5zdGFuY2U7XG4gICAgfTtcbiAgICByZXR1cm4gQ29va2llSGFuZGxlclJlZmVyZW5jZTtcbn0pKCk7XG5leHBvcnRzLkNvb2tpZUhhbmRsZXJSZWZlcmVuY2UgPSBDb29raWVIYW5kbGVyUmVmZXJlbmNlO1xuZXhwb3J0cy5kZWZhdWx0ID0gQ29va2llSGFuZGxlclJlZmVyZW5jZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/utils/cookieHandler/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/utils/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/utils/index.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/* Copyright (c) 2020, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar __assign =\n    (this && this.__assign) ||\n    function () {\n        __assign =\n            Object.assign ||\n            function (t) {\n                for (var s, i = 1, n = arguments.length; i < n; i++) {\n                    s = arguments[i];\n                    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n                }\n                return t;\n            };\n        return __assign.apply(this, arguments);\n    };\nvar __awaiter =\n    (this && this.__awaiter) ||\n    function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n            return value instanceof P\n                ? value\n                : new P(function (resolve) {\n                      resolve(value);\n                  });\n        }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n                try {\n                    step(generator.next(value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function rejected(value) {\n                try {\n                    step(generator[\"throw\"](value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function step(result) {\n                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\nvar __generator =\n    (this && this.__generator) ||\n    function (thisArg, body) {\n        var _ = {\n                label: 0,\n                sent: function () {\n                    if (t[0] & 1) throw t[1];\n                    return t[1];\n                },\n                trys: [],\n                ops: []\n            },\n            f,\n            y,\n            t,\n            g;\n        return (\n            (g = { next: verb(0), throw: verb(1), return: verb(2) }),\n            typeof Symbol === \"function\" &&\n                (g[Symbol.iterator] = function () {\n                    return this;\n                }),\n            g\n        );\n        function verb(n) {\n            return function (v) {\n                return step([n, v]);\n            };\n        }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (\n                        ((f = 1),\n                        y &&\n                            (t =\n                                op[0] & 2\n                                    ? y[\"return\"]\n                                    : op[0]\n                                    ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0)\n                                    : y.next) &&\n                            !(t = t.call(y, op[1])).done)\n                    )\n                        return t;\n                    if (((y = 0), t)) op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (\n                                !((t = _.trys), (t = t.length > 0 && t[t.length - 1])) &&\n                                (op[0] === 6 || op[0] === 2)\n                            ) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2]) _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                } catch (e) {\n                    op = [6, e];\n                    y = 0;\n                } finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5) throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getNormalisedUserContext =\n    exports.shouldDoInterceptionBasedOnUrl =\n    exports.validateAndNormaliseInputOrThrowError =\n    exports.normaliseSessionScopeOrThrowError =\n    exports.normaliseURLPathOrThrowError =\n    exports.normaliseURLDomainOrThrowError =\n        void 0;\nvar normalisedURLDomain_1 = __webpack_require__(/*! ../normalisedURLDomain */ \"./node_modules/supertokens-website/lib/build/normalisedURLDomain.js\");\nvar normalisedURLPath_1 = __webpack_require__(/*! ../normalisedURLPath */ \"./node_modules/supertokens-website/lib/build/normalisedURLPath.js\");\nvar windowHandler_1 = __webpack_require__(/*! ../utils/windowHandler */ \"./node_modules/supertokens-website/lib/build/utils/windowHandler/index.js\");\nvar logger_1 = __webpack_require__(/*! ../logger */ \"./node_modules/supertokens-website/lib/build/logger.js\");\nfunction normaliseURLDomainOrThrowError(input) {\n    var str = new normalisedURLDomain_1.default(input).getAsStringDangerous();\n    return str;\n}\nexports.normaliseURLDomainOrThrowError = normaliseURLDomainOrThrowError;\nfunction normaliseURLPathOrThrowError(input) {\n    return new normalisedURLPath_1.default(input).getAsStringDangerous();\n}\nexports.normaliseURLPathOrThrowError = normaliseURLPathOrThrowError;\nfunction normaliseSessionScopeOrThrowError(sessionTokenFrontendDomain) {\n    function helper(sessionTokenFrontendDomain) {\n        sessionTokenFrontendDomain = sessionTokenFrontendDomain.trim().toLowerCase();\n        // first we convert it to a URL so that we can use the URL class\n        if (sessionTokenFrontendDomain.startsWith(\".\")) {\n            sessionTokenFrontendDomain = sessionTokenFrontendDomain.substr(1);\n        }\n        if (!sessionTokenFrontendDomain.startsWith(\"http://\") && !sessionTokenFrontendDomain.startsWith(\"https://\")) {\n            sessionTokenFrontendDomain = \"http://\" + sessionTokenFrontendDomain;\n        }\n        try {\n            var urlObj = new URL(sessionTokenFrontendDomain);\n            sessionTokenFrontendDomain = urlObj.hostname;\n            // remove leading dot\n            if (sessionTokenFrontendDomain.startsWith(\".\")) {\n                sessionTokenFrontendDomain = sessionTokenFrontendDomain.substr(1);\n            }\n            return sessionTokenFrontendDomain;\n        } catch (err) {\n            throw new Error(\"Please provide a valid sessionTokenFrontendDomain\");\n        }\n    }\n    var noDotNormalised = helper(sessionTokenFrontendDomain);\n    if (noDotNormalised === \"localhost\" || (0, normalisedURLDomain_1.isAnIpAddress)(noDotNormalised)) {\n        return noDotNormalised;\n    }\n    if (sessionTokenFrontendDomain.startsWith(\".\")) {\n        return \".\" + noDotNormalised;\n    }\n    return noDotNormalised;\n}\nexports.normaliseSessionScopeOrThrowError = normaliseSessionScopeOrThrowError;\nfunction validateAndNormaliseInputOrThrowError(options) {\n    var _this = this;\n    var apiDomain = normaliseURLDomainOrThrowError(options.apiDomain);\n    var apiBasePath = normaliseURLPathOrThrowError(\"/auth\");\n    if (options.apiBasePath !== undefined) {\n        apiBasePath = normaliseURLPathOrThrowError(options.apiBasePath);\n    }\n    var defaultSessionScope = windowHandler_1.default.getReferenceOrThrow().windowHandler.location.getHostName();\n    // See https://github.com/supertokens/supertokens-website/issues/98\n    var sessionTokenFrontendDomain = normaliseSessionScopeOrThrowError(\n        options !== undefined && options.sessionTokenFrontendDomain !== undefined\n            ? options.sessionTokenFrontendDomain\n            : defaultSessionScope\n    );\n    var sessionExpiredStatusCode = 401;\n    if (options.sessionExpiredStatusCode !== undefined) {\n        sessionExpiredStatusCode = options.sessionExpiredStatusCode;\n    }\n    var invalidClaimStatusCode = 403;\n    if (options.invalidClaimStatusCode !== undefined) {\n        invalidClaimStatusCode = options.invalidClaimStatusCode;\n    }\n    if (sessionExpiredStatusCode === invalidClaimStatusCode) {\n        throw new Error(\"sessionExpiredStatusCode and invalidClaimStatusCode cannot be the same.\");\n    }\n    var autoAddCredentials = true;\n    if (options.autoAddCredentials !== undefined) {\n        autoAddCredentials = options.autoAddCredentials;\n    }\n    var isInIframe = false;\n    if (options.isInIframe !== undefined) {\n        isInIframe = options.isInIframe;\n    }\n    var sessionTokenBackendDomain = undefined;\n    if (options.sessionTokenBackendDomain !== undefined) {\n        sessionTokenBackendDomain = normaliseSessionScopeOrThrowError(options.sessionTokenBackendDomain);\n    }\n    var preAPIHook = function (context) {\n        return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, { url: context.url, requestInit: context.requestInit }];\n            });\n        });\n    };\n    if (options.preAPIHook !== undefined) {\n        preAPIHook = options.preAPIHook;\n    }\n    var postAPIHook = function () {\n        return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    if (options.postAPIHook !== undefined) {\n        postAPIHook = options.postAPIHook;\n    }\n    var onHandleEvent = function () {};\n    if (options.onHandleEvent !== undefined) {\n        onHandleEvent = options.onHandleEvent;\n    }\n    var override = __assign(\n        {\n            functions: function (oI) {\n                return oI;\n            }\n        },\n        options.override\n    );\n    if (options.enableDebugLogs !== undefined && options.enableDebugLogs) {\n        (0, logger_1.enableLogging)();\n    }\n    return {\n        apiDomain: apiDomain,\n        apiBasePath: apiBasePath,\n        sessionTokenFrontendDomain: sessionTokenFrontendDomain,\n        sessionExpiredStatusCode: sessionExpiredStatusCode,\n        invalidClaimStatusCode: invalidClaimStatusCode,\n        autoAddCredentials: autoAddCredentials,\n        isInIframe: isInIframe,\n        tokenTransferMethod: options.tokenTransferMethod !== undefined ? options.tokenTransferMethod : \"cookie\",\n        sessionTokenBackendDomain: sessionTokenBackendDomain,\n        preAPIHook: preAPIHook,\n        postAPIHook: postAPIHook,\n        onHandleEvent: onHandleEvent,\n        override: override\n    };\n}\nexports.validateAndNormaliseInputOrThrowError = validateAndNormaliseInputOrThrowError;\nfunction shouldDoInterceptionBasedOnUrl(toCheckUrl, apiDomain, sessionTokenBackendDomain) {\n    (0, logger_1.logDebugMessage)(\n        \"shouldDoInterceptionBasedOnUrl: toCheckUrl: \" +\n            toCheckUrl +\n            \" apiDomain: \" +\n            apiDomain +\n            \" sessionTokenBackendDomain: \" +\n            sessionTokenBackendDomain\n    );\n    function isNumeric(str) {\n        if (typeof str != \"string\") return false; // we only process strings!\n        return (\n            !isNaN(str) && !isNaN(parseFloat(str)) // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\n        ); // ...and ensure strings of whitespace fail\n    }\n    // The safest/best way to add this is the hash as the browser strips it before sending\n    // but we don't have a reason to limit checking to that part.\n    if (toCheckUrl.includes(\"superTokensDoNotDoInterception\")) {\n        return false;\n    }\n    toCheckUrl = normaliseURLDomainOrThrowError(toCheckUrl);\n    var urlObj = new URL(toCheckUrl);\n    var domain = urlObj.hostname;\n    if (sessionTokenBackendDomain === undefined) {\n        domain = urlObj.port === \"\" ? domain : domain + \":\" + urlObj.port;\n        apiDomain = normaliseURLDomainOrThrowError(apiDomain);\n        var apiUrlObj = new URL(apiDomain);\n        return domain === (apiUrlObj.port === \"\" ? apiUrlObj.hostname : apiUrlObj.hostname + \":\" + apiUrlObj.port);\n    } else {\n        var normalisedsessionDomain = normaliseSessionScopeOrThrowError(sessionTokenBackendDomain);\n        if (sessionTokenBackendDomain.split(\":\").length > 1) {\n            // means port may provided\n            var portStr = sessionTokenBackendDomain.split(\":\")[sessionTokenBackendDomain.split(\":\").length - 1];\n            if (isNumeric(portStr)) {\n                normalisedsessionDomain += \":\" + portStr;\n                domain = urlObj.port === \"\" ? domain : domain + \":\" + urlObj.port;\n            }\n        }\n        if (sessionTokenBackendDomain.startsWith(\".\")) {\n            return (\".\" + domain).endsWith(normalisedsessionDomain);\n        } else {\n            return domain === normalisedsessionDomain;\n        }\n    }\n}\nexports.shouldDoInterceptionBasedOnUrl = shouldDoInterceptionBasedOnUrl;\nfunction getNormalisedUserContext(userContext) {\n    if (userContext === undefined) {\n        return {};\n    }\n    return userContext;\n}\nexports.getNormalisedUserContext = getNormalisedUserContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/utils/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/utils/lockFactory/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/utils/lockFactory/index.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LockFactoryReference = void 0;\nvar browser_tabs_lock_1 = __webpack_require__(/*! browser-tabs-lock */ \"./node_modules/browser-tabs-lock/index.js\");\nvar defaultFactory = function (storageHandler) {\n    return function () {\n        return Promise.resolve(new browser_tabs_lock_1.default(storageHandler));\n    };\n};\nvar LockFactoryReference = /** @class */ (function () {\n    function LockFactoryReference(lockFactory) {\n        this.lockFactory = lockFactory;\n    }\n    LockFactoryReference.init = function (lockFactory, storageHandler) {\n        // This is copied from the other XXXReference clasess\n        if (this.instance !== undefined) {\n            return;\n        }\n        this.instance = new LockFactoryReference(\n            lockFactory !== null && lockFactory !== void 0 ? lockFactory : defaultFactory(storageHandler)\n        );\n    };\n    LockFactoryReference.getReferenceOrThrow = function () {\n        if (LockFactoryReference.instance === undefined) {\n            throw new Error(\"SuperTokensLockReference must be initialized before calling this method.\");\n        }\n        return LockFactoryReference.instance;\n    };\n    return LockFactoryReference;\n})();\nexports.LockFactoryReference = LockFactoryReference;\nexports[\"default\"] = LockFactoryReference;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS9saWIvYnVpbGQvdXRpbHMvbG9ja0ZhY3RvcnkvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCO0FBQzVCLDBCQUEwQixtQkFBTyxDQUFDLG9FQUFtQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCw0QkFBNEI7QUFDNUIsa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1cGVydG9rZW5zLXdlYnNpdGUvbGliL2J1aWxkL3V0aWxzL2xvY2tGYWN0b3J5L2luZGV4LmpzP2M0YzMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkxvY2tGYWN0b3J5UmVmZXJlbmNlID0gdm9pZCAwO1xudmFyIGJyb3dzZXJfdGFic19sb2NrXzEgPSByZXF1aXJlKFwiYnJvd3Nlci10YWJzLWxvY2tcIik7XG52YXIgZGVmYXVsdEZhY3RvcnkgPSBmdW5jdGlvbiAoc3RvcmFnZUhhbmRsZXIpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5ldyBicm93c2VyX3RhYnNfbG9ja18xLmRlZmF1bHQoc3RvcmFnZUhhbmRsZXIpKTtcbiAgICB9O1xufTtcbnZhciBMb2NrRmFjdG9yeVJlZmVyZW5jZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBMb2NrRmFjdG9yeVJlZmVyZW5jZShsb2NrRmFjdG9yeSkge1xuICAgICAgICB0aGlzLmxvY2tGYWN0b3J5ID0gbG9ja0ZhY3Rvcnk7XG4gICAgfVxuICAgIExvY2tGYWN0b3J5UmVmZXJlbmNlLmluaXQgPSBmdW5jdGlvbiAobG9ja0ZhY3RvcnksIHN0b3JhZ2VIYW5kbGVyKSB7XG4gICAgICAgIC8vIFRoaXMgaXMgY29waWVkIGZyb20gdGhlIG90aGVyIFhYWFJlZmVyZW5jZSBjbGFzZXNzXG4gICAgICAgIGlmICh0aGlzLmluc3RhbmNlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmluc3RhbmNlID0gbmV3IExvY2tGYWN0b3J5UmVmZXJlbmNlKFxuICAgICAgICAgICAgbG9ja0ZhY3RvcnkgIT09IG51bGwgJiYgbG9ja0ZhY3RvcnkgIT09IHZvaWQgMCA/IGxvY2tGYWN0b3J5IDogZGVmYXVsdEZhY3Rvcnkoc3RvcmFnZUhhbmRsZXIpXG4gICAgICAgICk7XG4gICAgfTtcbiAgICBMb2NrRmFjdG9yeVJlZmVyZW5jZS5nZXRSZWZlcmVuY2VPclRocm93ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoTG9ja0ZhY3RvcnlSZWZlcmVuY2UuaW5zdGFuY2UgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU3VwZXJUb2tlbnNMb2NrUmVmZXJlbmNlIG11c3QgYmUgaW5pdGlhbGl6ZWQgYmVmb3JlIGNhbGxpbmcgdGhpcyBtZXRob2QuXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBMb2NrRmFjdG9yeVJlZmVyZW5jZS5pbnN0YW5jZTtcbiAgICB9O1xuICAgIHJldHVybiBMb2NrRmFjdG9yeVJlZmVyZW5jZTtcbn0pKCk7XG5leHBvcnRzLkxvY2tGYWN0b3J5UmVmZXJlbmNlID0gTG9ja0ZhY3RvcnlSZWZlcmVuY2U7XG5leHBvcnRzLmRlZmF1bHQgPSBMb2NrRmFjdG9yeVJlZmVyZW5jZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/utils/lockFactory/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/utils/sessionClaimValidatorStore.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/utils/sessionClaimValidatorStore.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/* Copyright (c) 2020, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SessionClaimValidatorStore = void 0;\nvar SessionClaimValidatorStore = /** @class */ (function () {\n    function SessionClaimValidatorStore() {}\n    SessionClaimValidatorStore.claimValidatorsAddedByOtherRecipes = [];\n    SessionClaimValidatorStore.addClaimValidatorFromOtherRecipe = function (builder) {\n        SessionClaimValidatorStore.claimValidatorsAddedByOtherRecipes.push(builder);\n    };\n    SessionClaimValidatorStore.getClaimValidatorsAddedByOtherRecipes = function () {\n        return SessionClaimValidatorStore.claimValidatorsAddedByOtherRecipes;\n    };\n    return SessionClaimValidatorStore;\n})();\nexports.SessionClaimValidatorStore = SessionClaimValidatorStore;\nexports[\"default\"] = SessionClaimValidatorStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS9saWIvYnVpbGQvdXRpbHMvc2Vzc2lvbkNsYWltVmFsaWRhdG9yU3RvcmUuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxrQ0FBa0M7QUFDbEMsa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1cGVydG9rZW5zLXdlYnNpdGUvbGliL2J1aWxkL3V0aWxzL3Nlc3Npb25DbGFpbVZhbGlkYXRvclN0b3JlLmpzPzI4MDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiBDb3B5cmlnaHQgKGMpIDIwMjAsIFZSQUkgTGFicyBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb2Z0d2FyZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLlxuICpcbiAqIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heVxuICogb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdCBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVRcbiAqIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZVxuICogTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNlc3Npb25DbGFpbVZhbGlkYXRvclN0b3JlID0gdm9pZCAwO1xudmFyIFNlc3Npb25DbGFpbVZhbGlkYXRvclN0b3JlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFNlc3Npb25DbGFpbVZhbGlkYXRvclN0b3JlKCkge31cbiAgICBTZXNzaW9uQ2xhaW1WYWxpZGF0b3JTdG9yZS5jbGFpbVZhbGlkYXRvcnNBZGRlZEJ5T3RoZXJSZWNpcGVzID0gW107XG4gICAgU2Vzc2lvbkNsYWltVmFsaWRhdG9yU3RvcmUuYWRkQ2xhaW1WYWxpZGF0b3JGcm9tT3RoZXJSZWNpcGUgPSBmdW5jdGlvbiAoYnVpbGRlcikge1xuICAgICAgICBTZXNzaW9uQ2xhaW1WYWxpZGF0b3JTdG9yZS5jbGFpbVZhbGlkYXRvcnNBZGRlZEJ5T3RoZXJSZWNpcGVzLnB1c2goYnVpbGRlcik7XG4gICAgfTtcbiAgICBTZXNzaW9uQ2xhaW1WYWxpZGF0b3JTdG9yZS5nZXRDbGFpbVZhbGlkYXRvcnNBZGRlZEJ5T3RoZXJSZWNpcGVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gU2Vzc2lvbkNsYWltVmFsaWRhdG9yU3RvcmUuY2xhaW1WYWxpZGF0b3JzQWRkZWRCeU90aGVyUmVjaXBlcztcbiAgICB9O1xuICAgIHJldHVybiBTZXNzaW9uQ2xhaW1WYWxpZGF0b3JTdG9yZTtcbn0pKCk7XG5leHBvcnRzLlNlc3Npb25DbGFpbVZhbGlkYXRvclN0b3JlID0gU2Vzc2lvbkNsYWltVmFsaWRhdG9yU3RvcmU7XG5leHBvcnRzLmRlZmF1bHQgPSBTZXNzaW9uQ2xhaW1WYWxpZGF0b3JTdG9yZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/utils/sessionClaimValidatorStore.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/utils/windowHandler/defaultImplementation.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/utils/windowHandler/defaultImplementation.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter =\n    (this && this.__awaiter) ||\n    function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n            return value instanceof P\n                ? value\n                : new P(function (resolve) {\n                      resolve(value);\n                  });\n        }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n                try {\n                    step(generator.next(value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function rejected(value) {\n                try {\n                    step(generator[\"throw\"](value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function step(result) {\n                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\nvar __generator =\n    (this && this.__generator) ||\n    function (thisArg, body) {\n        var _ = {\n                label: 0,\n                sent: function () {\n                    if (t[0] & 1) throw t[1];\n                    return t[1];\n                },\n                trys: [],\n                ops: []\n            },\n            f,\n            y,\n            t,\n            g;\n        return (\n            (g = { next: verb(0), throw: verb(1), return: verb(2) }),\n            typeof Symbol === \"function\" &&\n                (g[Symbol.iterator] = function () {\n                    return this;\n                }),\n            g\n        );\n        function verb(n) {\n            return function (v) {\n                return step([n, v]);\n            };\n        }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (\n                        ((f = 1),\n                        y &&\n                            (t =\n                                op[0] & 2\n                                    ? y[\"return\"]\n                                    : op[0]\n                                    ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0)\n                                    : y.next) &&\n                            !(t = t.call(y, op[1])).done)\n                    )\n                        return t;\n                    if (((y = 0), t)) op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (\n                                !((t = _.trys), (t = t.length > 0 && t[t.length - 1])) &&\n                                (op[0] === 6 || op[0] === 2)\n                            ) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2]) _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                } catch (e) {\n                    op = [6, e];\n                    y = 0;\n                } finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5) throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.defaultWindowHandlerImplementation = void 0;\nfunction getWindowOrThrow() {\n    if (typeof window === \"undefined\") {\n        throw Error(\n            \"If you are using this package with server-side rendering, please make sure that you are checking if the window object is defined.\"\n        );\n    }\n    return window;\n}\nvar defaultLocalStorageHandler = {\n    key: function (index) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, getWindowOrThrow().localStorage.key(index)];\n            });\n        });\n    },\n    clear: function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, getWindowOrThrow().localStorage.clear()];\n            });\n        });\n    },\n    getItem: function (key) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, getWindowOrThrow().localStorage.getItem(key)];\n            });\n        });\n    },\n    removeItem: function (key) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, getWindowOrThrow().localStorage.removeItem(key)];\n            });\n        });\n    },\n    setItem: function (key, value) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, getWindowOrThrow().localStorage.setItem(key, value)];\n            });\n        });\n    },\n    keySync: function (index) {\n        return getWindowOrThrow().localStorage.key(index);\n    },\n    clearSync: function () {\n        return getWindowOrThrow().localStorage.clear();\n    },\n    getItemSync: function (key) {\n        return getWindowOrThrow().localStorage.getItem(key);\n    },\n    removeItemSync: function (key) {\n        return getWindowOrThrow().localStorage.removeItem(key);\n    },\n    setItemSync: function (key, value) {\n        return getWindowOrThrow().localStorage.setItem(key, value);\n    }\n};\nvar defaultSessionStorageHandler = {\n    key: function (index) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, getWindowOrThrow().sessionStorage.key(index)];\n            });\n        });\n    },\n    clear: function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, getWindowOrThrow().sessionStorage.clear()];\n            });\n        });\n    },\n    getItem: function (key) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, getWindowOrThrow().sessionStorage.getItem(key)];\n            });\n        });\n    },\n    removeItem: function (key) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, getWindowOrThrow().sessionStorage.removeItem(key)];\n            });\n        });\n    },\n    setItem: function (key, value) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, getWindowOrThrow().sessionStorage.setItem(key, value)];\n            });\n        });\n    },\n    keySync: function (index) {\n        return getWindowOrThrow().sessionStorage.key(index);\n    },\n    clearSync: function () {\n        return getWindowOrThrow().sessionStorage.clear();\n    },\n    getItemSync: function (key) {\n        return getWindowOrThrow().sessionStorage.getItem(key);\n    },\n    removeItemSync: function (key) {\n        return getWindowOrThrow().sessionStorage.removeItem(key);\n    },\n    setItemSync: function (key, value) {\n        return getWindowOrThrow().sessionStorage.setItem(key, value);\n    }\n};\nexports.defaultWindowHandlerImplementation = {\n    history: {\n        replaceState: function (data, unused, url) {\n            return getWindowOrThrow().history.replaceState(data, unused, url);\n        },\n        getState: function () {\n            return getWindowOrThrow().history.state;\n        }\n    },\n    location: {\n        getHref: function () {\n            return getWindowOrThrow().location.href;\n        },\n        setHref: function (href) {\n            getWindowOrThrow().location.href = href;\n        },\n        getSearch: function () {\n            return getWindowOrThrow().location.search;\n        },\n        getHash: function () {\n            return getWindowOrThrow().location.hash;\n        },\n        getPathName: function () {\n            return getWindowOrThrow().location.pathname;\n        },\n        assign: function (url) {\n            /**\n             * The type for assign accepts URL | string but when building\n             * it complains about only accepting a string. To prevent this\n             * we use any\n             */\n            getWindowOrThrow().location.assign(url);\n        },\n        getHostName: function () {\n            return getWindowOrThrow().location.hostname;\n        },\n        getHost: function () {\n            return getWindowOrThrow().location.host;\n        },\n        getOrigin: function () {\n            return getWindowOrThrow().location.origin;\n        }\n    },\n    getDocument: function () {\n        return getWindowOrThrow().document;\n    },\n    getWindowUnsafe: function () {\n        return getWindowOrThrow().window;\n    },\n    localStorage: defaultLocalStorageHandler,\n    sessionStorage: defaultSessionStorageHandler\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/utils/windowHandler/defaultImplementation.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/utils/windowHandler/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/utils/windowHandler/index.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WindowHandlerReference = void 0;\n/* Copyright (c) 2022, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar defaultImplementation_1 = __webpack_require__(/*! ./defaultImplementation */ \"./node_modules/supertokens-website/lib/build/utils/windowHandler/defaultImplementation.js\");\nvar WindowHandlerReference = /** @class */ (function () {\n    function WindowHandlerReference(windowHandlerInput) {\n        var windowHandlerFunc = function (original) {\n            return original;\n        };\n        if (windowHandlerInput !== undefined) {\n            windowHandlerFunc = windowHandlerInput;\n        }\n        this.windowHandler = windowHandlerFunc(defaultImplementation_1.defaultWindowHandlerImplementation);\n    }\n    WindowHandlerReference.init = function (windowHandlerInput) {\n        if (WindowHandlerReference.instance !== undefined) {\n            return;\n        }\n        WindowHandlerReference.instance = new WindowHandlerReference(windowHandlerInput);\n    };\n    WindowHandlerReference.getReferenceOrThrow = function () {\n        if (WindowHandlerReference.instance === undefined) {\n            throw new Error(\"SuperTokensWindowHandler must be initialized before calling this method.\");\n        }\n        return WindowHandlerReference.instance;\n    };\n    return WindowHandlerReference;\n})();\nexports.WindowHandlerReference = WindowHandlerReference;\nexports[\"default\"] = WindowHandlerReference;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS9saWIvYnVpbGQvdXRpbHMvd2luZG93SGFuZGxlci9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixtQkFBTyxDQUFDLDBIQUF5QjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELDhCQUE4QjtBQUM5QixrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS9saWIvYnVpbGQvdXRpbHMvd2luZG93SGFuZGxlci9pbmRleC5qcz82YTM5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5XaW5kb3dIYW5kbGVyUmVmZXJlbmNlID0gdm9pZCAwO1xuLyogQ29weXJpZ2h0IChjKSAyMDIyLCBWUkFJIExhYnMgYW5kL29yIGl0cyBhZmZpbGlhdGVzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc29mdHdhcmUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIikgYXMgcHVibGlzaGVkIGJ5IHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbi5cbiAqXG4gKiBZb3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXlcbiAqIG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUXG4gKiBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGVcbiAqIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIGRlZmF1bHRJbXBsZW1lbnRhdGlvbl8xID0gcmVxdWlyZShcIi4vZGVmYXVsdEltcGxlbWVudGF0aW9uXCIpO1xudmFyIFdpbmRvd0hhbmRsZXJSZWZlcmVuY2UgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gV2luZG93SGFuZGxlclJlZmVyZW5jZSh3aW5kb3dIYW5kbGVySW5wdXQpIHtcbiAgICAgICAgdmFyIHdpbmRvd0hhbmRsZXJGdW5jID0gZnVuY3Rpb24gKG9yaWdpbmFsKSB7XG4gICAgICAgICAgICByZXR1cm4gb3JpZ2luYWw7XG4gICAgICAgIH07XG4gICAgICAgIGlmICh3aW5kb3dIYW5kbGVySW5wdXQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgd2luZG93SGFuZGxlckZ1bmMgPSB3aW5kb3dIYW5kbGVySW5wdXQ7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy53aW5kb3dIYW5kbGVyID0gd2luZG93SGFuZGxlckZ1bmMoZGVmYXVsdEltcGxlbWVudGF0aW9uXzEuZGVmYXVsdFdpbmRvd0hhbmRsZXJJbXBsZW1lbnRhdGlvbik7XG4gICAgfVxuICAgIFdpbmRvd0hhbmRsZXJSZWZlcmVuY2UuaW5pdCA9IGZ1bmN0aW9uICh3aW5kb3dIYW5kbGVySW5wdXQpIHtcbiAgICAgICAgaWYgKFdpbmRvd0hhbmRsZXJSZWZlcmVuY2UuaW5zdGFuY2UgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIFdpbmRvd0hhbmRsZXJSZWZlcmVuY2UuaW5zdGFuY2UgPSBuZXcgV2luZG93SGFuZGxlclJlZmVyZW5jZSh3aW5kb3dIYW5kbGVySW5wdXQpO1xuICAgIH07XG4gICAgV2luZG93SGFuZGxlclJlZmVyZW5jZS5nZXRSZWZlcmVuY2VPclRocm93ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoV2luZG93SGFuZGxlclJlZmVyZW5jZS5pbnN0YW5jZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJTdXBlclRva2Vuc1dpbmRvd0hhbmRsZXIgbXVzdCBiZSBpbml0aWFsaXplZCBiZWZvcmUgY2FsbGluZyB0aGlzIG1ldGhvZC5cIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFdpbmRvd0hhbmRsZXJSZWZlcmVuY2UuaW5zdGFuY2U7XG4gICAgfTtcbiAgICByZXR1cm4gV2luZG93SGFuZGxlclJlZmVyZW5jZTtcbn0pKCk7XG5leHBvcnRzLldpbmRvd0hhbmRsZXJSZWZlcmVuY2UgPSBXaW5kb3dIYW5kbGVyUmVmZXJlbmNlO1xuZXhwb3J0cy5kZWZhdWx0ID0gV2luZG93SGFuZGxlclJlZmVyZW5jZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/utils/windowHandler/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/version.js":
/*!***************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/version.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.supported_fdi = exports.package_version = void 0;\n/* Copyright (c) 2020, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nexports.package_version = \"16.0.9\";\nexports.supported_fdi = [\"1.16\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS9saWIvYnVpbGQvdmVyc2lvbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsR0FBRyx1QkFBdUI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QixxQkFBcUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3N1cGVydG9rZW5zLXdlYnNpdGUvbGliL2J1aWxkL3ZlcnNpb24uanM/MGU4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc3VwcG9ydGVkX2ZkaSA9IGV4cG9ydHMucGFja2FnZV92ZXJzaW9uID0gdm9pZCAwO1xuLyogQ29weXJpZ2h0IChjKSAyMDIwLCBWUkFJIExhYnMgYW5kL29yIGl0cyBhZmZpbGlhdGVzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc29mdHdhcmUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIikgYXMgcHVibGlzaGVkIGJ5IHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbi5cbiAqXG4gKiBZb3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXlcbiAqIG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUXG4gKiBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGVcbiAqIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuZXhwb3J0cy5wYWNrYWdlX3ZlcnNpb24gPSBcIjE2LjAuOVwiO1xuZXhwb3J0cy5zdXBwb3J0ZWRfZmRpID0gW1wiMS4xNlwiXTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/version.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/lib/build/xmlhttprequest.js":
/*!**********************************************************************!*\
  !*** ./node_modules/supertokens-website/lib/build/xmlhttprequest.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/* Copyright (c) 2020, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\nvar __awaiter =\n    (this && this.__awaiter) ||\n    function (thisArg, _arguments, P, generator) {\n        function adopt(value) {\n            return value instanceof P\n                ? value\n                : new P(function (resolve) {\n                      resolve(value);\n                  });\n        }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n                try {\n                    step(generator.next(value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function rejected(value) {\n                try {\n                    step(generator[\"throw\"](value));\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            function step(result) {\n                result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\nvar __generator =\n    (this && this.__generator) ||\n    function (thisArg, body) {\n        var _ = {\n                label: 0,\n                sent: function () {\n                    if (t[0] & 1) throw t[1];\n                    return t[1];\n                },\n                trys: [],\n                ops: []\n            },\n            f,\n            y,\n            t,\n            g;\n        return (\n            (g = { next: verb(0), throw: verb(1), return: verb(2) }),\n            typeof Symbol === \"function\" &&\n                (g[Symbol.iterator] = function () {\n                    return this;\n                }),\n            g\n        );\n        function verb(n) {\n            return function (v) {\n                return step([n, v]);\n            };\n        }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (\n                        ((f = 1),\n                        y &&\n                            (t =\n                                op[0] & 2\n                                    ? y[\"return\"]\n                                    : op[0]\n                                    ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0)\n                                    : y.next) &&\n                            !(t = t.call(y, op[1])).done)\n                    )\n                        return t;\n                    if (((y = 0), t)) op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (\n                                !((t = _.trys), (t = t.length > 0 && t[t.length - 1])) &&\n                                (op[0] === 6 || op[0] === 2)\n                            ) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2]) _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                } catch (e) {\n                    op = [6, e];\n                    y = 0;\n                } finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5) throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.addInterceptorsToXMLHttpRequest = void 0;\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/supertokens-website/lib/build/utils/index.js\");\nvar fetch_1 = __webpack_require__(/*! ./fetch */ \"./node_modules/supertokens-website/lib/build/fetch.js\");\nvar logger_1 = __webpack_require__(/*! ./logger */ \"./node_modules/supertokens-website/lib/build/logger.js\");\nvar windowHandler_1 = __webpack_require__(/*! ./utils/windowHandler */ \"./node_modules/supertokens-website/lib/build/utils/windowHandler/index.js\");\nvar processState_1 = __webpack_require__(/*! ./processState */ \"./node_modules/supertokens-website/lib/build/processState.js\");\nvar XHR_EVENTS = [\"readystatechange\", \"abort\", \"error\", \"load\", \"loadend\", \"loadstart\", \"progress\", \"timeout\"];\nfunction addInterceptorsToXMLHttpRequest() {\n    var firstEventLoopDone = new Promise(function (res) {\n        return setTimeout(res, 0);\n    });\n    var oldXMLHttpRequest = XMLHttpRequest;\n    (0, logger_1.logDebugMessage)(\"addInterceptorsToXMLHttpRequest called\");\n    // create XMLHttpRequest proxy object\n    // define constructor for my proxy object\n    XMLHttpRequest = function () {\n        var actual = new oldXMLHttpRequest();\n        var delayedQueue = firstEventLoopDone;\n        function delayIfNecessary(cb) {\n            delayedQueue = delayedQueue.finally(function () {\n                var _a;\n                return (_a = cb()) === null || _a === void 0 ? void 0 : _a.catch(console.error);\n            });\n        }\n        var self = this;\n        var listOfFunctionCallsInProxy = [];\n        var requestHeaders = [];\n        var customGetterValues = {};\n        var customResponseHeaders;\n        var eventHandlers = new Map();\n        // We define these during open\n        // let method: string = \"\";\n        var url = \"\";\n        var doNotDoInterception = false;\n        var preRequestLSS = undefined;\n        var body;\n        // we do not provide onerror cause that is fired only on\n        // network level failures and nothing else. If a status code is > 400,\n        // then onload and onreadystatechange are called.\n        // Setting up props (event handlers) that we use in event handlers\n        // These require processing the response (and possibly retrying) before they are forwarded to the user\n        self.onload = null;\n        self.onreadystatechange = null;\n        self.onloadend = null;\n        // TODO: add support for other event listener options\n        // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#parameters\n        self.addEventListener = function (type, listener, _options) {\n            var handlers = eventHandlers.get(type);\n            if (handlers === undefined) {\n                handlers = new Set();\n                eventHandlers.set(type, handlers);\n            }\n            handlers.add(listener);\n        };\n        self.removeEventListener = function (type, listener) {\n            var handlers = eventHandlers.get(type);\n            if (handlers === undefined) {\n                handlers = new Set();\n                eventHandlers.set(type, handlers);\n            }\n            handlers.delete(listener);\n        };\n        function redispatchEvent(name, ev) {\n            var handlers = eventHandlers.get(name);\n            (0, logger_1.logDebugMessage)(\n                \"XHRInterceptor dispatching \".concat(ev.type, \" to \").concat(handlers ? handlers.size : 0, \" listeners\")\n            );\n            if (handlers) {\n                Array.from(handlers).forEach(function (handler) {\n                    return handler.apply(self, [ev]);\n                });\n            }\n        }\n        function handleRetryPostRefreshing() {\n            return __awaiter(this, void 0, void 0, function () {\n                var refreshResult, retryXhr;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (preRequestLSS === undefined) {\n                                throw new Error(\"Should never come here..\");\n                            }\n                            (0,\n                            logger_1.logDebugMessage)(\"XHRInterceptor.handleRetryPostRefreshing: preRequestLSS \" + preRequestLSS.status);\n                            return [4 /*yield*/, (0, fetch_1.onUnauthorisedResponse)(preRequestLSS)];\n                        case 1:\n                            refreshResult = _a.sent();\n                            if (refreshResult.result !== \"RETRY\") {\n                                (0, logger_1.logDebugMessage)(\n                                    \"XHRInterceptor.handleRetryPostRefreshing: Not retrying original request \" +\n                                        !!refreshResult.error\n                                );\n                                if (refreshResult.error !== undefined) {\n                                    // this will cause the responseText of the self to be updated\n                                    // to the error message and make the status code the same as\n                                    // what the error's status code is.\n                                    throw refreshResult.error;\n                                }\n                                // it can come here if refreshResult.result is SESSION_EXPIRED.\n                                // in that case, the status of self is already 401. So we let it\n                                // pass through.\n                                return [2 /*return*/, true];\n                            }\n                            (0,\n                            logger_1.logDebugMessage)(\"XHRInterceptor.handleRetryPostRefreshing: Retrying original request\");\n                            retryXhr = new oldXMLHttpRequest();\n                            setUpXHR(self, retryXhr, true);\n                            // this also calls the send function with the appropriate body\n                            listOfFunctionCallsInProxy.forEach(function (i) {\n                                i(retryXhr);\n                            });\n                            sendXHR(retryXhr, body);\n                            return [2 /*return*/, false];\n                    }\n                });\n            });\n        }\n        function handleResponse(xhr) {\n            return __awaiter(this, void 0, void 0, function () {\n                var status_1, headers, err_1, resp;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (doNotDoInterception) {\n                                (0, logger_1.logDebugMessage)(\n                                    \"XHRInterceptor.handleResponse: Returning without interception\"\n                                );\n                                return [2 /*return*/, true];\n                            }\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 14, , 18]);\n                            _a.label = 2;\n                        case 2:\n                            _a.trys.push([2, , 8, 13]);\n                            (0, logger_1.logDebugMessage)(\"XHRInterceptor.handleResponse: Interception started\");\n                            processState_1.ProcessState.getInstance().addState(\n                                processState_1.PROCESS_STATE.CALLING_INTERCEPTION_RESPONSE\n                            );\n                            status_1 = xhr.status;\n                            headers = getResponseHeadersFromXHR(xhr);\n                            return [4 /*yield*/, saveTokensFromHeaders(headers)];\n                        case 3:\n                            _a.sent();\n                            (0,\n                            fetch_1.fireSessionUpdateEventsIfNecessary)(preRequestLSS.status === \"EXISTS\", status_1, headers.get(\"front-token\"));\n                            if (!(status_1 === fetch_1.default.config.sessionExpiredStatusCode))\n                                return [3 /*break*/, 5];\n                            (0, logger_1.logDebugMessage)(\"responseInterceptor: Status code is: \" + status_1);\n                            return [4 /*yield*/, handleRetryPostRefreshing()];\n                        case 4:\n                            return [2 /*return*/, _a.sent()];\n                        case 5:\n                            if (!(status_1 === fetch_1.default.config.invalidClaimStatusCode)) return [3 /*break*/, 7];\n                            return [\n                                4 /*yield*/,\n                                (0, fetch_1.onInvalidClaimResponse)({\n                                    data: JSON.parse(xhr.responseText)\n                                })\n                            ];\n                        case 6:\n                            _a.sent();\n                            _a.label = 7;\n                        case 7:\n                            return [2 /*return*/, true];\n                        case 8:\n                            (0, logger_1.logDebugMessage)(\"XHRInterceptor.handleResponse: doFinallyCheck running\");\n                            return [4 /*yield*/, (0, fetch_1.getLocalSessionState)(false)];\n                        case 9:\n                            if (!!(_a.sent().status === \"EXISTS\")) return [3 /*break*/, 12];\n                            (0,\n                            logger_1.logDebugMessage)(\"XHRInterceptor.handleResponse: local session doesn't exist, so removing anti-csrf and sFrontToken\");\n                            return [4 /*yield*/, fetch_1.AntiCsrfToken.removeToken()];\n                        case 10:\n                            _a.sent();\n                            return [4 /*yield*/, fetch_1.FrontToken.removeToken()];\n                        case 11:\n                            _a.sent();\n                            _a.label = 12;\n                        case 12:\n                            return [7 /*endfinally*/];\n                        case 13:\n                            return [3 /*break*/, 18];\n                        case 14:\n                            err_1 = _a.sent();\n                            (0, logger_1.logDebugMessage)(\"XHRInterceptor.handleResponse: caught error\");\n                            if (!(err_1.status !== undefined)) return [3 /*break*/, 16];\n                            return [4 /*yield*/, getXMLHttpStatusAndResponseTextFromFetchResponse(err_1)];\n                        case 15:\n                            resp = _a.sent();\n                            customGetterValues[\"status\"] = resp.status;\n                            customGetterValues[\"statusText\"] = resp.statusText;\n                            customGetterValues[\"responseType\"] = resp.responseType;\n                            customResponseHeaders = resp.headers;\n                            if (resp.responseType === \"json\") {\n                                try {\n                                    customGetterValues[\"response\"] = JSON.parse(resp.responseText);\n                                } catch (_b) {\n                                    customGetterValues[\"response\"] = resp.responseText;\n                                }\n                            } else {\n                                customGetterValues[\"response\"] = resp.responseText;\n                            }\n                            customGetterValues[\"responseText\"] = resp.responseText;\n                            return [3 /*break*/, 17];\n                        case 16:\n                            // Here we only need to handle fetch related errors, from the refresh endpoint called by the retry\n                            // So we should only get network level errors here\n                            redispatchEvent(\"error\", new Event(\"error\"));\n                            _a.label = 17;\n                        case 17:\n                            return [2 /*return*/, true];\n                        case 18:\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        }\n        self.open = function (_, u) {\n            (0, logger_1.logDebugMessage)(\"XHRInterceptor.open called\");\n            var args = arguments;\n            // method = m;\n            url = u;\n            try {\n                doNotDoInterception =\n                    (typeof url === \"string\" &&\n                        !(0, utils_1.shouldDoInterceptionBasedOnUrl)(\n                            url,\n                            fetch_1.default.config.apiDomain,\n                            fetch_1.default.config.sessionTokenBackendDomain\n                        )) ||\n                    (typeof url !== \"string\" &&\n                        !(0, utils_1.shouldDoInterceptionBasedOnUrl)(\n                            url.toString(),\n                            fetch_1.default.config.apiDomain,\n                            fetch_1.default.config.sessionTokenBackendDomain\n                        ));\n            } catch (err) {\n                if (err.message === \"Please provide a valid domain name\") {\n                    (0, logger_1.logDebugMessage)(\n                        \"XHRInterceptor.open: Trying shouldDoInterceptionBasedOnUrl with location.origin\"\n                    );\n                    // .origin gives the port as well..\n                    doNotDoInterception = !(0, utils_1.shouldDoInterceptionBasedOnUrl)(\n                        windowHandler_1.default.getReferenceOrThrow().windowHandler.location.getOrigin(),\n                        fetch_1.default.config.apiDomain,\n                        fetch_1.default.config.sessionTokenBackendDomain\n                    );\n                } else {\n                    throw err;\n                }\n            }\n            delayIfNecessary(function () {\n                listOfFunctionCallsInProxy.push(function (xhr) {\n                    xhr.open.apply(xhr, args);\n                });\n                // here we use the apply syntax cause there are other optional args that\n                // can be passed by the user.\n                actual.open.apply(actual, args);\n            });\n        };\n        self.send = function (inputBody) {\n            body = inputBody;\n            sendXHR(actual, body);\n        };\n        self.setRequestHeader = function (name, value) {\n            var _this = this;\n            (0, logger_1.logDebugMessage)(\"XHRInterceptor.setRequestHeader: Called with \".concat(name));\n            if (doNotDoInterception) {\n                delayIfNecessary(function () {\n                    return actual.setRequestHeader(name, value);\n                });\n                return;\n            }\n            // We need to do this, because if there is another interceptor wrapping this (e.g.: the axios interceptor)\n            // then the anti-csrf token they add would be concatenated to the anti-csrf token added by this interceptor\n            if (name === \"anti-csrf\") {\n                return;\n            }\n            delayIfNecessary(function () {\n                return __awaiter(_this, void 0, void 0, function () {\n                    var accessToken;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                if (!(name.toLowerCase() === \"authorization\")) return [3 /*break*/, 2];\n                                (0,\n                                logger_1.logDebugMessage)(\"XHRInterceptor.setRequestHeader: checking if user provided auth header matches local token\");\n                                return [4 /*yield*/, (0, fetch_1.getTokenForHeaderAuth)(\"access\")];\n                            case 1:\n                                accessToken = _a.sent();\n                                if (value === \"Bearer \".concat(accessToken)) {\n                                    // We are ignoring the Authorization header set by the user in this case, because it would cause issues\n                                    // If we do not ignore this, then this header would be used even if the request is being retried after a refresh, even though it contains an outdated access token.\n                                    // This causes an infinite refresh loop.\n                                    (0, logger_1.logDebugMessage)(\n                                        \"XHRInterceptor.setRequestHeader: skipping Authorization from user provided headers because it contains our access token\"\n                                    );\n                                    return [2 /*return*/];\n                                }\n                                _a.label = 2;\n                            case 2:\n                                listOfFunctionCallsInProxy.push(function (xhr) {\n                                    xhr.setRequestHeader(name, value);\n                                });\n                                // The original version \"combines\" headers according to MDN.\n                                requestHeaders.push({ name: name, value: value });\n                                actual.setRequestHeader(name, value);\n                                return [2 /*return*/];\n                        }\n                    });\n                });\n            });\n        };\n        var copiedProps = undefined;\n        setUpXHR(self, actual, false);\n        function setUpXHR(self, xhr, isRetry) {\n            var responseProcessed;\n            var delayedEvents = [\"load\", \"loadend\", \"readystatechange\"];\n            (0, logger_1.logDebugMessage)(\"XHRInterceptor.setUpXHR called\");\n            var _loop_1 = function (name_1) {\n                (0, logger_1.logDebugMessage)(\"XHRInterceptor added listener for event \".concat(name_1));\n                xhr.addEventListener(name_1, function (ev) {\n                    (0, logger_1.logDebugMessage)(\"XHRInterceptor got event \".concat(name_1));\n                    if (!delayedEvents.includes(name_1)) {\n                        redispatchEvent(name_1, ev);\n                    }\n                });\n            };\n            for (var _i = 0, XHR_EVENTS_1 = XHR_EVENTS; _i < XHR_EVENTS_1.length; _i++) {\n                var name_1 = XHR_EVENTS_1[_i];\n                _loop_1(name_1);\n            }\n            xhr.onload = function (ev) {\n                if (responseProcessed === undefined) {\n                    responseProcessed = handleResponse(xhr);\n                }\n                responseProcessed.then(function (callself) {\n                    if (!callself) {\n                        return;\n                    }\n                    if (self.onload) {\n                        self.onload(ev);\n                    }\n                    redispatchEvent(\"load\", ev);\n                });\n            };\n            xhr.onreadystatechange = function (ev) {\n                // In local files, status is 0 upon success in Mozilla Firefox\n                if (xhr.readyState === oldXMLHttpRequest.DONE) {\n                    if (responseProcessed === undefined) {\n                        responseProcessed = handleResponse(xhr);\n                    }\n                    responseProcessed.then(function (callself) {\n                        if (!callself) {\n                            return;\n                        }\n                        if (self.onreadystatechange) self.onreadystatechange(ev);\n                        redispatchEvent(\"readystatechange\", ev);\n                    });\n                } else {\n                    if (self.onreadystatechange) {\n                        self.onreadystatechange(ev);\n                    }\n                    redispatchEvent(\"readystatechange\", ev);\n                }\n            };\n            xhr.onloadend = function (ev) {\n                if (responseProcessed === undefined) {\n                    responseProcessed = handleResponse(xhr);\n                }\n                responseProcessed.then(function (callself) {\n                    if (!callself) {\n                        return;\n                    }\n                    if (self.onloadend) {\n                        self.onloadend(ev);\n                    }\n                    redispatchEvent(\"loadend\", ev);\n                });\n            };\n            self.getAllResponseHeaders = function () {\n                var headersString;\n                if (customResponseHeaders) {\n                    headersString = \"\";\n                    customResponseHeaders.forEach(function (v, k) {\n                        return (headersString += \"\".concat(k, \": \").concat(v, \"\\r\\n\"));\n                    });\n                } else {\n                    headersString = xhr.getAllResponseHeaders();\n                }\n                // We use this \"fake-header\" to signal other interceptors (axios) that this is done\n                // in case both is applied\n                return headersString + \"x-supertokens-xhr-intercepted: true\\r\\n\";\n            };\n            self.getResponseHeader = function (name) {\n                if (name === \"x-supertokens-xhr-intercepted\") {\n                    return \"true\";\n                }\n                if (customResponseHeaders) {\n                    return customResponseHeaders.get(name);\n                }\n                return xhr.getResponseHeader(name);\n            };\n            if (copiedProps === undefined) {\n                copiedProps = [];\n                // iterate all properties in actual to proxy them according to their type\n                // For functions, we call actual and return the result\n                // For non-functions, we make getters/setters\n                // If the property already exists on self, then don't proxy it\n                for (var prop in xhr) {\n                    // skip properties we already have - this will skip both the above defined properties\n                    // that we don't want to proxy and skip properties on the prototype belonging to Object\n                    if (!(prop in self)) {\n                        // We save these props into an array - in case we need to set up a retry XHR\n                        copiedProps.push(prop);\n                    }\n                }\n            }\n            var _loop_2 = function (prop) {\n                if (typeof xhr[prop] === \"function\") {\n                    // define our own property that calls the same method on the actual\n                    Object.defineProperty(self, prop, {\n                        configurable: true,\n                        value: function () {\n                            var args = arguments;\n                            if (!isRetry) {\n                                listOfFunctionCallsInProxy.push(function (xhr) {\n                                    xhr[prop].apply(xhr, args);\n                                });\n                            }\n                            return xhr[prop].apply(xhr, args);\n                        }\n                    });\n                } else {\n                    // define our own property that just gets or sets the same prop on the actual\n                    Object.defineProperty(self, prop, {\n                        configurable: true,\n                        get: function () {\n                            if (customGetterValues[prop] !== undefined) {\n                                return customGetterValues[prop];\n                            }\n                            return xhr[prop];\n                        },\n                        set: function (val) {\n                            if (!isRetry) {\n                                listOfFunctionCallsInProxy.push(function (xhr) {\n                                    xhr[prop] = val;\n                                });\n                            }\n                            (0, logger_1.logDebugMessage)(\"XHRInterceptor.set[\".concat(prop, \"] = \").concat(val));\n                            xhr[prop] = val;\n                        }\n                    });\n                }\n            };\n            for (var _a = 0, copiedProps_1 = copiedProps; _a < copiedProps_1.length; _a++) {\n                var prop = copiedProps_1[_a];\n                _loop_2(prop);\n            }\n        }\n        function sendXHR(xhr, body) {\n            var _this = this;\n            (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: called\");\n            (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: Value of doNotDoInterception: \" + doNotDoInterception);\n            if (doNotDoInterception) {\n                (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: Returning without interception\");\n                delayIfNecessary(function () {\n                    return xhr.send(body);\n                });\n                return;\n            }\n            (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: Interception started\");\n            processState_1.ProcessState.getInstance().addState(\n                processState_1.PROCESS_STATE.CALLING_INTERCEPTION_REQUEST\n            );\n            delayIfNecessary(function () {\n                return __awaiter(_this, void 0, void 0, function () {\n                    var antiCsrfToken, transferMethod;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                return [4 /*yield*/, (0, fetch_1.getLocalSessionState)(true)];\n                            case 1:\n                                preRequestLSS = _a.sent();\n                                if (!(preRequestLSS.status === \"EXISTS\")) return [3 /*break*/, 3];\n                                return [\n                                    4 /*yield*/,\n                                    fetch_1.AntiCsrfToken.getToken(preRequestLSS.lastAccessTokenUpdate)\n                                ];\n                            case 2:\n                                antiCsrfToken = _a.sent();\n                                if (antiCsrfToken !== undefined) {\n                                    (0, logger_1.logDebugMessage)(\n                                        \"XHRInterceptor.send: Adding anti-csrf token to request\"\n                                    );\n                                    xhr.setRequestHeader(\"anti-csrf\", antiCsrfToken);\n                                }\n                                _a.label = 3;\n                            case 3:\n                                if (fetch_1.default.config.autoAddCredentials) {\n                                    (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: Adding credentials include\");\n                                    self.withCredentials = true;\n                                }\n                                if (\n                                    !requestHeaders.some(function (i) {\n                                        return i.name === \"rid\";\n                                    })\n                                ) {\n                                    (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: Adding rid header: anti-csrf\");\n                                    xhr.setRequestHeader(\"rid\", \"anti-csrf\");\n                                } else {\n                                    (0, logger_1.logDebugMessage)(\n                                        \"XHRInterceptor.send: rid header was already there in request\"\n                                    );\n                                }\n                                transferMethod = fetch_1.default.config.tokenTransferMethod;\n                                if (\n                                    !requestHeaders.some(function (i) {\n                                        return i.name === \"st-auth-mode\";\n                                    })\n                                ) {\n                                    (0, logger_1.logDebugMessage)(\n                                        \"XHRInterceptor.send: Adding st-auth-mode header: \" + transferMethod\n                                    );\n                                    xhr.setRequestHeader(\"st-auth-mode\", transferMethod);\n                                } else {\n                                    (0, logger_1.logDebugMessage)(\n                                        \"XHRInterceptor.send: st-auth-mode header was already there in request\"\n                                    );\n                                }\n                                return [4 /*yield*/, setAuthorizationHeaderIfRequired(xhr, requestHeaders)];\n                            case 4:\n                                _a.sent();\n                                (0, logger_1.logDebugMessage)(\"XHRInterceptor.send: Making user's http call\");\n                                return [2 /*return*/, xhr.send(body)];\n                        }\n                    });\n                });\n            });\n        }\n    };\n    // This can be used by other interceptors (axios) to detect if this interceptor has been added or not\n    XMLHttpRequest.__interceptedBySuperTokens = true;\n    XMLHttpRequest.__original = oldXMLHttpRequest;\n}\nexports.addInterceptorsToXMLHttpRequest = addInterceptorsToXMLHttpRequest;\nfunction getXMLHttpStatusAndResponseTextFromFetchResponse(response) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contentType, data, responseType, _a, _b, _c;\n        return __generator(this, function (_d) {\n            switch (_d.label) {\n                case 0:\n                    contentType = response.headers.get(\"content-type\");\n                    data = \"\";\n                    responseType = \"text\";\n                    if (!(contentType === null)) return [3 /*break*/, 5];\n                    _d.label = 1;\n                case 1:\n                    _d.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, response.text()];\n                case 2:\n                    data = _d.sent();\n                    return [3 /*break*/, 4];\n                case 3:\n                    _a = _d.sent();\n                    data = \"\";\n                    return [3 /*break*/, 4];\n                case 4:\n                    return [3 /*break*/, 9];\n                case 5:\n                    if (!contentType.includes(\"application/json\")) return [3 /*break*/, 7];\n                    responseType = \"json\";\n                    _c = (_b = JSON).stringify;\n                    return [4 /*yield*/, response.json()];\n                case 6:\n                    data = _c.apply(_b, [_d.sent()]);\n                    return [3 /*break*/, 9];\n                case 7:\n                    if (!contentType.includes(\"text/\")) return [3 /*break*/, 9];\n                    return [4 /*yield*/, response.text()];\n                case 8:\n                    data = _d.sent();\n                    _d.label = 9;\n                case 9:\n                    return [\n                        2 /*return*/,\n                        {\n                            status: response.status,\n                            responseText: data,\n                            statusText: response.statusText,\n                            responseType: responseType,\n                            headers: response.headers\n                        }\n                    ];\n            }\n        });\n    });\n}\nfunction setAuthorizationHeaderIfRequired(xhr, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n        var accessToken, refreshToken;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    (0, logger_1.logDebugMessage)(\"setAuthorizationHeaderIfRequired: adding existing tokens as header\");\n                    return [4 /*yield*/, (0, fetch_1.getTokenForHeaderAuth)(\"access\")];\n                case 1:\n                    accessToken = _a.sent();\n                    return [4 /*yield*/, (0, fetch_1.getTokenForHeaderAuth)(\"refresh\")];\n                case 2:\n                    refreshToken = _a.sent();\n                    // We don't add the refresh token because that's only required by the refresh call which is done with fetch\n                    // Still, we only add the Authorization header if both are present, because we are planning to add an option to expose the\n                    // access token to the frontend while using cookie based auth - so that users can get the access token to use\n                    if (accessToken !== undefined && refreshToken !== undefined) {\n                        if (\n                            requestHeaders.some(function (_a) {\n                                var name = _a.name;\n                                return name.toLowerCase() === \"authorization\";\n                            })\n                        ) {\n                            (0, logger_1.logDebugMessage)(\n                                \"setAuthorizationHeaderIfRequired: Authorization header defined by the user, not adding\"\n                            );\n                        } else {\n                            if (accessToken !== undefined) {\n                                (0, logger_1.logDebugMessage)(\n                                    \"setAuthorizationHeaderIfRequired: added authorization header\"\n                                );\n                                xhr.setRequestHeader(\"Authorization\", \"Bearer \".concat(accessToken));\n                            }\n                            // We don't add the refresh token because that's only required by the refresh call which is done with fetch\n                        }\n                    } else {\n                        (0, logger_1.logDebugMessage)(\n                            \"setAuthorizationHeaderIfRequired: token for header based auth not found\"\n                        );\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction saveTokensFromHeaders(headers) {\n    return __awaiter(this, void 0, void 0, function () {\n        var refreshToken, accessToken, frontToken, antiCsrfToken, tok;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    (0, logger_1.logDebugMessage)(\"saveTokensFromHeaders: Saving updated tokens from the response\");\n                    refreshToken = headers.get(\"st-refresh-token\");\n                    if (!(refreshToken !== null)) return [3 /*break*/, 2];\n                    (0, logger_1.logDebugMessage)(\"saveTokensFromHeaders: saving new refresh token\");\n                    return [4 /*yield*/, (0, fetch_1.setToken)(\"refresh\", refreshToken)];\n                case 1:\n                    _a.sent();\n                    _a.label = 2;\n                case 2:\n                    accessToken = headers.get(\"st-access-token\");\n                    if (!(accessToken !== null)) return [3 /*break*/, 4];\n                    (0, logger_1.logDebugMessage)(\"saveTokensFromHeaders: saving new access token\");\n                    return [4 /*yield*/, (0, fetch_1.setToken)(\"access\", accessToken)];\n                case 3:\n                    _a.sent();\n                    _a.label = 4;\n                case 4:\n                    frontToken = headers.get(\"front-token\");\n                    if (!(frontToken !== null)) return [3 /*break*/, 6];\n                    (0, logger_1.logDebugMessage)(\"saveTokensFromHeaders: Setting sFrontToken: \" + frontToken);\n                    return [4 /*yield*/, fetch_1.FrontToken.setItem(frontToken)];\n                case 5:\n                    _a.sent();\n                    _a.label = 6;\n                case 6:\n                    antiCsrfToken = headers.get(\"anti-csrf\");\n                    if (!(antiCsrfToken !== null)) return [3 /*break*/, 9];\n                    return [4 /*yield*/, (0, fetch_1.getLocalSessionState)(true)];\n                case 7:\n                    tok = _a.sent();\n                    if (!(tok.status === \"EXISTS\")) return [3 /*break*/, 9];\n                    (0, logger_1.logDebugMessage)(\"saveTokensFromHeaders: Setting anti-csrf token\");\n                    return [4 /*yield*/, fetch_1.AntiCsrfToken.setItem(tok.lastAccessTokenUpdate, antiCsrfToken)];\n                case 8:\n                    _a.sent();\n                    _a.label = 9;\n                case 9:\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getResponseHeadersFromXHR(xhr) {\n    return new Headers(\n        xhr\n            .getAllResponseHeaders()\n            .split(\"\\r\\n\")\n            .map(function (line) {\n                var sep = line.indexOf(\": \");\n                if (sep === -1) {\n                    return [\"\", \"\"];\n                }\n                return [line.slice(0, sep), line.slice(sep + 2)];\n            })\n            .filter(function (e) {\n                return e[0].length !== 0;\n            })\n    );\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/lib/build/xmlhttprequest.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/utils/cookieHandler/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/supertokens-website/utils/cookieHandler/index.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* Copyright (c) 2020, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n * \n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License. \n*/\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n__export(__webpack_require__(/*! ../../lib/build/utils/cookieHandler */ \"./node_modules/supertokens-website/lib/build/utils/cookieHandler/index.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS91dGlscy9jb29raWVIYW5kbGVyL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQixTQUFTLG1CQUFPLENBQUMsc0hBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdXBlcnRva2Vucy13ZWJzaXRlL3V0aWxzL2Nvb2tpZUhhbmRsZXIvaW5kZXguanM/MGY3NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDb3B5cmlnaHQgKGMpIDIwMjAsIFZSQUkgTGFicyBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb2Z0d2FyZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLlxuICogXG4gKiBZb3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXlcbiAqIG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKiBcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVFxuICogV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlXG4gKiBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuIFxuKi9cblwidXNlIHN0cmljdFwiO1xuZnVuY3Rpb24gX19leHBvcnQobSkge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKCFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBleHBvcnRzW3BdID0gbVtwXTtcbn1cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5fX2V4cG9ydChyZXF1aXJlKFwiLi4vLi4vbGliL2J1aWxkL3V0aWxzL2Nvb2tpZUhhbmRsZXJcIikpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/utils/cookieHandler/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/utils/error/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/supertokens-website/utils/error/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* Copyright (c) 2020, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\nfunction __export(m) {\n  for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n\nlet d = __webpack_require__(/*! ../../lib/build/error */ \"./node_modules/supertokens-website/lib/build/error.js\");\n\nif (d.default !== undefined) {\n    __export(d);\n} else {\n    __export({\n        default: d,\n        ...d,\n    });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS91dGlscy9lcnJvci9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7O0FBRWxCLFFBQVEsbUJBQU8sQ0FBQyxvRkFBdUI7O0FBRXZDO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdXBlcnRva2Vucy13ZWJzaXRlL3V0aWxzL2Vycm9yL2luZGV4LmpzPzY4ZGIiXSwic291cmNlc0NvbnRlbnQiOlsiLyogQ29weXJpZ2h0IChjKSAyMDIwLCBWUkFJIExhYnMgYW5kL29yIGl0cyBhZmZpbGlhdGVzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc29mdHdhcmUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIikgYXMgcHVibGlzaGVkIGJ5IHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbi5cbiAqXG4gKiBZb3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXlcbiAqIG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUXG4gKiBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuIFNlZSB0aGVcbiAqIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXCJ1c2Ugc3RyaWN0XCI7XG5mdW5jdGlvbiBfX2V4cG9ydChtKSB7XG4gIGZvciAodmFyIHAgaW4gbSkgaWYgKCFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBleHBvcnRzW3BdID0gbVtwXTtcbn1cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbmxldCBkID0gcmVxdWlyZShcIi4uLy4uL2xpYi9idWlsZC9lcnJvclwiKTtcblxuaWYgKGQuZGVmYXVsdCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgX19leHBvcnQoZCk7XG59IGVsc2Uge1xuICAgIF9fZXhwb3J0KHtcbiAgICAgICAgZGVmYXVsdDogZCxcbiAgICAgICAgLi4uZCxcbiAgICB9KTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/utils/error/index.js\n"));

/***/ }),

/***/ "./node_modules/supertokens-website/utils/windowHandler/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/supertokens-website/utils/windowHandler/index.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* Copyright (c) 2020, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * \"License\") as published by the Apache Software Foundation.\n * \n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License. \n*/\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n__export(__webpack_require__(/*! ../../lib/build/utils/windowHandler */ \"./node_modules/supertokens-website/lib/build/utils/windowHandler/index.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VwZXJ0b2tlbnMtd2Vic2l0ZS91dGlscy93aW5kb3dIYW5kbGVyL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQixTQUFTLG1CQUFPLENBQUMsc0hBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdXBlcnRva2Vucy13ZWJzaXRlL3V0aWxzL3dpbmRvd0hhbmRsZXIvaW5kZXguanM/NWM3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDb3B5cmlnaHQgKGMpIDIwMjAsIFZSQUkgTGFicyBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb2Z0d2FyZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLlxuICogXG4gKiBZb3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXlcbiAqIG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKiBcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVFxuICogV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlXG4gKiBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuIFxuKi9cblwidXNlIHN0cmljdFwiO1xuZnVuY3Rpb24gX19leHBvcnQobSkge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKCFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBleHBvcnRzW3BdID0gbVtwXTtcbn1cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5fX2V4cG9ydChyZXF1aXJlKFwiLi4vLi4vbGliL2J1aWxkL3V0aWxzL3dpbmRvd0hhbmRsZXJcIikpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/supertokens-website/utils/windowHandler/index.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);